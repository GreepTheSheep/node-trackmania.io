{"meta":{"generator":"0.10.0","format":20,"date":1640519535388},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"<div align=\"center\">\n\n[![Logo](https://raw.githubusercontent.com/GreepTheSheep/node-trackmania.io/main/docs/graphic/image.svg)](https://tmio.greep.gq/#)\n\n[![NPM](https://nodei.co/npm/trackmania.io.png?downloads=true&stars=true)](https://npmjs.org/trackmania.io)\n\n[![Trackmania.io API Status](https://img.shields.io/website?down_message=Offline&label=Trackmania.io%20API&up_message=Online&url=https%3A%2F%2Ftrackmania.io)](https://trackmania.io)\n[![Discord](https://img.shields.io/discord/570024448371982373?label=Discord&logo=discord)](https://greep.gq/discord)\n\n[![npm](https://img.shields.io/npm/dw/trackmania.io?logo=npm)](https://npmjs.com/trackmania.io)\n[![NPM](https://img.shields.io/npm/l/trackmania.io)](LICENSE)\n\n[![GitHub issues](https://img.shields.io/github/issues/GreepTheSheep/node-trackmania.io?logo=github)](https://github.com/GreepTheSheep/node-trackmania.io/issues)\n[![GitHub pull requests](https://img.shields.io/github/issues-pr/GreepTheSheep/node-trackmania.io?logo=github)](https://github.com/GreepTheSheep/node-trackmania.io/pulls)\n\n[![GitHub Repo stars](https://img.shields.io/github/stars/GreepTheSheep/node-trackmania.io?logo=github&style=flat-square)](https://github.com/GreepTheSheep/node-trackmania.io/stargazers)\n[![GitHub forks](https://img.shields.io/github/forks/GreepTheSheep/node-trackmania.io?style=flat-square)](https://github.com/GreepTheSheep/node-trackmania.io/network/members)\n\n[![Builds](https://github.com/GreepTheSheep/node-trackmania.io/actions/workflows/build.yml/badge.svg)](https://github.com/GreepTheSheep/node-trackmania.io/actions/workflows/build.yml)\n\n</div>\n\n## Disclaimer - [Can I use the Trackmania.io API for my own project?](https://openplanet.nl/tmio/api)\n\n[Please read this topic](https://openplanet.nl/tmio/api)\n\n*The User Agent Header will be automatically set to your project directory name, with your current file name included, you can also set your User Agent with the method `Client.setUserAgent(\"My Project Name\");`*\n\nAPI Keys can be set with the method `Client.setAPIKey(\"yourname:yourkey\");`\n\nIf you're still unsure about your use of the API, feel free to DM Miss on the [Openplanet Discord](https://openplanet.nl/link/discord) with any further questions.\n\n---\n## API Keys\n\nAPI keys for trackmania.io can be retrieved by requesting access to Miss on the [Openplanet Discord](https://openplanet.nl/link/discord)\n\n---\n## Documentation\n\nDocumentation and examples are available on [this website](https://tmio.greep.gq/#/docs)\n\n---\n## Contributing\n\nPlease see the [CONTRIBUTING.md file](CONTRIBUTING.md)\n\n---\n## Discussion\n\nIf you want to talk about this project or just for saying hi, Join the [Project's Discord Server](https://greep.gq/discord), in the #node-tmio channel\n\n---\n## Thanks\n\nThanks to [@codecat](https://github.com/codecat) for creating trackmania.io and for helping me with their API *(and updating it everytime)*.\n\nThanks to Nadeo (Trackmania's studio) for giving an API to trackmania.io.\n\nThanks to [@dassschaf](https://github.com/dassschaf) and [@stefan-baumann](https://github.com/stefan-baumann) for chat formatting remover code in regex *(it saves my life)*\n\nThanks to [@Flirno](https://github.com/Flirno) for player COTD results API\n\nThanks to [@jonese1234](https://github.com/jonese1234) for the dataset to get the players searching\n","path":"README.md"},"contributing":{"name":"Contributing","type":"md","content":"# Contributing (v3)\n\nThanks for being part of the code!\n\n## Directory layout\n\n```css\n+---.github\n¦   +---workflows /* CI & automations for PR and releases */\n+---.vscode /* VSCode Debug and tasks file */\n+---node_modules /* Node.js modules, for npm i */\n+---src\n¦   +---client\n¦   +---data /* The data file that can be used for your views, containing useful strings */\n¦   +---managers\n¦   +---rest /* HTTP Requests */\n¦   +---structures\n¦   +---util /* Client options and private constructor strings */\n+---typings /* TypeScript auto-generated typings for VSCode and other IDE using TS */\n+---test /* Mocha tests (coming later in v3) */\n```\n\n## Pull Requests\n\nBefore opening a PR, run `npm test` to do a eslint scan then run mocha tests\n\nBefore commiting, **be sure that no files from the `typings/` directory is commited!** GitHub Actions will build it automatically after pushing\n\nWhen opening a PR, please open it to the 'develop' branch. Thanks!\n\n## Issues\n\nAll issues are appreciated, it can be suggestions, bug fixes.\n\n## Discussion\n\nIf you want to talk about this project or just for saying hi, Join the [Greep's Discord Server](https://greep.gq/discord) in the #node-tmio channel or the [Openplanet Discord Server](https://openplanet.nl/link/discord), in the #trackmania-io channel\n","path":"CONTRIBUTING.md"}}},"examples":{"name":"Examples","files":{"totd":{"name":"Today's TOTD","type":"md","content":"## Get Today's Track Of The Day\n\n```js\nconst TMIO = require('trackmania.io'),\n    client = new TMIO.Client();\n\nclient.totd.get(new Date()).then(async totd=>{\n    const map = await totd.map(),\n        author = await map.author();\n\n    // Map names aren't formatted by default (color codes for example), so we need to format them\n    const mapName = client.formatTMText(map.name);\n\n    console.log(\"Today's TOTD is called\", mapName, \"and it was created by\", author.name);\n});\n```","path":"examples/totd.md"},"totdEvent":{"name":"TOTD alert","type":"md","content":"## Gets the TOTD when it cames out every day\n\n```js\nconst TMIO = require('trackmania.io'),\n    client = new TMIO.Client();\n\nclient.on('totd', async totd=>{\n    const map = await totd.map();\n\n    // Map names aren't formatted by default (color codes for example), so we need to format them\n    const mapName = client.formatTMText(map.name);\n\n    console.log('New Track Of The Day:', mapName);\n});\n```\n","path":"examples/totdEvent.md"},"playerCOTD":{"name":"Player's COTD stats","type":"md","content":"## Get Player's COTD stats\n\n```js\nconst TMIO = require('trackmania.io'),\n    client = new TMIO.Client();\n\nclient.players.get(\"26d9a7de-4067-4926-9d93-2fe62cd869fc\").then(async player=>{\n    const cotd = await player.cotd();\n\n    console.log(`\n        ${player.name}'s COTD stats:\n        ${cotd.count} Cup Of The Day played,\n        ${cotd.stats.totalDivWins} wins in any division,\n        ${cotd.stats.averageDivRank * 100}% average rank,\n        The best division in overall was Div ${cotd.stats.bestOverall.division},\n        The best division in primary COTD was Div ${cotd.stats.bestPrimary.division},\n    `);\n});\n```","path":"examples/playerCOTD.md"},"currentCampaign":{"name":"Current official campaign","type":"md","content":"## Get the actual official Campaign\n\n```js\nconst TMIO = require('trackmania.io'),\n    client = new TMIO.Client();\n\nclient.campaigns.currentSeason().then(campaign=>{\n    console.log('The actual official campaign is', campaign.name);\n    console.log('The image URL of this campaign is:', campaign.image);\n\n    console.log('Top 10 of this campaign:');\n    const leaderboard = await campaign.leaderboard();\n    leaderboard.forEach(top=>{\n        console.log(top.position, top.playerName, \"with\", top.points, \"points\")\n    });\n});\n\n```","path":"examples/officialCampaign.md"}}}},"classes":[{"name":"BaseClient","description":"The Base Client","extends":[[["EventEmitter"]]],"props":[{"name":"options","description":"The options of the client.","readonly":true,"type":[[["defaultOptions"]]],"meta":{"line":19,"file":"BaseClient.js","path":"src/client"}},{"name":"ratelimit","description":"Get the ratelimits details on trackmania.io.","type":[[["ClientRatelimit"]]],"meta":{"line":25,"file":"BaseClient.js","path":"src/client"}}],"methods":[{"name":"_apiReq","description":"Do an API request","access":"private","params":[{"name":"url","description":"The URL to request","type":[[["string"]]]},{"name":"method","description":"The HTTP method to use","optional":true,"default":"\"GET\"","type":[[["string"]]]},{"name":"body","description":"The data to send","optional":true,"default":null,"nullable":true,"type":[[["Object"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Object",">"]]],"description":"A promise that resolves to the API response"},"meta":{"line":36,"file":"BaseClient.js","path":"src/client"}},{"name":"setUserAgent","description":"Sets a User Agent for your project.\nRequired if you run a important project.","params":[{"name":"useragent","description":"The User Agent to set to.","optional":true,"default":"this.options.api.useragent","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":48,"file":"BaseClient.js","path":"src/client"}},{"name":"setAPIKey","description":"Sets an API Key.\nRequired if you run a important project. It will triple the rate limit.\n\n<warn>This should be kept private at all times.</warn>","params":[{"name":"key","description":"The full API key. It must contains \"yourname:theactualsecretkey\"","optional":true,"default":"this.options.api.key","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":60,"file":"BaseClient.js","path":"src/client"}}],"meta":{"line":10,"file":"BaseClient.js","path":"src/client"}},{"name":"ClientRatelimit","description":"The ratelimit details of the client.","props":[{"name":"baseClient","description":"The base client.","type":[[["BaseClient"]]],"meta":{"line":75,"file":"BaseClient.js","path":"src/client"}},{"name":"ratelimit","description":"The total number of requests you can make on trackmania.io API.\nIf null, it means you haven't actually done a request","nullable":true,"type":[[["number"]]],"meta":{"line":82,"file":"BaseClient.js","path":"src/client"}},{"name":"remaining","description":"The number of requests you can make before the ratelimit resets.\nIf null, it means you haven't actually done a request","nullable":true,"type":[[["number"]]],"meta":{"line":89,"file":"BaseClient.js","path":"src/client"}},{"name":"reset","description":"The date when the ratelimit resets.\nIf null, it means you haven't actually done a request","nullable":true,"type":[[["Date"]]],"meta":{"line":96,"file":"BaseClient.js","path":"src/client"}}],"meta":{"line":69,"file":"BaseClient.js","path":"src/client"}},{"name":"Client","description":"Instantiates a new client. This is the entry point.","extends":[[["BaseClient"]]],"construct":{"name":"Client","params":[{"name":"options","description":"The options to use","optional":true,"default":"{}","type":[[["defaultOptions"]]]}]},"props":[{"name":"players","description":"The player manager","type":[[["PlayerManager"]]],"meta":{"line":34,"file":"Client.js","path":"src/client"}},{"name":"maps","description":"The map manager","type":[[["MapManager"]]],"meta":{"line":40,"file":"Client.js","path":"src/client"}},{"name":"totd","description":"The TOTD manager","type":[[["TOTDManager"]]],"meta":{"line":46,"file":"Client.js","path":"src/client"}},{"name":"cotd","description":"The COTD manager","type":[[["COTDManager"]]],"meta":{"line":52,"file":"Client.js","path":"src/client"}},{"name":"clubs","description":"The club manager","type":[[["ClubManager"]]],"meta":{"line":58,"file":"Client.js","path":"src/client"}},{"name":"campaigns","description":"The campaign manager","type":[[["CampaignManager"]]],"meta":{"line":64,"file":"Client.js","path":"src/client"}},{"name":"rooms","description":"The room manager","type":[[["RoomManager"]]],"meta":{"line":70,"file":"Client.js","path":"src/client"}},{"name":"events","description":"The TM events manager","type":[[["EventManager"]]],"meta":{"line":76,"file":"Client.js","path":"src/client"}},{"name":"news","description":"The news manager","type":[[["NewsManager"]]],"meta":{"line":82,"file":"Client.js","path":"src/client"}},{"name":"ads","description":"The Maniapub manager","type":[[["AdsManager"]]],"meta":{"line":88,"file":"Client.js","path":"src/client"}},{"name":"options","description":"The options of the client.","readonly":true,"type":[[["defaultOptions"]]],"meta":{"line":19,"file":"BaseClient.js","path":"src/client"}},{"name":"ratelimit","description":"Get the ratelimits details on trackmania.io.","type":[[["ClientRatelimit"]]],"meta":{"line":25,"file":"BaseClient.js","path":"src/client"}}],"methods":[{"name":"formatTMText","description":"Format the string and remove the TM style code on it.","params":[{"name":"str","description":"string to format","type":[[["string"]]]}],"returns":[[["string"]]],"meta":{"line":118,"file":"Client.js","path":"src/client"}},{"name":"_apiReq","description":"Do an API request","access":"private","inherits":"BaseClient#_apiReq","inherited":true,"params":[{"name":"url","description":"The URL to request","type":[[["string"]]]},{"name":"method","description":"The HTTP method to use","optional":true,"default":"\"GET\"","type":[[["string"]]]},{"name":"body","description":"The data to send","optional":true,"default":null,"nullable":true,"type":[[["Object"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Object",">"]]],"description":"A promise that resolves to the API response"},"meta":{"line":36,"file":"BaseClient.js","path":"src/client"}},{"name":"setUserAgent","description":"Sets a User Agent for your project.\nRequired if you run a important project.","inherits":"BaseClient#setUserAgent","inherited":true,"params":[{"name":"useragent","description":"The User Agent to set to.","optional":true,"default":"this.options.api.useragent","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":48,"file":"BaseClient.js","path":"src/client"}},{"name":"setAPIKey","description":"Sets an API Key.\nRequired if you run a important project. It will triple the rate limit.\n\n<warn>This should be kept private at all times.</warn>","inherits":"BaseClient#setAPIKey","inherited":true,"params":[{"name":"key","description":"The full API key. It must contains \"yourname:theactualsecretkey\"","optional":true,"default":"this.options.api.key","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":60,"file":"BaseClient.js","path":"src/client"}}],"events":[{"name":"debug","description":"Emitted for general debugging information.","params":[{"name":"instance","description":"The instance name where the debug is triggered","type":[[["string"]]]},{"name":"info","description":"The debug information","type":[[["string"]]]}],"meta":{"line":144,"file":"Client.js","path":"src/client"}},{"name":"error","description":"Emitted when there is an error when fetching external data (Trackmania.exchange for example).","params":[{"name":"error","description":"The error","type":[[["Error"]]]}],"meta":{"line":151,"file":"Client.js","path":"src/client"}},{"name":"totd","description":"Emitted when a new Track Of The Day is out on Trackmania.io.\n<info>This event is mostly emitted one minute after the release (at 19h01 CE(S)T)</info>","params":[{"name":"totd","description":"The Track of The Day","type":[[["TOTD"]]]}],"meta":{"line":97,"file":"Client.js","path":"src/client"}},{"name":"apiRequest","description":"Emitted before every API request.\nThis event can emit several times for the same request, e.g. when hitting a rate limit.\n<info>This is an informational event that is emitted quite frequently,\nit is highly recommended to check `request.url` to filter the data.</info>","params":[{"name":"request","description":"The request that is about to be sent","type":[[["APIRequest"]]]}],"meta":{"line":76,"file":"APIRequest.js","path":"src/rest"}},{"name":"apiResponse","description":"Emitted after every API request has received a response.\nThis event does not necessarily correlate to completion of the request, e.g. when hitting a rate limit.\n<info>This is an informational event that is emitted quite frequently,\nit is highly recommended to check `request.url` to filter the data.</info>","params":[{"name":"request","description":"The request that triggered this response","type":[[["APIRequest"]]]},{"name":"response","description":"The response received from the API","type":[[["Response"]]]}],"meta":{"line":87,"file":"APIRequest.js","path":"src/rest"}}],"meta":{"line":23,"file":"Client.js","path":"src/client"}},{"name":"AdsManager","description":"Represents a in-game ads manager (also called Maniapub).","props":[{"name":"client","description":"The client instance.","readonly":true,"type":[[["Client"]]],"meta":{"line":16,"file":"AdsManager.js","path":"src/managers"}},{"name":"_cache","description":"The cache manager","access":"private","type":[[["CacheManager"]]],"meta":{"line":23,"file":"AdsManager.js","path":"src/managers"}}],"methods":[{"name":"list","description":"Get the in-game Maniapub list","params":[{"name":"cache","description":"Whether to cache the ads or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["Boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["Ad",">>"]]],"meta":{"line":31,"file":"AdsManager.js","path":"src/managers"}},{"name":"get","description":"Fetches a Trackmania Maniapub and returns its data.","examples":["client.ads.get(\"fcc22a11-0d59-4fef-b102-0bf5a2df7221\").then(ad => {\n    console.log(ad.name);\n});"],"params":[{"name":"adUid","description":"The Ad UID","type":[[["string"]]]},{"name":"cache","description":"Whether to get the news from cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Ad",">"]]],"description":"The Maniapub"},"meta":{"line":58,"file":"AdsManager.js","path":"src/managers"}},{"name":"_fetch","description":"Fetches a maniapub and returns its data","access":"private","params":[{"name":"adUid","description":"The ad ID","type":[[["number"]]]},{"name":"cache","description":"Whether to cache the news or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Splashscreen",">"]]],"description":"The splashscreen"},"meta":{"line":73,"file":"AdsManager.js","path":"src/managers"}}],"meta":{"line":9,"file":"AdsManager.js","path":"src/managers"}},{"name":"CacheManager","description":"The Cache Manager is responsible for managing the cache.","extends":[[["Map"]]],"access":"private","props":[{"name":"from","description":"The class that instantiated this manager.","readonly":true,"type":[["*"]],"meta":{"line":17,"file":"CacheManager.js","path":"src/managers"}},{"name":"to","description":"The class this manager will operate on.","readonly":true,"type":[["*"]],"meta":{"line":24,"file":"CacheManager.js","path":"src/managers"}},{"name":"client","description":"The client instance.","type":[[["Client"]]],"meta":{"line":30,"file":"CacheManager.js","path":"src/managers"}},{"name":"_ttl","description":"The time to live for the cache in miliseconds.","access":"private","type":[[["number"]]],"meta":{"line":43,"file":"CacheManager.js","path":"src/managers"}}],"methods":[{"name":"_reset","description":"Resets the cache based on the ttl.","access":"private","meta":{"line":54,"file":"CacheManager.js","path":"src/managers"}}],"meta":{"line":8,"file":"CacheManager.js","path":"src/managers"}},{"name":"CampaignManager","description":"Represents a manager for campaigns.","props":[{"name":"client","description":"The client instance.","readonly":true,"type":[[["Client"]]],"meta":{"line":17,"file":"CampaignManager.js","path":"src/managers"}},{"name":"_cache","description":"The cache manager","access":"private","type":[[["CacheManager"]]],"meta":{"line":24,"file":"CampaignManager.js","path":"src/managers"}}],"methods":[{"name":"currentSeason","description":"Get the current official campaign","params":[{"name":"cache","description":"Whether to use from the cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Campaign",">"]]],"description":"The campaign"},"meta":{"line":32,"file":"CampaignManager.js","path":"src/managers"}},{"name":"officialCampaigns","description":"Get all official campaigns from recent to old","async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["CampaignSearchResult",">>"]]],"description":"The campaigns"},"meta":{"line":48,"file":"CampaignManager.js","path":"src/managers"}},{"name":"popularCampaigns","description":"Get all popular campaigns (official excluded) (50 items / page)","params":[{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["CampaignSearchResult",">>"]]],"description":"The campaigns"},"meta":{"line":66,"file":"CampaignManager.js","path":"src/managers"}},{"name":"search","description":"Searches for a campaign","examples":["client.campaigns.search('htimh').then(campaigns => {\n   client.campaigns.get(campaigns[0].clubid, campaigns[0].id).then(async campaign => {\n      const maps = await campaign.maps();\n      maps.forEach(map => console.log(map.name));\n  });\n});"],"params":[{"name":"query","description":"The query","type":[[["string"]]]},{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["CampaignSearchResult",">>"]]],"description":"The campaigns"},"meta":{"line":92,"file":"CampaignManager.js","path":"src/managers"}},{"name":"get","description":"Fetches a Trackmania campaign and returns its data","examples":["client.campaigns.get(54, 10621).then(campaign => {\n    console.log(campaign.name);\n});"],"params":[{"name":"clubId","description":"The club Id that the campaign belongs to (If it's an official campaign, set it to 0)","type":[[["number"]]]},{"name":"id","description":"The campaign Id","type":[[["number"]]]},{"name":"cache","description":"Whether to get the campaign from cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Campaign",">"]]],"description":"The campaign"},"meta":{"line":114,"file":"CampaignManager.js","path":"src/managers"}},{"name":"_fetch","description":"Fetches a campaign and returns its data","access":"private","params":[{"name":"clubId","description":"The club Id that the campaign belongs to","type":[[["number"]]]},{"name":"id","description":"The campaign Id","type":[[["string"]]]},{"name":"cache","description":"Whether to cache the campaign or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Campaign"]]],"description":"The campaign"},"meta":{"line":130,"file":"CampaignManager.js","path":"src/managers"}}],"meta":{"line":10,"file":"CampaignManager.js","path":"src/managers"}},{"name":"CampaignSearchResult","description":"The result of a campaign search. It is completely different from the {@link Campaign} object.","props":[{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":161,"file":"CampaignManager.js","path":"src/managers"}},{"name":"id","description":"The campaign's ID","type":[[["number"]]],"meta":{"line":167,"file":"CampaignManager.js","path":"src/managers"}},{"name":"clubId","description":"The campaign's Club ID","type":[[["number"]]],"meta":{"line":173,"file":"CampaignManager.js","path":"src/managers"}},{"name":"name","description":"The campaign's name","type":[[["string"]]],"meta":{"line":179,"file":"CampaignManager.js","path":"src/managers"}},{"name":"date","description":"The campaign's creation date","type":[[["Date"]]],"meta":{"line":185,"file":"CampaignManager.js","path":"src/managers"}},{"name":"mapCount","description":"The campaign's map count","type":[[["number"]]],"meta":{"line":191,"file":"CampaignManager.js","path":"src/managers"}}],"methods":[{"name":"getCampaign","description":"Return to the Campaign Object","async":true,"returns":[[["Promise","<"],["Campaign",">"]]],"meta":{"line":198,"file":"CampaignManager.js","path":"src/managers"}}],"meta":{"line":155,"file":"CampaignManager.js","path":"src/managers"}},{"name":"ClubManager","description":"Represents a manager for clubs.","props":[{"name":"client","description":"The client instance.","readonly":true,"type":[[["Client"]]],"meta":{"line":16,"file":"ClubManager.js","path":"src/managers"}},{"name":"_cache","description":"The cache manager","access":"private","type":[[["CacheManager"]]],"meta":{"line":23,"file":"ClubManager.js","path":"src/managers"}}],"methods":[{"name":"popularClubs","description":"Gets all the popular clubs","params":[{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]},{"name":"cache","description":"Whether to cache the clubs or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["Club",">>"]]],"description":"The clubs"},"meta":{"line":32,"file":"ClubManager.js","path":"src/managers"}},{"name":"search","description":"Searches for a club","params":[{"name":"query","description":"Search query","type":[[["string"]]]},{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["Club",">>"]]],"meta":{"line":51,"file":"ClubManager.js","path":"src/managers"}},{"name":"get","description":"Fetches a Trackmania Club and returns its data","examples":["client.clubs.get(54).then(club => {\n    console.log(club.name);\n});"],"params":[{"name":"id","description":"The Club Id","type":[[["number"]]]},{"name":"cache","description":"Whether to get the club from cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Club",">"]]],"description":"The Club"},"meta":{"line":72,"file":"ClubManager.js","path":"src/managers"}},{"name":"_fetch","description":"Fetches a map and returns its data","access":"private","params":[{"name":"id","description":"The Club Id","type":[[["string"]]]},{"name":"cache","description":"Whether to cache the club or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Club"]]],"description":"The club"},"meta":{"line":87,"file":"ClubManager.js","path":"src/managers"}}],"meta":{"line":9,"file":"ClubManager.js","path":"src/managers"}},{"name":"COTDManager","description":"Represents a COTD Manager.","props":[{"name":"client","description":"The client instance.","type":[[["Client"]]],"meta":{"line":16,"file":"COTDManager.js","path":"src/managers"}},{"name":"_cache","description":"The cache manager","access":"private","type":[[["CacheManager"]]],"meta":{"line":23,"file":"COTDManager.js","path":"src/managers"}}],"methods":[{"name":"get","description":"Fetches the latest COTDs and returns its data","examples":["client.cotd.get().then(event => {\n    console.log(event.name);\n});"],"params":[{"name":"page","description":"The page, each page contains 12 items","optional":true,"default":0,"type":[[["number"]]]},{"name":"cache","description":"Whether to get the list from cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["COTD",">>"]]],"description":"The COTD list"},"meta":{"line":36,"file":"COTDManager.js","path":"src/managers"}},{"name":"_fetch","description":"Fetches a COTD and returns its data","access":"private","params":[{"name":"page","description":"The page","optional":true,"default":0,"type":[[["number"]]]},{"name":"cache","description":"Whether to cache the list or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["COTD",">>"]]],"description":"The COTD list"},"meta":{"line":51,"file":"COTDManager.js","path":"src/managers"}}],"meta":{"line":10,"file":"COTDManager.js","path":"src/managers"}},{"name":"EventManager","description":"Represents a manager for in-game events.","props":[{"name":"client","description":"The client instance.","readonly":true,"type":[[["Client"]]],"meta":{"line":17,"file":"EventManager.js","path":"src/managers"}},{"name":"_cache","description":"The cache manager","access":"private","type":[[["CacheManager"]]],"meta":{"line":24,"file":"EventManager.js","path":"src/managers"}}],"methods":[{"name":"listEvents","description":"List all available events by creation date","params":[{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["EventSearchResult",">>"]]],"description":"The events"},"meta":{"line":32,"file":"EventManager.js","path":"src/managers"}},{"name":"search","description":"Searches for an event by name","params":[{"name":"query","description":"The query","type":[[["string"]]]},{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["EventSearchResult",">>"]]],"description":"The events"},"meta":{"line":45,"file":"EventManager.js","path":"src/managers"}},{"name":"get","description":"Fetches a Trackmania event and returns its data","examples":["client.events.get(706).then(event => {\n    console.log(event.name);\n});"],"params":[{"name":"eventId","description":"The event id","type":[[["number"]]]},{"name":"cache","description":"Whether to get the map from cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["TMEvent",">"]]],"description":"The event"},"meta":{"line":62,"file":"EventManager.js","path":"src/managers"}},{"name":"_fetch","description":"Fetches a event and returns its data","access":"private","params":[{"name":"eventId","description":"The event id","type":[[["number"]]]},{"name":"cache","description":"Whether to cache the map or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Event"]]],"description":"The event"},"meta":{"line":77,"file":"EventManager.js","path":"src/managers"}}],"meta":{"line":10,"file":"EventManager.js","path":"src/managers"}},{"name":"EventSearchResult","description":"The result of a campaign search. It is completely different from the {@link TMEvent} object.","props":[{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":100,"file":"EventManager.js","path":"src/managers"}},{"name":"id","description":"The event's ID","type":[[["number"]]],"meta":{"line":106,"file":"EventManager.js","path":"src/managers"}},{"name":"compId","description":"The event's competiton ID","type":[[["number"]]],"meta":{"line":112,"file":"EventManager.js","path":"src/managers"}},{"name":"clubId","description":"The event's Club ID","type":[[["number"]]],"meta":{"line":118,"file":"EventManager.js","path":"src/managers"}},{"name":"name","description":"The event's name","type":[[["string"]]],"meta":{"line":124,"file":"EventManager.js","path":"src/managers"}},{"name":"date","description":"The event's creation date","type":[[["Date"]]],"meta":{"line":130,"file":"EventManager.js","path":"src/managers"}}],"methods":[{"name":"event","description":"Return to the TMEvent Object","async":true,"returns":[[["Promise","<"],["TMEvent",">"]]],"meta":{"line":137,"file":"EventManager.js","path":"src/managers"}}],"meta":{"line":94,"file":"EventManager.js","path":"src/managers"}},{"name":"MapManager","description":"Represents a map manager.","props":[{"name":"client","description":"The client instance.","readonly":true,"type":[[["Client"]]],"meta":{"line":16,"file":"MapManager.js","path":"src/managers"}},{"name":"_cache","description":"The cache manager","access":"private","type":[[["CacheManager"]]],"meta":{"line":23,"file":"MapManager.js","path":"src/managers"}}],"methods":[{"name":"get","description":"Fetches a Trackmania map and returns its data","examples":["client.maps.get('z28QXoFnpODEGgg8MOederEVl3j').then(map => {\n    console.log(map.name);\n});"],"params":[{"name":"mapUid","description":"The map UID","type":[[["string"]]]},{"name":"cache","description":"Whether to get the map from cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["TMMap",">"]]],"description":"The map"},"meta":{"line":36,"file":"MapManager.js","path":"src/managers"}},{"name":"_fetch","description":"Fetches a map and returns its data","access":"private","params":[{"name":"mapUid","description":"The map UID","type":[[["string"]]]},{"name":"cache","description":"Whether to cache the map or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["TMMap"]]],"description":"The map"},"meta":{"line":51,"file":"MapManager.js","path":"src/managers"}}],"meta":{"line":9,"file":"MapManager.js","path":"src/managers"}},{"name":"NewsManager","description":"Represents a in-game news manager.","props":[{"name":"client","description":"The client instance.","readonly":true,"type":[[["Client"]]],"meta":{"line":16,"file":"NewsManager.js","path":"src/managers"}},{"name":"_cache","description":"The cache manager","access":"private","type":[[["CacheManager"]]],"meta":{"line":23,"file":"NewsManager.js","path":"src/managers"}}],"methods":[{"name":"list","description":"Get the in-game news list","params":[{"name":"page","description":"The page number","default":0,"type":[[["number"]]]},{"name":"cache","description":"Whether to cache the news or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["Boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["Splashscreen",">>"]]],"meta":{"line":32,"file":"NewsManager.js","path":"src/managers"}},{"name":"get","description":"Fetches a Trackmania splashscreen and returns its data.","examples":["client.news.get(143).then(news => {\n    console.log(news.title);\n});"],"params":[{"name":"newsId","description":"The splashscreen ID","type":[[["number"]]]},{"name":"cache","description":"Whether to get the news from cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Splashscreen",">"]]],"description":"The splashscreen"},"meta":{"line":59,"file":"NewsManager.js","path":"src/managers"}},{"name":"_fetch","description":"Fetches a splashscreen and returns its data","access":"private","params":[{"name":"newsId","description":"The splashscreen ID","type":[[["number"]]]},{"name":"cache","description":"Whether to cache the news or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Splashscreen",">"]]],"description":"The splashscreen"},"meta":{"line":74,"file":"NewsManager.js","path":"src/managers"}}],"meta":{"line":9,"file":"NewsManager.js","path":"src/managers"}},{"name":"PlayerManager","description":"Represents a manager for players.","props":[{"name":"client","description":"The client instance","readonly":true,"type":[[["Client"]]],"meta":{"line":18,"file":"PlayerManager.js","path":"src/managers"}},{"name":"_cache","description":"The cache manager","access":"private","type":[[["CacheManager"]]],"meta":{"line":25,"file":"PlayerManager.js","path":"src/managers"}}],"methods":[{"name":"toLogin","description":"Returns the login of an account ID","params":[{"name":"accountID","description":"The account ID","type":[[["string"]]]}],"returns":[[["string"]]],"meta":{"line":33,"file":"PlayerManager.js","path":"src/managers"}},{"name":"toAccountId","description":"Returns the Account ID of a login","params":[{"name":"login","description":"The login of the player","type":[[["string"]]]}],"returns":{"types":[[["string"]]],"nullable":true},"meta":{"line":55,"file":"PlayerManager.js","path":"src/managers"}},{"name":"search","description":"Searches for a player by its name","examples":["// Search for a player\nclient.players.search('greep').then(results => {\n   client.players.get(results[0].id).then(player => {\n      console.log('The tag of this player is', player.tag);\n  });\n});"],"params":[{"name":"query","description":"The query to search for","type":[[["string"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["PlayerSearchResult",">>"]]],"description":"The results"},"meta":{"line":85,"file":"PlayerManager.js","path":"src/managers"}},{"name":"group","description":"Get all players from a group","params":[{"name":"groupName","description":"The group name","type":[[["PlayerGroup"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["PlayerSearchResult",">>"]]],"description":"The results","nullable":true},"meta":{"line":101,"file":"PlayerManager.js","path":"src/managers"}},{"name":"topTrophies","description":"Get the trophy leaderboard","examples":["Client.players.topTrophies().then(top => {\n   console.log(\"The number 1 player is \" + top[0].player.name + \" with \" + top[0].score + \" trophies\");\n});"],"params":[{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["PlayerTopTrophy",">>"]]],"description":"The players' top trophies"},"meta":{"line":125,"file":"PlayerManager.js","path":"src/managers"}},{"name":"topMatchmaking","description":"Gets the matchmaking leaderboard","params":[{"name":"group","description":"The matchmaking group","type":[[["MatchmakingGroup"]]]},{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["PlayerTopMatchmaking",">>"]]],"description":"The players' top matchmaking"},"meta":{"line":141,"file":"PlayerManager.js","path":"src/managers"}},{"name":"get","description":"Fetches a player and returns its data","examples":["// Get a player \nclient.players.get('26d9a7de-4067-4926-9d93-2fe62cd869fc').then(player => {\n    console.log(player.name);\n});"],"params":[{"name":"accountId","description":"The account ID or its tm.io vanity name","type":[[["string"]]]},{"name":"cache","description":"Whether to get the player from cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Player",">"]]],"description":"The player"},"meta":{"line":163,"file":"PlayerManager.js","path":"src/managers"}},{"name":"_fetch","description":"Fetches a player and returns its data","access":"private","params":[{"name":"accountId","description":"The account ID or its tm.io vanity name","type":[[["string"]]]},{"name":"cache","description":"Whether to cache the player or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Player"]]],"description":"The player"},"meta":{"line":178,"file":"PlayerManager.js","path":"src/managers"}}],"meta":{"line":11,"file":"PlayerManager.js","path":"src/managers"}},{"name":"PlayerTopTrophy","description":"Represents a player top trophy","props":[{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":206,"file":"PlayerManager.js","path":"src/managers"}},{"name":"player","description":"The player","type":[[["PlayerSearchResult"]]],"meta":{"line":212,"file":"PlayerManager.js","path":"src/managers"}},{"name":"rank","description":"The rank","type":[[["number"]]],"meta":{"line":218,"file":"PlayerManager.js","path":"src/managers"}},{"name":"score","description":"The score (number of trophies)","type":[[["number"]]],"meta":{"line":224,"file":"PlayerManager.js","path":"src/managers"}}],"meta":{"line":200,"file":"PlayerManager.js","path":"src/managers"}},{"name":"PlayerTopMatchmaking","description":"The player top matchmaking","props":[{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":237,"file":"PlayerManager.js","path":"src/managers"}},{"name":"player","description":"The player","type":[[["PlayerSearchResult"]]],"meta":{"line":243,"file":"PlayerManager.js","path":"src/managers"}},{"name":"rank","description":"The rank","type":[[["number"]]],"meta":{"line":249,"file":"PlayerManager.js","path":"src/managers"}},{"name":"score","description":"The score","type":[[["number"]]],"meta":{"line":255,"file":"PlayerManager.js","path":"src/managers"}},{"name":"division","description":"The matchmaking division of the player","type":[[["MatchmakingDivision"]]],"meta":{"line":261,"file":"PlayerManager.js","path":"src/managers"}}],"meta":{"line":231,"file":"PlayerManager.js","path":"src/managers"}},{"name":"PlayerSearchResult","description":"The result of a player search. It is completely different from the {@link Player} object.","props":[{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":274,"file":"PlayerManager.js","path":"src/managers"}},{"name":"id","description":"The player's account ID","type":[[["string"]]],"meta":{"line":280,"file":"PlayerManager.js","path":"src/managers"}},{"name":"name","description":"The player's display name","type":[[["string"]]],"meta":{"line":286,"file":"PlayerManager.js","path":"src/managers"}},{"name":"tag","description":"The player's club tag (if any)","nullable":true,"type":[[["string"]]],"meta":{"line":292,"file":"PlayerManager.js","path":"src/managers"}}],"methods":[{"name":"player","description":"Return to the Player Object","async":true,"returns":[[["Promise","<"],["Player",">"]]],"meta":{"line":299,"file":"PlayerManager.js","path":"src/managers"}}],"meta":{"line":268,"file":"PlayerManager.js","path":"src/managers"}},{"name":"RoomManager","description":"Represents a manager for rooms.","props":[{"name":"client","description":"The client instance.","readonly":true,"type":[[["Client"]]],"meta":{"line":16,"file":"RoomManager.js","path":"src/managers"}},{"name":"_cache","description":"The cache manager","access":"private","type":[[["CacheManager"]]],"meta":{"line":23,"file":"RoomManager.js","path":"src/managers"}}],"methods":[{"name":"popularRooms","description":"Get the popular Club rooms (by number of players connected)","params":[{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["RoomSearchResult",">>"]]],"description":"The rooms"},"meta":{"line":31,"file":"RoomManager.js","path":"src/managers"}},{"name":"search","description":"Searches for a room","params":[{"name":"query","description":"The query to search for","type":[[["string"]]]},{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["RoomSearchResult",">>"]]],"description":"The rooms"},"meta":{"line":44,"file":"RoomManager.js","path":"src/managers"}},{"name":"get","description":"Fetches a Trackmania room (server) and returns its data","examples":["client.rooms.get(338, 1180).then(room => {\n    console.log(room.name);\n});"],"params":[{"name":"clubId","description":"The club Id that the room belongs to","type":[[["number"]]]},{"name":"id","description":"The room Id","type":[[["number"]]]},{"name":"cache","description":"Whether to get the room from cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Room",">"]]],"description":"The room"},"meta":{"line":62,"file":"RoomManager.js","path":"src/managers"}},{"name":"_fetch","description":"Fetches a room and returns its data","access":"private","params":[{"name":"clubId","description":"The club Id that the room belongs to","type":[[["number"]]]},{"name":"id","description":"The room Id","type":[[["string"]]]},{"name":"cache","description":"Whether to cache the room or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Campaign"]]],"description":"The room"},"meta":{"line":78,"file":"RoomManager.js","path":"src/managers"}}],"meta":{"line":9,"file":"RoomManager.js","path":"src/managers"}},{"name":"RoomSearchResult","description":"The result of a campaign search. It is completely different from the {@link Room} object.","props":[{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":101,"file":"RoomManager.js","path":"src/managers"}},{"name":"id","description":"The room's ID","type":[[["number"]]],"meta":{"line":107,"file":"RoomManager.js","path":"src/managers"}},{"name":"clubId","description":"The room's Club ID","type":[[["number"]]],"meta":{"line":113,"file":"RoomManager.js","path":"src/managers"}},{"name":"name","description":"The room's name","type":[[["string"]]],"meta":{"line":119,"file":"RoomManager.js","path":"src/managers"}},{"name":"nadeoHosted","description":"Whether the room is hosted by Nadeo","type":[[["boolean"]]],"meta":{"line":125,"file":"RoomManager.js","path":"src/managers"}},{"name":"playerCount","description":"The player count","type":[[["number"]]],"meta":{"line":131,"file":"RoomManager.js","path":"src/managers"}},{"name":"maxPlayerCount","description":"The max player count","type":[[["number"]]],"meta":{"line":137,"file":"RoomManager.js","path":"src/managers"}}],"methods":[{"name":"room","description":"Return to the Room Object","async":true,"returns":[[["Promise","<"],["Room",">"]]],"meta":{"line":144,"file":"RoomManager.js","path":"src/managers"}}],"meta":{"line":95,"file":"RoomManager.js","path":"src/managers"}},{"name":"TOTDManager","description":"Represents a manager for TOTDs.","props":[{"name":"client","description":"The client instance.","readonly":true,"type":[[["Client"]]],"meta":{"line":16,"file":"TOTDManager.js","path":"src/managers"}},{"name":"_cache","description":"The cache manager","access":"private","type":[[["CacheManager"]]],"meta":{"line":23,"file":"TOTDManager.js","path":"src/managers"}}],"methods":[{"name":"_calculateMonths","description":"Calculate the number of months between today and the month and year","access":"private","params":[{"name":"date","description":"The date","type":[[["Date"]]]}],"meta":{"line":31,"file":"TOTDManager.js","path":"src/managers"}},{"name":"get","description":"Fetches a TOTD with it's day and returns its data","examples":["// Gets the TOTD of today\nclient.totd.get(new Date()).then(totd => {\n    console.log(totd.map.name);\n});"],"params":[{"name":"date","description":"The date","type":[[["Date"]]]},{"name":"cache","description":"Whether to get the map from cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["TOTD",">"]]],"description":"The map"},"meta":{"line":50,"file":"TOTDManager.js","path":"src/managers"}},{"name":"_fetch","description":"Fetches a TOTD and returns its data","access":"private","params":[{"name":"date","description":"The date","type":[[["Date"]]]},{"name":"cache","description":"Whether to cache the map or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["TOTD"]]],"description":"The map"},"meta":{"line":71,"file":"TOTDManager.js","path":"src/managers"}}],"meta":{"line":9,"file":"TOTDManager.js","path":"src/managers"}},{"name":"APIRequest","description":"APIRequest class","access":"private","construct":{"name":"APIRequest","params":[{"name":"client","description":"The client object","type":[[["BaseClient"]]]}]},"props":[{"name":"client","description":"The client that created this request","readonly":true,"type":[[["BaseClient"]]],"meta":{"line":20,"file":"APIRequest.js","path":"src/rest"}},{"name":"UA","description":"The User-Agent string which is used for the requests","type":[[["string"]]],"meta":{"line":40,"file":"APIRequest.js","path":"src/rest"}},{"name":"key","description":"The API key for the requests on trackmania.io","type":[[["string"]]],"meta":{"line":45,"file":"APIRequest.js","path":"src/rest"}}],"methods":[{"name":"do","description":"Makes a request to the API","params":[{"name":"url","description":"The URL","type":[[["string"]]]},{"name":"method","description":"The method","optional":true,"default":"\"GET\"","type":[[["string"]]]},{"name":"body","description":"The body","optional":true,"default":null,"type":[[["Object"]]]}],"returns":{"types":[[["Promise","<"],["Object",">"]]],"description":"The response"},"meta":{"line":62,"file":"APIRequest.js","path":"src/rest"}}],"meta":{"line":10,"file":"APIRequest.js","path":"src/rest"}},{"name":"Ad","description":"The Maniapub","props":[{"name":"client","description":"The client instance.","type":[[["Client"]]],"meta":{"line":13,"file":"Ad.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":20,"file":"Ad.js","path":"src/structures"}},{"name":"uid","description":"The Ad UID","type":[[["string"]]],"meta":{"line":27,"file":"Ad.js","path":"src/structures"}},{"name":"name","description":"The name of the Ad","type":[[["string"]]],"meta":{"line":35,"file":"Ad.js","path":"src/structures"}},{"name":"type","description":"The type of the Ad","type":[[["AdType"]]],"meta":{"line":43,"file":"Ad.js","path":"src/structures"}},{"name":"url","description":"The URL linked with this ad","type":[[["string"]]],"meta":{"line":51,"file":"Ad.js","path":"src/structures"}},{"name":"verticalImage","description":"The 2x3 image URL of this ad (shown on the vertical screen)","type":[[["string"]]],"meta":{"line":59,"file":"Ad.js","path":"src/structures"}},{"name":"image","description":"The 16x9 image URL of this ad (shown on the big screen)","type":[[["string"]]],"meta":{"line":67,"file":"Ad.js","path":"src/structures"}},{"name":"cpImage","description":"The 64x10 image URL of this ad (shown on Start, CPs and Finish)","type":[[["string"]]],"meta":{"line":75,"file":"Ad.js","path":"src/structures"}},{"name":"media","description":"The media of this ad (mostly the vertical image)","type":[[["string"]]],"meta":{"line":83,"file":"Ad.js","path":"src/structures"}},{"name":"displayFormat","description":"The display format of this screen (2x3 vertical image by default)","type":[[["string"]]],"meta":{"line":91,"file":"Ad.js","path":"src/structures"}}],"meta":{"line":7,"file":"Ad.js","path":"src/structures"}},{"name":"Campaign","description":"The Campaign class represents a campaign.","props":[{"name":"client","description":"The client object of the campaign.","type":[[["Client"]]],"meta":{"line":16,"file":"Campaign.js","path":"src/structures"}},{"name":"_data","description":"The data object","access":"private","type":[[["Object"]]],"meta":{"line":23,"file":"Campaign.js","path":"src/structures"}},{"name":"id","description":"The id of the campaign.","type":[[["number"]]],"meta":{"line":30,"file":"Campaign.js","path":"src/structures"}},{"name":"name","description":"The name of the campaign.","type":[[["string"]]],"meta":{"line":38,"file":"Campaign.js","path":"src/structures"}},{"name":"isOfficial","description":"Whether the campaign is official.","type":[[["boolean"]]],"meta":{"line":46,"file":"Campaign.js","path":"src/structures"}},{"name":"image","description":"The image URL of the campaign. If this is an official campaign, the decal image URL is returned.","type":[[["string"]]],"meta":{"line":54,"file":"Campaign.js","path":"src/structures"}},{"name":"createdAt","description":"The creation date of the campaign.","type":[[["Date"]]],"meta":{"line":65,"file":"Campaign.js","path":"src/structures"}},{"name":"updatedAt","description":"The last update date of the campaign.","type":[[["Date"]]],"meta":{"line":73,"file":"Campaign.js","path":"src/structures"}},{"name":"leaderboardId","description":"The leaderboard id of the campaign.","type":[[["string"]]],"meta":{"line":90,"file":"Campaign.js","path":"src/structures"}},{"name":"media","description":"The media images of the campaign, if this is an official campaign.","nullable":true,"type":[[["CampaignMedia"]]],"meta":{"line":131,"file":"Campaign.js","path":"src/structures"}}],"methods":[{"name":"club","description":"The club that owns the campaign. (if it's not an official campaign)","async":true,"returns":{"types":[[["Promise","<"],["Club",">"]]],"nullable":true},"meta":{"line":81,"file":"Campaign.js","path":"src/structures"}},{"name":"maps","description":"The list of maps in the campaign.","examples":["Client.campaigns.get(0, 11612).then(async campaign => {\n  const maps = await campaign.maps();\n  maps.forEach(map => console.log(map.name));\n});"],"async":true,"returns":[[["Promise","<"],["Array","<"],["TMMap",">>"]]],"meta":{"line":103,"file":"Campaign.js","path":"src/structures"}},{"name":"leaderboard","description":"Get the top 10 players of the campaign","async":true,"returns":[[["Promise","<"],["Array","<"],["CampaignLeaderboard",">>"]]],"meta":{"line":116,"file":"Campaign.js","path":"src/structures"}}],"meta":{"line":10,"file":"Campaign.js","path":"src/structures"}},{"name":"CampaignMedia","description":"The media images of an official campaign.","props":[{"name":"client","description":"The client object of the campaign.","type":[[["Client"]]],"meta":{"line":150,"file":"Campaign.js","path":"src/structures"}},{"name":"decal","description":"The decal image URL of the campaign.","type":[[["string"]]],"meta":{"line":156,"file":"Campaign.js","path":"src/structures"}},{"name":"buttonBackground","description":"The button background image URL of the campaign.","type":[[["string"]]],"meta":{"line":162,"file":"Campaign.js","path":"src/structures"}},{"name":"buttonForeground","description":"The button foreground image URL of the campaign.","type":[[["string"]]],"meta":{"line":168,"file":"Campaign.js","path":"src/structures"}},{"name":"liveButtonBackground","description":"The live button background image URL of the campaign.","type":[[["string"]]],"meta":{"line":174,"file":"Campaign.js","path":"src/structures"}},{"name":"liveButtonForeground","description":"The live button foreground image URL of the campaign.","type":[[["string"]]],"meta":{"line":180,"file":"Campaign.js","path":"src/structures"}},{"name":"popupBackground","description":"The popup background image URL of the campaign.","type":[[["string"]]],"meta":{"line":186,"file":"Campaign.js","path":"src/structures"}},{"name":"popup","description":"The popup foreground image URL of the campaign.","type":[[["string"]]],"meta":{"line":192,"file":"Campaign.js","path":"src/structures"}}],"meta":{"line":141,"file":"Campaign.js","path":"src/structures"}},{"name":"CampaignLeaderboard","description":"The leaderboard of a campaign","props":[{"name":"campaign","description":"The campaign","type":[[["Campaign"]]],"meta":{"line":205,"file":"Campaign.js","path":"src/structures"}},{"name":"client","description":"The client instance.","type":[[["Client"]]],"meta":{"line":211,"file":"Campaign.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":218,"file":"Campaign.js","path":"src/structures"}},{"name":"playerName","description":"The player name","type":[[["string"]]],"meta":{"line":234,"file":"Campaign.js","path":"src/structures"}},{"name":"position","description":"The position","type":[[["number"]]],"meta":{"line":242,"file":"Campaign.js","path":"src/structures"}},{"name":"points","description":"The number of points","type":[[["number"]]],"meta":{"line":250,"file":"Campaign.js","path":"src/structures"}}],"methods":[{"name":"player","description":"Fetches the player","async":true,"returns":[[["Promise","<"],["Player",">"]]],"meta":{"line":225,"file":"Campaign.js","path":"src/structures"}}],"meta":{"line":199,"file":"Campaign.js","path":"src/structures"}},{"name":"Club","description":"The Club class represents a club in Trackmania.","props":[{"name":"client","description":"The client object of the club","type":[[["Client"]]],"meta":{"line":16,"file":"Club.js","path":"src/structures"}},{"name":"_data","description":"The data of the club","access":"private","type":[[["Object"]]],"meta":{"line":23,"file":"Club.js","path":"src/structures"}},{"name":"id","description":"The Club ID","type":[[["number"]]],"meta":{"line":30,"file":"Club.js","path":"src/structures"}},{"name":"name","description":"The Club name","type":[[["string"]]],"meta":{"line":38,"file":"Club.js","path":"src/structures"}},{"name":"tag","description":"The Club tag","type":[[["string"]]],"meta":{"line":46,"file":"Club.js","path":"src/structures"}},{"name":"description","description":"The Club description","type":[[["string"]]],"meta":{"line":54,"file":"Club.js","path":"src/structures"}},{"name":"logo","description":"The Club logo URL","type":[[["string"]]],"meta":{"line":62,"file":"Club.js","path":"src/structures"}},{"name":"decal","description":"The Club decal URL","type":[[["string"]]],"meta":{"line":70,"file":"Club.js","path":"src/structures"}},{"name":"background","description":"The Club background URL","type":[[["string"]]],"meta":{"line":78,"file":"Club.js","path":"src/structures"}},{"name":"vertical","description":"The club vertical background URL","type":[[["string"]]],"meta":{"line":86,"file":"Club.js","path":"src/structures"}},{"name":"screens","description":"The club screens URL. Imares are in DDS format, except the sponsor 4x1 that may be in PNG.","type":[[["Object","<"],["string",", "],["string",">"]]],"meta":{"line":94,"file":"Club.js","path":"src/structures"}},{"name":"createdAt","description":"The club creation date","type":[[["Date"]]],"meta":{"line":108,"file":"Club.js","path":"src/structures"}},{"name":"popularity","description":"The club popularity level","type":[[["number"]]],"meta":{"line":116,"file":"Club.js","path":"src/structures"}},{"name":"state","description":"The club state (public/private)","type":[[["string"]]],"meta":{"line":124,"file":"Club.js","path":"src/structures"}},{"name":"featured","description":"Whether the club is featured","type":[[["boolean"]]],"meta":{"line":132,"file":"Club.js","path":"src/structures"}},{"name":"memberCount","description":"The club member count","type":[[["number"]]],"meta":{"line":140,"file":"Club.js","path":"src/structures"}},{"name":"_membersCache","description":"The cache manager for members","access":"private","type":[[["CacheManager"]]],"meta":{"line":171,"file":"Club.js","path":"src/structures"}},{"name":"_activitiesCache","description":"The cache manager for members","access":"private","type":[[["CacheManager"]]],"meta":{"line":203,"file":"Club.js","path":"src/structures"}}],"methods":[{"name":"creator","description":"The club creator player","examples":["Client.clubs.get(54).then(async club => {\n    const creator = await club.creator;\n    console.log(creator.name);\n});"],"async":true,"returns":[[["Promise","<"],["Player",">"]]],"meta":{"line":153,"file":"Club.js","path":"src/structures"}},{"name":"fetchMembers","description":"The club members (Members are sorted by role and club interaction time.)","params":[{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]},{"name":"cache","description":"Whether to cache the result","optional":true,"default":true,"type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["ClubMember",">>"]]],"meta":{"line":163,"file":"Club.js","path":"src/structures"}},{"name":"fetchActivities","description":"The club activities","params":[{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]},{"name":"cache","description":"Whether to cache the result","optional":true,"default":true,"type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["ClubActivity",">>"]]],"meta":{"line":196,"file":"Club.js","path":"src/structures"}}],"meta":{"line":10,"file":"Club.js","path":"src/structures"}},{"name":"ClubMember","description":"Represents a club member (player) in the club","props":[{"name":"club","description":"The club object","type":[[["Club"]]],"meta":{"line":232,"file":"Club.js","path":"src/structures"}},{"name":"_data","description":"The data of the club","access":"private","type":[[["Object"]]],"meta":{"line":239,"file":"Club.js","path":"src/structures"}},{"name":"joinDate","description":"The join date on the club","type":[[["Date"]]],"meta":{"line":254,"file":"Club.js","path":"src/structures"}},{"name":"role","description":"The member role","type":[[["ClubMemberRole"]]],"meta":{"line":262,"file":"Club.js","path":"src/structures"}},{"name":"isCreator","description":"Whether the member is a club creator","type":[[["boolean"]]],"meta":{"line":270,"file":"Club.js","path":"src/structures"}},{"name":"isAdmin","description":"Whether the member is a club admin","type":[[["boolean"]]],"meta":{"line":278,"file":"Club.js","path":"src/structures"}},{"name":"isVip","description":"Whether the member is a vip","type":[[["boolean"]]],"meta":{"line":286,"file":"Club.js","path":"src/structures"}}],"methods":[{"name":"member","description":"The member","async":true,"returns":[[["Promise","<"],["Player",">"]]],"meta":{"line":246,"file":"Club.js","path":"src/structures"}}],"meta":{"line":226,"file":"Club.js","path":"src/structures"}},{"name":"ClubActivity","description":"Represents a club activity in the club","props":[{"name":"club","description":"The club object","type":[[["Club"]]],"meta":{"line":300,"file":"Club.js","path":"src/structures"}},{"name":"_data","description":"The data of the club","access":"private","type":[[["Object"]]],"meta":{"line":307,"file":"Club.js","path":"src/structures"}},{"name":"id","description":"The activity id","type":[[["number"]]],"meta":{"line":314,"file":"Club.js","path":"src/structures"}},{"name":"name","description":"The activity name","type":[[["string"]]],"meta":{"line":322,"file":"Club.js","path":"src/structures"}},{"name":"type","description":"The activity type","type":[[["string"]]],"meta":{"line":330,"file":"Club.js","path":"src/structures"}},{"name":"isPublic","description":"Whether the activity is a public activity","type":[[["boolean"]]],"meta":{"line":338,"file":"Club.js","path":"src/structures"}},{"name":"media","description":"The activity image URL","type":[[["string"]]],"meta":{"line":346,"file":"Club.js","path":"src/structures"}},{"name":"isPasswordProtected","description":"Whether the activity is password protected","type":[[["boolean"]]],"meta":{"line":354,"file":"Club.js","path":"src/structures"}},{"name":"externalId","description":"The activity external id","type":[[["number"]]],"meta":{"line":362,"file":"Club.js","path":"src/structures"}}],"methods":[{"name":"campaign","description":"If the activity is a campaign, returns the campaign object of the activity","async":true,"returns":{"types":[[["Promise","<"],["Campaign",">"]]],"nullable":true},"meta":{"line":370,"file":"Club.js","path":"src/structures"}},{"name":"room","description":"If the activity is a room, returns the room object of the activity","async":true,"returns":{"types":[[["Promise","<"],["Room",">"]]],"nullable":true},"meta":{"line":379,"file":"Club.js","path":"src/structures"}}],"meta":{"line":294,"file":"Club.js","path":"src/structures"}},{"name":"COTD","description":"Represents a COTD event.","props":[{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":13,"file":"COTD.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":20,"file":"COTD.js","path":"src/structures"}},{"name":"id","description":"The COTD identifier","type":[[["number"]]],"meta":{"line":35,"file":"COTD.js","path":"src/structures"}},{"name":"name","description":"The COTD name","type":[[["string"]]],"meta":{"line":43,"file":"COTD.js","path":"src/structures"}},{"name":"playerCount","description":"The number of players in this COTD","type":[[["number"]]],"meta":{"line":51,"file":"COTD.js","path":"src/structures"}},{"name":"startDate","description":"The start date of this COTD","type":[[["Date"]]],"meta":{"line":59,"file":"COTD.js","path":"src/structures"}},{"name":"endDate","description":"The end date of this COTD","type":[[["Date"]]],"meta":{"line":67,"file":"COTD.js","path":"src/structures"}}],"methods":[{"name":"getEvent","description":"The event associated on this COTD","async":true,"returns":[[["Promise","<"],["TMEvent",">"]]],"meta":{"line":27,"file":"COTD.js","path":"src/structures"}}],"meta":{"line":7,"file":"COTD.js","path":"src/structures"}},{"name":"MatchmakingDivision","description":"Represents a division in the matchmaking system.","props":[{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":14,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"typeId","description":"The type of the division","type":[[["number"]]],"meta":{"line":20,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"_division","description":"The division data","access":"private","type":[[["Object"]]],"meta":{"line":28,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"position","description":"The division position","type":[[["number"]]],"meta":{"line":35,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"typeName","description":"The type name of the division","type":[[["string"]]],"meta":{"line":43,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"name","description":"The name of the division","type":[[["string"]]],"meta":{"line":51,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"rule","description":"The rule identifier of this division","type":[[["string"]]],"meta":{"line":60,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"minPoints","description":"The minimum points to the division","type":[[["number"]]],"meta":{"line":68,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"maxPoints","description":"The maximum points to the division","type":[[["number"]]],"meta":{"line":77,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"image","description":"The image of the division. If Royal, the crown","type":[[["string"]]],"meta":{"line":86,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"lion","description":"The Royal Lion image of the division","type":[[["string"]]],"meta":{"line":97,"file":"MatchmakingDivision.js","path":"src/structures"}}],"meta":{"line":8,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"Player","description":"Represents a player in Trackmania.","props":[{"name":"client","description":"The client object of the player","type":[[["Client"]]],"meta":{"line":15,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The data of the player","access":"private","type":[[["Object"]]],"meta":{"line":22,"file":"Player.js","path":"src/structures"}},{"name":"id","description":"The account ID of the player","type":[[["string"]]],"meta":{"line":48,"file":"Player.js","path":"src/structures"}},{"name":"login","description":"The login of the player","type":[[["string"]]],"meta":{"line":56,"file":"Player.js","path":"src/structures"}},{"name":"name","description":"The display name of the player","type":[[["string"]]],"meta":{"line":64,"file":"Player.js","path":"src/structures"}},{"name":"firstLogin","description":"The date of the player's first login","readonly":true,"type":[[["Date"]]],"meta":{"line":73,"file":"Player.js","path":"src/structures"}},{"name":"clubTag","description":"The club tag of the player (non-formatted)","type":[[["string"]]],"meta":{"line":81,"file":"Player.js","path":"src/structures"}},{"name":"lastClubTagChange","description":"The last change of the player's club tag","readonly":true,"type":[[["Date"]]],"meta":{"line":90,"file":"Player.js","path":"src/structures"}},{"name":"zone","description":"The player's zone data with the ranking of the player in the zone","type":[[["Array","<"],["PlayerZone",">"]]],"meta":{"line":101,"file":"Player.js","path":"src/structures"}},{"name":"trophies","description":"The player's trophy data","type":[[["PlayerTrophies"]]],"meta":{"line":110,"file":"Player.js","path":"src/structures"}},{"name":"_PlayerTrophies","description":"The player's trophy data","access":"private","type":[[["PlayerTrophies"]]],"meta":{"line":117,"file":"Player.js","path":"src/structures"}},{"name":"meta","description":"The player's meta data","type":[[["PlayerMeta"]]],"meta":{"line":126,"file":"Player.js","path":"src/structures"}},{"name":"_PlayerMeta","description":"The player's meta data","access":"private","type":[[["PlayerMeta"]]],"meta":{"line":133,"file":"Player.js","path":"src/structures"}},{"name":"_PlayerMatchmaking","description":"The player's matchmaking data","access":"private","type":[[["PlayerMatchmaking"]]],"meta":{"line":165,"file":"Player.js","path":"src/structures"}}],"methods":[{"name":"_constructZoneArray","description":"Constructs an array of the zone of the player","access":"private","returns":[[["Array","<"],["Object",">"]]],"meta":{"line":30,"file":"Player.js","path":"src/structures"}},{"name":"cotd","description":"The player's COTD Data","params":[{"name":"page","description":"The page number.","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"returns":[[["Promise","<"],["PlayerCOTD",">"]]],"meta":{"line":143,"file":"Player.js","path":"src/structures"}},{"name":"matchmaking","description":"The player's matchmaking data","params":[{"name":"type","description":"The type of matchmaking data to return","optional":true,"default":"\"3v3\"","type":[[["MatchmakingGroup"]]]}],"returns":[[["PlayerMatchmaking"]]],"meta":{"line":158,"file":"Player.js","path":"src/structures"}}],"meta":{"line":9,"file":"Player.js","path":"src/structures"}},{"name":"PlayerZone","description":"Represents a zone in a player","props":[{"name":"player","description":"The player instance","type":[[["Player"]]],"meta":{"line":181,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client that instancied the Player","type":[[["Client"]]],"meta":{"line":187,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":194,"file":"Player.js","path":"src/structures"}},{"name":"name","description":"The name of the zone","type":[[["string"]]],"meta":{"line":201,"file":"Player.js","path":"src/structures"}},{"name":"flag","description":"The flag of the zone","type":[[["string"]]],"meta":{"line":209,"file":"Player.js","path":"src/structures"}},{"name":"ranking","description":"The ranking of the player in the zone","type":[[["number"]]],"meta":{"line":217,"file":"Player.js","path":"src/structures"}}],"meta":{"line":175,"file":"Player.js","path":"src/structures"}},{"name":"PlayerTrophies","description":"Represents the trophies of a player","props":[{"name":"player","description":"The player object","type":[[["Player"]]],"meta":{"line":231,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client object","type":[[["Client"]]],"meta":{"line":237,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":244,"file":"Player.js","path":"src/structures"}},{"name":"points","description":"The points of the player","type":[[["number"]]],"meta":{"line":251,"file":"Player.js","path":"src/structures"}},{"name":"lastChange","description":"The last time the player got a trophy","readonly":true,"type":[[["Date"]]],"meta":{"line":260,"file":"Player.js","path":"src/structures"}},{"name":"echelon","description":"The echelon level of the player","type":[[["PlayerEchelon"]]],"meta":{"line":268,"file":"Player.js","path":"src/structures"}},{"name":"_PlayerEchelon","description":"The player's echelon data","access":"private","type":[[["PlayerEchelon"]]],"meta":{"line":275,"file":"Player.js","path":"src/structures"}},{"name":"trophies","description":"The number of trophies the player has","type":[[["Array","<"],["number",">"]]],"meta":{"line":299,"file":"Player.js","path":"src/structures"}}],"methods":[{"name":"trophy","description":"The number of trophies the player has","examples":["// Get number of trophy 5 (aka silver 2 trophy)\nplayer.trophies.trophy(5);"],"params":[{"name":"number","description":"The trophy number, from 1 (bronze 1) to 9 (gold 3)","optional":true,"default":1,"type":[[["number"]]]}],"returns":[[["number"]]],"meta":{"line":288,"file":"Player.js","path":"src/structures"}},{"name":"history","description":"The last 25 trophies gains of the player","params":[{"name":"page","description":"The page number.","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"meta":{"line":308,"file":"Player.js","path":"src/structures"}}],"meta":{"line":225,"file":"Player.js","path":"src/structures"}},{"name":"PlayerTrophyHistory","description":"Represents the history of a player's trophies","props":[{"name":"player","description":"The player object","type":[[["Player"]]],"meta":{"line":332,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client object","type":[[["Client"]]],"meta":{"line":338,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":345,"file":"Player.js","path":"src/structures"}},{"name":"trophies","description":"The number of trophies the player has","type":[[["Array","<"],["number",">"]]],"meta":{"line":367,"file":"Player.js","path":"src/structures"}},{"name":"date","description":"The date of the gain","type":[[["Date"]]],"meta":{"line":375,"file":"Player.js","path":"src/structures"}},{"name":"rank","description":"The rank of the player","type":[[["number"]]],"meta":{"line":383,"file":"Player.js","path":"src/structures"}},{"name":"type","description":"The types of the achievement","type":[[["PlayerTrophyAchievementType"]]],"meta":{"line":391,"file":"Player.js","path":"src/structures"}},{"name":"_achievement","description":"The achievement type object","access":"private","type":[[["PlayerTrophyAchievementType"]]],"meta":{"line":400,"file":"Player.js","path":"src/structures"}}],"methods":[{"name":"trophy","description":"The number of trophies the player has","examples":["// Get number of trophy 5 (aka silver 2 trophy) on the latest gain\nplayer.trophies.history[0].trophy(5);"],"params":[{"name":"number","description":"The trophy number, from 1 (bronze 1) to 9 (gold 3)","optional":true,"default":1,"type":[[["number"]]]}],"returns":[[["number"]]],"meta":{"line":356,"file":"Player.js","path":"src/structures"}},{"name":"map","description":"The map where the achievement was earned (if any)","async":true,"returns":[[["Promise","<"],["TMMap",">"]],[["null"]]],"meta":{"line":409,"file":"Player.js","path":"src/structures"}}],"meta":{"line":326,"file":"Player.js","path":"src/structures"}},{"name":"PlayerTrophyAchievementType","description":"Represents the type of an achievement","props":[{"name":"player","description":"The player object","type":[[["Player"]]],"meta":{"line":425,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client object","type":[[["Client"]]],"meta":{"line":431,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":438,"file":"Player.js","path":"src/structures"}},{"name":"type","description":"Gets the type of the achievement","type":[[["string"]]],"meta":{"line":445,"file":"Player.js","path":"src/structures"}},{"name":"id","description":"Gets the ID of the achievement","type":[[["string"]]],"meta":{"line":453,"file":"Player.js","path":"src/structures"}},{"name":"soloRankingType","description":"Gets the solo ranking achievement type (if the type is SoloRanking)","nullable":true,"type":[[["string"]]],"meta":{"line":461,"file":"Player.js","path":"src/structures"}},{"name":"soloRankingSeasonId","description":"Gets the solo ranking season ID (if the type is SoloRanking)","nullable":true,"type":[[["string"]]],"meta":{"line":470,"file":"Player.js","path":"src/structures"}},{"name":"competitionId","description":"Gets the competition id (if the type is CompetitionRanking)","nullable":true,"type":[[["string"]]],"meta":{"line":479,"file":"Player.js","path":"src/structures"}},{"name":"competitionName","description":"Gets the competition name (if the type is CompetitionRanking)","nullable":true,"type":[[["string"]]],"meta":{"line":488,"file":"Player.js","path":"src/structures"}},{"name":"competitionStage","description":"Gets the competition stage (if the type is CompetitionRanking)","nullable":true,"type":[[["string"]]],"meta":{"line":497,"file":"Player.js","path":"src/structures"}},{"name":"competitionStageStep","description":"Gets the competition stage step (if the type is CompetitionRanking)","nullable":true,"type":[[["string"]]],"meta":{"line":506,"file":"Player.js","path":"src/structures"}},{"name":"competitionType","description":"Gets the competition type (if the type is CompetitionRanking)","nullable":true,"type":[[["string"]]],"meta":{"line":515,"file":"Player.js","path":"src/structures"}},{"name":"soloMedalType","description":"Gets the Solo Medal type (if the type is SoloMedal)","nullable":true,"type":[[["string"]]],"meta":{"line":524,"file":"Player.js","path":"src/structures"}},{"name":"soloMedalLevel","description":"Gets the solo medal level (if the type is SoloMedal)","nullable":true,"type":[[["number"]]],"meta":{"line":533,"file":"Player.js","path":"src/structures"}},{"name":"liveMatchServerId","description":"Gets the server ID of the Live Match (if the type is LiveMatch)","nullable":true,"type":[[["string"]]],"meta":{"line":542,"file":"Player.js","path":"src/structures"}},{"name":"liveMatchGameMode","description":"Gets the game mode of the Live Match (if the type is LiveMatch)","nullable":true,"type":[[["string"]]],"meta":{"line":551,"file":"Player.js","path":"src/structures"}},{"name":"liveMatchDuration","description":"Gets the duration of the Live Match in seconds (if the type is LiveMatch)","nullable":true,"type":[[["number"]]],"meta":{"line":560,"file":"Player.js","path":"src/structures"}},{"name":"liveMatchRank","description":"Gets the rank of the Live Match (if the type is LiveMatch)","nullable":true,"type":[[["number"]]],"meta":{"line":569,"file":"Player.js","path":"src/structures"}},{"name":"liveMatchTrophyRank","description":"Gets the trophy rank of the Live Match (if the type is LiveMatch)","nullable":true,"type":[[["number"]]],"meta":{"line":578,"file":"Player.js","path":"src/structures"}}],"meta":{"line":419,"file":"Player.js","path":"src/structures"}},{"name":"PlayerEchelon","description":"Represents a player's echelon","props":[{"name":"player","description":"The player object","type":[[["Player"]]],"meta":{"line":593,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client object of the player","type":[[["Client"]]],"meta":{"line":599,"file":"Player.js","path":"src/structures"}},{"name":"number","description":"The echelon number","type":[[["number"]]],"meta":{"line":605,"file":"Player.js","path":"src/structures"}},{"name":"name","description":"The name of the echelon","type":[[["string"]]],"meta":{"line":612,"file":"Player.js","path":"src/structures"}},{"name":"image","description":"The image URL of the echelon","type":[[["string"]]],"meta":{"line":620,"file":"Player.js","path":"src/structures"}}],"meta":{"line":587,"file":"Player.js","path":"src/structures"}},{"name":"PlayerMeta","description":"Represents a player's metadata","props":[{"name":"player","description":"The player object","type":[[["Player"]]],"meta":{"line":634,"file":"Player.js","path":"src/structures"}},{"name":"vanity","description":"The vanity name of the player, if the player has one, otherwise null","type":[[["string"]]],"meta":{"line":641,"file":"Player.js","path":"src/structures"}},{"name":"youtube","description":"The youtube link of the player, if the player has one, otherwise null","type":[[["string"]]],"meta":{"line":650,"file":"Player.js","path":"src/structures"}},{"name":"twitter","description":"The twitter link of the player, if the player has one, otherwise null","type":[[["string"]]],"meta":{"line":659,"file":"Player.js","path":"src/structures"}},{"name":"twitch","description":"The twitch channel link of the player, if the player has one, otherwise null","type":[[["string"]]],"meta":{"line":668,"file":"Player.js","path":"src/structures"}},{"name":"displayURL","description":"The display URL of the player","type":[[["string"]]],"meta":{"line":677,"file":"Player.js","path":"src/structures"}},{"name":"inTMGL","description":"Whether the player is in the TMGL group","type":[[["boolean"]]],"meta":{"line":691,"file":"Player.js","path":"src/structures"}},{"name":"inTMWC21","description":"Whether the player is in the TMWC21 group","type":[[["boolean"]]],"meta":{"line":700,"file":"Player.js","path":"src/structures"}},{"name":"inNadeo","description":"Whether the player is in the Nadeo company","type":[[["boolean"]]],"meta":{"line":709,"file":"Player.js","path":"src/structures"}},{"name":"inTMIOTeam","description":"Whether the player is in the Openplanet & Trackmania.io team","type":[[["boolean"]]],"meta":{"line":718,"file":"Player.js","path":"src/structures"}},{"name":"isSponsor","description":"Whether the player is a Openplanet & Trackmania.io sponsor","type":[[["boolean"]]],"meta":{"line":727,"file":"Player.js","path":"src/structures"}},{"name":"sponsorLevel","description":"If the player is a sponsor, this returns the sponsor's level","nullable":true,"type":[[["number"]]],"meta":{"line":736,"file":"Player.js","path":"src/structures"}}],"meta":{"line":628,"file":"Player.js","path":"src/structures"}},{"name":"PlayerMatchmaking","description":"Represents a player's stats in matchmaking","props":[{"name":"player","description":"The player object","type":[[["Player"]]],"meta":{"line":751,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client object","type":[[["Client"]]],"meta":{"line":757,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The raw data of the player's matchmaking data based on the type","access":"private","type":[[["Object"]]],"meta":{"line":764,"file":"Player.js","path":"src/structures"}},{"name":"type","description":"The type name of the matchmaking","type":[[["string"]]],"meta":{"line":776,"file":"Player.js","path":"src/structures"}},{"name":"typeId","description":"The type ID of the matchmaking","type":[[["number"]]],"meta":{"line":784,"file":"Player.js","path":"src/structures"}},{"name":"rank","description":"The rank of the player on this matchmaking","type":[[["number"]]],"meta":{"line":792,"file":"Player.js","path":"src/structures"}},{"name":"totalPlayers","description":"The total number of players in this matchmaking","type":[[["number"]]],"meta":{"line":800,"file":"Player.js","path":"src/structures"}},{"name":"score","description":"The MMR rank of the player on this matchmaking (score)","type":[[["number"]]],"meta":{"line":808,"file":"Player.js","path":"src/structures"}},{"name":"progression","description":"The progression of the player on this matchmaking (can be number of wins for Royal, or score for 3v3)","type":[[["number"]]],"meta":{"line":816,"file":"Player.js","path":"src/structures"}},{"name":"division","description":"The division of the player on this matchmaking","type":[[["MatchmakingDivision"]]],"meta":{"line":824,"file":"Player.js","path":"src/structures"}},{"name":"_MatchmakingDivision","description":"The division of the player on this matchmaking","access":"private","type":[[["MatchmakingDivision"]]],"meta":{"line":832,"file":"Player.js","path":"src/structures"}}],"methods":[{"name":"history","description":"The history of recent matches on this matchmaking","params":[{"name":"page","description":"The page number to get","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"meta":{"line":842,"file":"Player.js","path":"src/structures"}}],"meta":{"line":745,"file":"Player.js","path":"src/structures"}},{"name":"PlayerMatchmakingMatchResult","description":"Represents a player's matchmaking match result","props":[{"name":"player","description":"The player object","type":[[["Player"]]],"meta":{"line":866,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client object","type":[[["Client"]]],"meta":{"line":872,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":879,"file":"Player.js","path":"src/structures"}},{"name":"win","description":"The player has win the match","type":[[["boolean"]]],"meta":{"line":886,"file":"Player.js","path":"src/structures"}},{"name":"leave","description":"The player has leaved the match","type":[[["boolean"]]],"meta":{"line":894,"file":"Player.js","path":"src/structures"}},{"name":"mvp","description":"The player is the most valuable player in the match","type":[[["boolean"]]],"meta":{"line":902,"file":"Player.js","path":"src/structures"}},{"name":"liveId","description":"The match LiveID","type":[[["string"]]],"meta":{"line":910,"file":"Player.js","path":"src/structures"}},{"name":"startDate","description":"The start date of the match","type":[[["Date"]]],"meta":{"line":918,"file":"Player.js","path":"src/structures"}},{"name":"afterScore","description":"The score of the player after this match","type":[[["number"]]],"meta":{"line":926,"file":"Player.js","path":"src/structures"}}],"meta":{"line":860,"file":"Player.js","path":"src/structures"}},{"name":"PlayerCOTD","description":"Represents a player's COTD object","props":[{"name":"player","description":"The Player object","type":[[["Player"]]],"meta":{"line":940,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client object","type":[[["Client"]]],"meta":{"line":946,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":953,"file":"Player.js","path":"src/structures"}},{"name":"count","description":"The number of COTDs played","type":[[["number"]]],"meta":{"line":960,"file":"Player.js","path":"src/structures"}},{"name":"stats","description":"The Player COTD stats","type":[[["PlayerCOTDStats"]]],"meta":{"line":968,"file":"Player.js","path":"src/structures"}},{"name":"_stats","description":"The Player COTD stats","access":"private","type":[[["PlayerCOTDStats"]]],"meta":{"line":975,"file":"Player.js","path":"src/structures"}},{"name":"recentResults","description":"Get the 25 recents COTD results","type":[[["Array","<"],["PlayerCOTDResult",">"]]],"meta":{"line":984,"file":"Player.js","path":"src/structures"}}],"meta":{"line":934,"file":"Player.js","path":"src/structures"}},{"name":"PlayerCOTDResult","description":"Represents a player's COTD result","props":[{"name":"player","description":"The Player object","type":[[["Player"]]],"meta":{"line":1002,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client object","type":[[["Client"]]],"meta":{"line":1008,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":1015,"file":"Player.js","path":"src/structures"}},{"name":"id","description":"The ID of the COTD","type":[[["number"]]],"meta":{"line":1022,"file":"Player.js","path":"src/structures"}},{"name":"date","description":"The date of the COTD","readonly":true,"type":[[["Date"]]],"meta":{"line":1031,"file":"Player.js","path":"src/structures"}},{"name":"name","description":"The name of the COTD","type":[[["string"]]],"meta":{"line":1039,"file":"Player.js","path":"src/structures"}},{"name":"division","description":"The division of the COTD","type":[[["number"]]],"meta":{"line":1047,"file":"Player.js","path":"src/structures"}},{"name":"rank","description":"The overall rank on the COTD","type":[[["number"]]],"meta":{"line":1055,"file":"Player.js","path":"src/structures"}},{"name":"divisionRank","description":"The division rank on the COTD","type":[[["number"]]],"meta":{"line":1063,"file":"Player.js","path":"src/structures"}},{"name":"score","description":"The score of the COTD","type":[[["number"]]],"meta":{"line":1071,"file":"Player.js","path":"src/structures"}},{"name":"totalPlayers","description":"The total number of players of the COTD","type":[[["number"]]],"meta":{"line":1079,"file":"Player.js","path":"src/structures"}}],"meta":{"line":996,"file":"Player.js","path":"src/structures"}},{"name":"PlayerCOTDStats","description":"Represents a player's COTD stats","props":[{"name":"player","description":"The player object","type":[[["Player"]]],"meta":{"line":1094,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client object","type":[[["Client"]]],"meta":{"line":1100,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":1107,"file":"Player.js","path":"src/structures"}},{"name":"bestPrimary","description":"The best stats in the primary COTD","type":[[["PlayerCOTDStatsBest"]]],"meta":{"line":1114,"file":"Player.js","path":"src/structures"}},{"name":"_bestprimary","description":"The best stats in the primary COTD","access":"private","type":[[["PlayerCOTDStatsBest"]]],"meta":{"line":1121,"file":"Player.js","path":"src/structures"}},{"name":"bestOverall","description":"The best stats in all COTDs (including reruns)","type":[[["PlayerCOTDStatsBest"]]],"meta":{"line":1130,"file":"Player.js","path":"src/structures"}},{"name":"_bestoverall","description":"The best stats in all COTDs (including reruns)","access":"private","type":[[["PlayerCOTDStatsBest"]]],"meta":{"line":1137,"file":"Player.js","path":"src/structures"}},{"name":"totalWins","description":"The total COTD wins in division 1","type":[[["number"]]],"meta":{"line":1146,"file":"Player.js","path":"src/structures"}},{"name":"totalDivWins","description":"The total COTD wins in any divison","type":[[["number"]]],"meta":{"line":1154,"file":"Player.js","path":"src/structures"}},{"name":"averageRank","description":"Average rank, float between 0 and 1","type":[[["number"]]],"meta":{"line":1162,"file":"Player.js","path":"src/structures"}},{"name":"averageDivRank","description":"Average div rank (in any division), float between 0 and 1","type":[[["number"]]],"meta":{"line":1170,"file":"Player.js","path":"src/structures"}},{"name":"averageDiv","description":"Average division","type":[[["number"]]],"meta":{"line":1178,"file":"Player.js","path":"src/structures"}},{"name":"winStreak","description":"The win streak in division 1","type":[[["number"]]],"meta":{"line":1186,"file":"Player.js","path":"src/structures"}},{"name":"divWinStreak","description":"The win streak in any division","type":[[["number"]]],"meta":{"line":1194,"file":"Player.js","path":"src/structures"}}],"meta":{"line":1087,"file":"Player.js","path":"src/structures"}},{"name":"PlayerCOTDStatsBest","description":"Represents a player's COTD stats best stats","props":[{"name":"stats","description":"The PlayerCOTDStats object","type":[[["PlayerCOTDStats"]]],"meta":{"line":1209,"file":"Player.js","path":"src/structures"}},{"name":"player","description":"The player object","type":[[["Player"]]],"meta":{"line":1215,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client object","type":[[["Client"]]],"meta":{"line":1221,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":1228,"file":"Player.js","path":"src/structures"}},{"name":"rank","description":"The best rank","type":[[["number"]]],"meta":{"line":1235,"file":"Player.js","path":"src/structures"}},{"name":"rankDate","description":"The best rank date","readonly":true,"type":[[["Date"]]],"meta":{"line":1244,"file":"Player.js","path":"src/structures"}},{"name":"divRank","description":"The best div rank","type":[[["number"]]],"meta":{"line":1252,"file":"Player.js","path":"src/structures"}},{"name":"division","description":"The best division","type":[[["number"]]],"meta":{"line":1260,"file":"Player.js","path":"src/structures"}},{"name":"divisionDate","description":"The best divison date","readonly":true,"type":[[["Date"]]],"meta":{"line":1269,"file":"Player.js","path":"src/structures"}},{"name":"rankInDivision","description":"The best rank in a division","type":[[["number"]]],"meta":{"line":1277,"file":"Player.js","path":"src/structures"}},{"name":"rankInDivisionDate","description":"The best rank in a division date","readonly":true,"type":[[["Date"]]],"meta":{"line":1286,"file":"Player.js","path":"src/structures"}},{"name":"divisionOfRankInDivision","description":"The division who got the best rank in a division","type":[[["number"]]],"meta":{"line":1294,"file":"Player.js","path":"src/structures"}}],"meta":{"line":1202,"file":"Player.js","path":"src/structures"}},{"name":"Room","description":"Represents a room.","props":[{"name":"client","description":"The client that instantiated this room","type":[[["Client"]]],"meta":{"line":15,"file":"Room.js","path":"src/structures"}},{"name":"_data","description":"The data of the room","access":"private","type":[[["Object"]]],"meta":{"line":22,"file":"Room.js","path":"src/structures"}},{"name":"id","description":"The ID of the room","type":[[["number"]]],"meta":{"line":29,"file":"Room.js","path":"src/structures"}},{"name":"name","description":"The name of the room","type":[[["string"]]],"meta":{"line":45,"file":"Room.js","path":"src/structures"}},{"name":"isCloud","description":"Whether this room is hosted on the cloud (Nadeo)","type":[[["boolean"]]],"meta":{"line":53,"file":"Room.js","path":"src/structures"}},{"name":"login","description":"The login of the room (if it's not a cloud room)","nullable":true,"type":[[["string"]]],"meta":{"line":61,"file":"Room.js","path":"src/structures"}},{"name":"playerCount","description":"The number of players in the room","type":[[["number"]]],"meta":{"line":70,"file":"Room.js","path":"src/structures"}},{"name":"maxPlayersCount","description":"The maximum number of players in the room","type":[[["number"]]],"meta":{"line":78,"file":"Room.js","path":"src/structures"}},{"name":"region","description":"The region of the room (if it's on a cloud room)","type":[[["RoomRegion"]]],"meta":{"line":86,"file":"Room.js","path":"src/structures"}},{"name":"script","description":"The script name that currently runs in the room","type":[[["string"]]],"meta":{"line":95,"file":"Room.js","path":"src/structures"}},{"name":"scriptSettings","description":"The script settings on the room.\n<info> Example of result:\n\n[{\n\nkey: 'S_DecoImageUrl_Checkpoint',\n\nvalue: 'https://trackmania-prod-nls-file-store-s3.cdn.ubi.com/club/decal/5f62400600952.png?updateTimestamp=1600274438.png'\n\n}]\n\n</info>","type":[[["Array","<"],["Object","<"],["string",", ("],["string","|"],["number","|"],["boolean",")>>"]]],"meta":{"line":114,"file":"Room.js","path":"src/structures"}},{"name":"imageUrl","description":"The image URL of the room","type":[[["string"]]],"meta":{"line":140,"file":"Room.js","path":"src/structures"}}],"methods":[{"name":"club","description":"The club that this room belongs to","async":true,"returns":[[["Promise","<"],["Club",">"]]],"meta":{"line":37,"file":"Room.js","path":"src/structures"}},{"name":"maps","description":"The maps on the room","examples":["Client.rooms.get(228, 82160).then(async room => {\n  const maps = await room.maps();\n  maps.forEach(map => console.log(map.name));\n});"],"async":true,"returns":[[["Promise","<"],["Array","<"],["TMMap",">>"]]],"meta":{"line":153,"file":"Room.js","path":"src/structures"}}],"meta":{"line":9,"file":"Room.js","path":"src/structures"}},{"name":"Splashscreen","description":"Represents a news item.","props":[{"name":"client","description":"The client object of the news page","type":[[["Client"]]],"meta":{"line":12,"file":"Splashscreen.js","path":"src/structures"}},{"name":"_data","description":"The data of the news page","access":"private","type":[[["Object"]]],"meta":{"line":19,"file":"Splashscreen.js","path":"src/structures"}},{"name":"id","description":"The news item's id","type":[[["number"]]],"meta":{"line":26,"file":"Splashscreen.js","path":"src/structures"}},{"name":"headline","description":"The news item's headline","type":[[["string"]]],"meta":{"line":34,"file":"Splashscreen.js","path":"src/structures"}},{"name":"body","description":"The news item's text content","type":[[["string"]]],"meta":{"line":42,"file":"Splashscreen.js","path":"src/structures"}},{"name":"link","description":"The link to the news item on trackmania.com","type":[[["string"]]],"meta":{"line":50,"file":"Splashscreen.js","path":"src/structures"}},{"name":"media","description":"The news item's accompanying media file as a link","type":[[["string"]]],"meta":{"line":58,"file":"Splashscreen.js","path":"src/structures"}},{"name":"time","description":"The news item's time of publishing","type":[[["Date"]]],"meta":{"line":66,"file":"Splashscreen.js","path":"src/structures"}}],"meta":{"line":6,"file":"Splashscreen.js","path":"src/structures"}},{"name":"TMEvent","description":"Represents a Event in Trackmania.","props":[{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":15,"file":"TMEvent.js","path":"src/structures"}},{"name":"_data","description":"The event's data.","access":"private","type":[[["Object"]]],"meta":{"line":22,"file":"TMEvent.js","path":"src/structures"}},{"name":"id","description":"The event's ID.","type":[[["number"]]],"meta":{"line":29,"file":"TMEvent.js","path":"src/structures"}},{"name":"size","description":"The number of players in the event.","type":[[["number"]]],"meta":{"line":37,"file":"TMEvent.js","path":"src/structures"}},{"name":"liveId","description":"The event's Live ID.","type":[[["string"]]],"meta":{"line":45,"file":"TMEvent.js","path":"src/structures"}},{"name":"name","description":"The event's name.","type":[[["string"]]],"meta":{"line":61,"file":"TMEvent.js","path":"src/structures"}},{"name":"description","description":"The event's description.","type":[[["string"]]],"meta":{"line":69,"file":"TMEvent.js","path":"src/structures"}},{"name":"registrationStart","description":"The event's registration start date.","type":[[["Date"]]],"meta":{"line":77,"file":"TMEvent.js","path":"src/structures"}},{"name":"registrationEnd","description":"The event's registration end date.","type":[[["Date"]]],"meta":{"line":85,"file":"TMEvent.js","path":"src/structures"}},{"name":"start","description":"The event's start date.","type":[[["Date"]]],"meta":{"line":93,"file":"TMEvent.js","path":"src/structures"}},{"name":"end","description":"The event's end date.","type":[[["Date"]]],"meta":{"line":101,"file":"TMEvent.js","path":"src/structures"}},{"name":"leaderboardId","description":"The event's leaderboard id.","type":[[["number"]]],"meta":{"line":109,"file":"TMEvent.js","path":"src/structures"}},{"name":"manialink","description":"The event's manialink (if any).","nullable":true,"type":[[["string"]]],"meta":{"line":117,"file":"TMEvent.js","path":"src/structures"}},{"name":"rulesUrl","description":"The event's rules URL (if any).","nullable":true,"type":[[["string"]]],"meta":{"line":126,"file":"TMEvent.js","path":"src/structures"}},{"name":"stream","description":"The event's stream URL (if any).","nullable":true,"type":[[["string"]]],"meta":{"line":135,"file":"TMEvent.js","path":"src/structures"}},{"name":"website","description":"The event's website (if any).","nullable":true,"type":[[["string"]]],"meta":{"line":144,"file":"TMEvent.js","path":"src/structures"}},{"name":"logo","description":"The event's logo URL.","type":[[["string"]]],"meta":{"line":153,"file":"TMEvent.js","path":"src/structures"}},{"name":"vertical","description":"The event's vertical banner URL.","type":[[["string"]]],"meta":{"line":161,"file":"TMEvent.js","path":"src/structures"}},{"name":"rounds","description":"The event's rounds.","type":[[["Array","<"],["TMEventRound",">"]]],"meta":{"line":169,"file":"TMEvent.js","path":"src/structures"}}],"methods":[{"name":"creator","description":"The creator of the event.","async":true,"returns":[[["Promise","<"],["Player",">"]]],"meta":{"line":53,"file":"TMEvent.js","path":"src/structures"}}],"meta":{"line":10,"file":"TMEvent.js","path":"src/structures"}},{"name":"TMEventRound","description":"Represents a round in a TMEvent.","props":[{"name":"event","description":"The event instance","type":[[["TMEvent"]]],"meta":{"line":187,"file":"TMEvent.js","path":"src/structures"}},{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":193,"file":"TMEvent.js","path":"src/structures"}},{"name":"_data","description":"The round's data.","access":"private","type":[[["Object"]]],"meta":{"line":200,"file":"TMEvent.js","path":"src/structures"}},{"name":"_challengesCache","description":"The challenge's CacheManager instance","access":"private","type":[[["CacheManager"]]],"meta":{"line":207,"file":"TMEvent.js","path":"src/structures"}},{"name":"id","description":"The round's ID.","type":[[["number"]]],"meta":{"line":214,"file":"TMEvent.js","path":"src/structures"}},{"name":"name","description":"The round's name.","type":[[["string"]]],"meta":{"line":222,"file":"TMEvent.js","path":"src/structures"}},{"name":"status","description":"The round's status.","type":[[["string"]]],"meta":{"line":230,"file":"TMEvent.js","path":"src/structures"}},{"name":"matches","description":"The round's matches.","type":[[["Array","<"],["TMEventRoundMatch",">"]]],"meta":{"line":238,"file":"TMEvent.js","path":"src/structures"}}],"methods":[{"name":"challenges","description":"The round's challenges.","params":[{"name":"cache","description":"Wether to get the challenges from the cache or not.","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["TMEventChallenge",">>"]]],"meta":{"line":251,"file":"TMEvent.js","path":"src/structures"}},{"name":"_fetchChallenge","description":"Fetches the round's challenges.","access":"private","params":[{"name":"index","description":"The index of the challenge to fetch.","type":[[["number"]]]},{"name":"cache","description":"Wether to cache the challenges or not.","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["TMEventChallenge",">>"]]],"meta":{"line":270,"file":"TMEvent.js","path":"src/structures"}}],"meta":{"line":181,"file":"TMEvent.js","path":"src/structures"}},{"name":"TMEventRoundMatch","description":"Represents a match in a TMEventRound.","props":[{"name":"round","description":"The round instance","type":[[["TMEventRound"]]],"meta":{"line":295,"file":"TMEvent.js","path":"src/structures"}},{"name":"event","description":"The event instance","type":[[["TMEvent"]]],"meta":{"line":301,"file":"TMEvent.js","path":"src/structures"}},{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":307,"file":"TMEvent.js","path":"src/structures"}},{"name":"_data","description":"The match's data.","access":"private","type":[[["Object"]]],"meta":{"line":314,"file":"TMEvent.js","path":"src/structures"}},{"name":"_resultsCache","description":"The match's results CacheManager instance","access":"private","type":[[["CacheManager"]]],"meta":{"line":321,"file":"TMEvent.js","path":"src/structures"}},{"name":"id","description":"The match's ID.","type":[[["number"]]],"meta":{"line":328,"file":"TMEvent.js","path":"src/structures"}},{"name":"name","description":"The match's name.","type":[[["string"]]],"meta":{"line":336,"file":"TMEvent.js","path":"src/structures"}},{"name":"isCompleted","description":"Whether the match is completed.","type":[[["boolean"]]],"meta":{"line":344,"file":"TMEvent.js","path":"src/structures"}}],"methods":[{"name":"getResults","description":"The match's results.","params":[{"name":"page","description":"The page number.","optional":true,"default":0,"type":[[["number"]]]},{"name":"cache","description":"Whether to cache the results.","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["TMEventRoundMatchResult",">>"]]],"meta":{"line":354,"file":"TMEvent.js","path":"src/structures"}},{"name":"_fetchResults","description":"Fetches the match's results.","access":"private","params":[{"name":"page","description":"The page number.","optional":true,"default":0,"type":[[["number"]]]},{"name":"cache","description":"Whether to cache the results.","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["TMEventRoundMatchResult",">>"]]],"meta":{"line":369,"file":"TMEvent.js","path":"src/structures"}}],"meta":{"line":289,"file":"TMEvent.js","path":"src/structures"}},{"name":"TMEventRoundMatchResult","description":"Represents a result in a TMEventRoundMatch.","props":[{"name":"match","description":"The match instance","type":[[["TMEventRoundMatch"]]],"meta":{"line":397,"file":"TMEvent.js","path":"src/structures"}},{"name":"event","description":"The event instance","type":[[["TMEvent"]]],"meta":{"line":403,"file":"TMEvent.js","path":"src/structures"}},{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":409,"file":"TMEvent.js","path":"src/structures"}},{"name":"_data","description":"The result's data.","access":"private","type":[[["Object"]]],"meta":{"line":416,"file":"TMEvent.js","path":"src/structures"}},{"name":"position","description":"The position of the player.","type":[[["number"]]],"meta":{"line":431,"file":"TMEvent.js","path":"src/structures"}},{"name":"score","description":"The score of the player.","type":[[["number"]]],"meta":{"line":439,"file":"TMEvent.js","path":"src/structures"}}],"methods":[{"name":"player","description":"The player that got the result.","async":true,"returns":[[["Promise","<"],["Player",">"]]],"meta":{"line":423,"file":"TMEvent.js","path":"src/structures"}}],"meta":{"line":391,"file":"TMEvent.js","path":"src/structures"}},{"name":"TMEventChallenge","description":"Represents a challenge in a TMEventRound.","props":[{"name":"round","description":"The round instance","type":[[["TMEventRound"]]],"meta":{"line":453,"file":"TMEvent.js","path":"src/structures"}},{"name":"event","description":"The event instance","type":[[["TMEvent"]]],"meta":{"line":459,"file":"TMEvent.js","path":"src/structures"}},{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":465,"file":"TMEvent.js","path":"src/structures"}},{"name":"_data","description":"The challenge's data.","access":"private","type":[[["Object"]]],"meta":{"line":472,"file":"TMEvent.js","path":"src/structures"}},{"name":"_resultsCache","description":"The challenge's results CacheManager instance","access":"private","type":[[["CacheManager"]]],"meta":{"line":479,"file":"TMEvent.js","path":"src/structures"}},{"name":"id","description":"The challenge's ID.","type":[[["number"]]],"meta":{"line":486,"file":"TMEvent.js","path":"src/structures"}},{"name":"name","description":"The challenge's name.","type":[[["string"]]],"meta":{"line":494,"file":"TMEvent.js","path":"src/structures"}},{"name":"status","description":"The challenge's status.","type":[[["string"]]],"meta":{"line":502,"file":"TMEvent.js","path":"src/structures"}},{"name":"rooms","description":"The challenge's rooms number.","type":[[["number"]]],"meta":{"line":510,"file":"TMEvent.js","path":"src/structures"}}],"methods":[{"name":"getMaps","description":"The challenge's maps.","async":true,"returns":[[["Promise","<"],["Array","<"],["TMMap",">>"]]],"meta":{"line":518,"file":"TMEvent.js","path":"src/structures"}},{"name":"getAdmins","description":"The challenge's admins.","async":true,"returns":[[["Promise","<"],["Array","<"],["Player",">>"]]],"meta":{"line":531,"file":"TMEvent.js","path":"src/structures"}},{"name":"getResults","description":"The challenge's results.","params":[{"name":"page","description":"The page number.","optional":true,"default":0,"type":[[["number"]]]},{"name":"cache","description":"Whether to get the results from cache.","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["TMEventChallengeResult",">>"]]],"meta":{"line":546,"file":"TMEvent.js","path":"src/structures"}},{"name":"_fetchResults","description":"Fetches the match's results.","access":"private","params":[{"name":"page","description":"The page number.","optional":true,"default":0,"type":[[["number"]]]},{"name":"cache","description":"Whether to cache the results.","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["TMEventChallengeResult",">>"]]],"meta":{"line":561,"file":"TMEvent.js","path":"src/structures"}}],"meta":{"line":447,"file":"TMEvent.js","path":"src/structures"}},{"name":"TMEventChallengeResult","description":"Represents a result in a TMEventChallenge.","props":[{"name":"challenge","description":"The challenge instance","type":[[["TMEventChallenge"]]],"meta":{"line":589,"file":"TMEvent.js","path":"src/structures"}},{"name":"event","description":"The event instance","type":[[["TMEvent"]]],"meta":{"line":595,"file":"TMEvent.js","path":"src/structures"}},{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":601,"file":"TMEvent.js","path":"src/structures"}},{"name":"_data","description":"The result's data.","access":"private","type":[[["Object"]]],"meta":{"line":608,"file":"TMEvent.js","path":"src/structures"}},{"name":"position","description":"The position of the player.","type":[[["number"]]],"meta":{"line":623,"file":"TMEvent.js","path":"src/structures"}},{"name":"score","description":"The score of the player.","type":[[["number"]]],"meta":{"line":631,"file":"TMEvent.js","path":"src/structures"}}],"methods":[{"name":"player","description":"The player.","async":true,"returns":[[["Promise","<"],["Player",">"]]],"meta":{"line":615,"file":"TMEvent.js","path":"src/structures"}}],"meta":{"line":583,"file":"TMEvent.js","path":"src/structures"}},{"name":"TMMap","description":"Represents a map on Trackmania.","props":[{"name":"client","description":"The client instance.","type":[[["Client"]]],"meta":{"line":15,"file":"TMMap.js","path":"src/structures"}},{"name":"_data","description":"The map data.","access":"private","type":[[["Object"]]],"meta":{"line":22,"file":"TMMap.js","path":"src/structures"}},{"name":"medalTimes","description":"The map medal times.","type":[[["TMMapMedalTimes"]]],"meta":{"line":28,"file":"TMMap.js","path":"src/structures"}},{"name":"name","description":"The map name.","type":[[["string"]]],"meta":{"line":44,"file":"TMMap.js","path":"src/structures"}},{"name":"id","description":"The map id.","type":[[["string"]]],"meta":{"line":52,"file":"TMMap.js","path":"src/structures"}},{"name":"uid","description":"The map unique id.","type":[[["string"]]],"meta":{"line":60,"file":"TMMap.js","path":"src/structures"}},{"name":"storageId","description":"The map Storage Object ID.","type":[[["string"]]],"meta":{"line":68,"file":"TMMap.js","path":"src/structures"}},{"name":"environment","description":"The environment for this map.","type":[[["string"]]],"meta":{"line":97,"file":"TMMap.js","path":"src/structures"}},{"name":"fileName","description":"The map file name.","type":[[["string"]]],"meta":{"line":105,"file":"TMMap.js","path":"src/structures"}},{"name":"uploaded","description":"The map uploaded date.","type":[[["Date"]]],"meta":{"line":113,"file":"TMMap.js","path":"src/structures"}},{"name":"url","description":"The map URL.","type":[[["string"]]],"meta":{"line":121,"file":"TMMap.js","path":"src/structures"}},{"name":"thumbnail","description":"The map thumbnail (from Nadeo services, direct download).","type":[[["string"]]],"meta":{"line":129,"file":"TMMap.js","path":"src/structures"}},{"name":"thumbnailCached","description":"The map thumbnail (cached from trackmania.io, can show).","type":[[["string"]]],"meta":{"line":137,"file":"TMMap.js","path":"src/structures"}},{"name":"exchangeId","description":"The map exchange id, if the map is on trackmania.exchange, else null.","nullable":true,"type":[[["string"]]],"meta":{"line":145,"file":"TMMap.js","path":"src/structures"}},{"name":"exchange","description":"The map informations on trackmania.exchange.","nullable":true,"type":[[["TMExchangeMap"]]],"meta":{"line":154,"file":"TMMap.js","path":"src/structures"}},{"name":"_TMExchange","access":"private","type":[[["TMExchangeMap"]]],"meta":{"line":163,"file":"TMMap.js","path":"src/structures"}},{"name":"karma","description":"The map karma.","nullable":true,"type":[[["TMMapKarma"]]],"meta":{"line":174,"file":"TMMap.js","path":"src/structures"}},{"name":"_TMMapKarma","access":"private","type":[[["TMMapKarma"]]],"meta":{"line":181,"file":"TMMap.js","path":"src/structures"}},{"name":"leaderboard","description":"The map leaderboard.","nullable":true,"type":[[["Array","<"],["TMMapLeaderboard",">"]]],"meta":{"line":191,"file":"TMMap.js","path":"src/structures"}}],"methods":[{"name":"author","description":"The map author.","examples":["Client.maps.get('z28QXoFnpODEGgg8MOederEVl3j').then(async map => {\n    const author = await map.author();\n    console.log(`The map author is ${author.name}`);\n});"],"async":true,"returns":[[["Promise","<"],["Player",">"]]],"meta":{"line":81,"file":"TMMap.js","path":"src/structures"}},{"name":"submitter","description":"The map submitter.","async":true,"returns":[[["Promise","<"],["Player",">"]]],"meta":{"line":89,"file":"TMMap.js","path":"src/structures"}},{"name":"leaderboardLoadMore","description":"Load 100 more results in the leaderboard.","async":true,"returns":[[["Promise","<?"],["Array","<"],["TMMapLeaderboard",">>"]]],"meta":{"line":205,"file":"TMMap.js","path":"src/structures"}},{"name":"leaderboardGet","description":"Get a leaderboard in a specific position. Must be between 1 and 10000.","params":[{"name":"position","description":"The position of the leaderboard.","type":[[["number"]]]}],"async":true,"returns":[[["Promise","<?"],["TMMapLeaderboard",">"]]],"meta":{"line":229,"file":"TMMap.js","path":"src/structures"}}],"meta":{"line":8,"file":"TMMap.js","path":"src/structures"}},{"name":"TMMapMedalTimes","description":"Represents the medals times on a map.","props":[{"name":"map","description":"The map object.","type":[[["TMMap"]]],"meta":{"line":249,"file":"TMMap.js","path":"src/structures"}},{"name":"author","description":"The map author time.","type":[[["number"]]],"meta":{"line":255,"file":"TMMap.js","path":"src/structures"}},{"name":"gold","description":"The map gold time.","type":[[["number"]]],"meta":{"line":261,"file":"TMMap.js","path":"src/structures"}},{"name":"silver","description":"The map silver time.","type":[[["number"]]],"meta":{"line":267,"file":"TMMap.js","path":"src/structures"}},{"name":"bronze","description":"The map bronze time.","type":[[["number"]]],"meta":{"line":273,"file":"TMMap.js","path":"src/structures"}}],"meta":{"line":243,"file":"TMMap.js","path":"src/structures"}},{"name":"TMExchangeMap","description":"Represents the map details from Trackmania.exchange.","props":[{"name":"map","description":"The map instance.","type":[[["TMMap"]]],"meta":{"line":286,"file":"TMMap.js","path":"src/structures"}},{"name":"client","description":"The client instance.","type":[[["Client"]]],"meta":{"line":292,"file":"TMMap.js","path":"src/structures"}},{"name":"_data","description":"The map data.","access":"private","type":[[["Object"]]],"meta":{"line":299,"file":"TMMap.js","path":"src/structures"}},{"name":"id","description":"The map exchange id.","type":[[["number"]]],"meta":{"line":306,"file":"TMMap.js","path":"src/structures"}},{"name":"name","description":"The map name.","type":[[["string"]]],"meta":{"line":314,"file":"TMMap.js","path":"src/structures"}},{"name":"author","description":"The map author.","type":[[["string"]]],"meta":{"line":322,"file":"TMMap.js","path":"src/structures"}},{"name":"description","description":"The map description.","type":[[["string"]]],"meta":{"line":330,"file":"TMMap.js","path":"src/structures"}},{"name":"length","description":"The map length.","type":[[["string"]]],"meta":{"line":338,"file":"TMMap.js","path":"src/structures"}},{"name":"difficulty","description":"The map difficulty.","type":[[["string"]]],"meta":{"line":346,"file":"TMMap.js","path":"src/structures"}},{"name":"uploaded","description":"The map upload date.","type":[[["Date"]]],"meta":{"line":354,"file":"TMMap.js","path":"src/structures"}},{"name":"updated","description":"The map last update date.","type":[[["Date"]]],"meta":{"line":362,"file":"TMMap.js","path":"src/structures"}},{"name":"awards","description":"The map award count.","type":[[["number"]]],"meta":{"line":370,"file":"TMMap.js","path":"src/structures"}},{"name":"download","description":"The map download link.","type":[[["string"]]],"meta":{"line":378,"file":"TMMap.js","path":"src/structures"}}],"meta":{"line":280,"file":"TMMap.js","path":"src/structures"}},{"name":"TMMapKarma","description":"Represents the Map Voting stats.","props":[{"name":"map","description":"The map instance.","type":[[["TMMap"]]],"meta":{"line":393,"file":"TMMap.js","path":"src/structures"}},{"name":"client","description":"The client instance.","type":[[["Client"]]],"meta":{"line":399,"file":"TMMap.js","path":"src/structures"}},{"name":"_data","description":"The map data.","access":"private","type":[[["Object"]]],"meta":{"line":406,"file":"TMMap.js","path":"src/structures"}},{"name":"uid","description":"The map Uid.","type":[[["string"]]],"meta":{"line":413,"file":"TMMap.js","path":"src/structures"}},{"name":"votes","description":"The number of votes.","type":[[["number"]]],"meta":{"line":421,"file":"TMMap.js","path":"src/structures"}},{"name":"average","description":"The average vote (between 0 and 100).","type":[[["number"]]],"meta":{"line":429,"file":"TMMap.js","path":"src/structures"}},{"name":"lastVoteDate","description":"The last vote date.","type":[[["Date"]]],"meta":{"line":437,"file":"TMMap.js","path":"src/structures"}}],"meta":{"line":387,"file":"TMMap.js","path":"src/structures"}},{"name":"TMMapLeaderboard","description":"Represents the map leaderboard.","props":[{"name":"map","description":"The map Instance","type":[[["TMMap"]]],"meta":{"line":451,"file":"TMMap.js","path":"src/structures"}},{"name":"client","description":"The Client instance","type":[[["Client"]]],"meta":{"line":457,"file":"TMMap.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":464,"file":"TMMap.js","path":"src/structures"}},{"name":"position","description":"The position of the player on this leaderboard","type":[[["number"]]],"meta":{"line":479,"file":"TMMap.js","path":"src/structures"}},{"name":"time","description":"The time in milliseconds of the player","type":[[["number"]]],"meta":{"line":487,"file":"TMMap.js","path":"src/structures"}},{"name":"date","description":"The date when the player get this leaderboard","type":[[["Date"]]],"meta":{"line":495,"file":"TMMap.js","path":"src/structures"}},{"name":"ghost","description":"The ghost URL","type":[[["string"]]],"meta":{"line":503,"file":"TMMap.js","path":"src/structures"}}],"methods":[{"name":"player","description":"The player that got this leaderboard","async":true,"returns":[[["Promise","<"],["Player",">"]]],"meta":{"line":471,"file":"TMMap.js","path":"src/structures"}}],"meta":{"line":445,"file":"TMMap.js","path":"src/structures"}},{"name":"TOTD","description":"Represents a Track Of The Day (TOTD).","props":[{"name":"client","description":"The client objet","type":[[["Client"]]],"meta":{"line":13,"file":"TOTD.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":20,"file":"TOTD.js","path":"src/structures"}},{"name":"campaignId","description":"The campaign ID","type":[[["number"]]],"meta":{"line":40,"file":"TOTD.js","path":"src/structures"}},{"name":"weekDay","description":"The week day","type":[[["number"]]],"meta":{"line":48,"file":"TOTD.js","path":"src/structures"}},{"name":"monthDay","description":"The month day","type":[[["number"]]],"meta":{"line":56,"file":"TOTD.js","path":"src/structures"}},{"name":"leaderboardId","description":"The leaderboard ID","type":[[["string"]]],"meta":{"line":64,"file":"TOTD.js","path":"src/structures"}}],"methods":[{"name":"map","description":"The map","examples":["Client.totd.get(date).then(async totd=>{\n const map = await totd.map();\n console.log(map.name);\n})"],"async":true,"returns":[[["Promise","<"],["TMMap",">"]]],"meta":{"line":32,"file":"TOTD.js","path":"src/structures"}}],"meta":{"line":7,"file":"TOTD.js","path":"src/structures"}},{"name":"defaultOptions","description":"The default options.","props":[{"name":"_baseClient","description":"The base client instance.","access":"private","type":[[["BaseClient"]]],"meta":{"line":11,"file":"defaultOptions.js","path":"src/util"}},{"name":"api","description":"The default API options.","type":[[["defaultOptionsAPI"]]],"meta":{"line":17,"file":"defaultOptions.js","path":"src/util"}},{"name":"cache","description":"The default Cache options.","type":[[["defaultOptionsCache"]]],"meta":{"line":23,"file":"defaultOptions.js","path":"src/util"}},{"name":"dev","description":"Whether is in dev mode (Uses more logging traces in the core).","type":[[["boolean"]]],"meta":{"line":29,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":4,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsAPI","description":"The default API options.","props":[{"name":"_defaultOptions","description":"The default options.","access":"private","readonly":true,"type":[[["defaultOptions"]]],"meta":{"line":44,"file":"defaultOptions.js","path":"src/util"}},{"name":"paths","description":"The default API Paths options.","type":[[["defaultOptionsAPIPaths"]]],"meta":{"line":50,"file":"defaultOptions.js","path":"src/util"}},{"name":"useragent","description":"The default User Agent to use.","nullable":true,"type":[[["string"]]],"meta":{"line":56,"file":"defaultOptions.js","path":"src/util"}},{"name":"key","description":"The API Key to use. It must contains \"yourname:theactualsecretkey\".\nIf present, this defaults to `process.env.TMIO_API` when instantiating the client\n\n<warn>This should be kept private at all times.</warn>","nullable":true,"type":[[["string"]]],"meta":{"line":66,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":36,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsAPIPaths","description":"The default API Paths options.","props":[{"name":"_defaultOptionsAPI","description":"The default API options.","access":"private","readonly":true,"type":[[["defaultOptionsAPI"]]],"meta":{"line":85,"file":"defaultOptions.js","path":"src/util"}},{"name":"tmio","description":"The default Trackmania.io Paths options.","type":[[["defaultOptionsAPIPathsTMIO"]]],"meta":{"line":91,"file":"defaultOptions.js","path":"src/util"}},{"name":"tmx","description":"The default Trackmania.exchange Paths options.","type":[[["defaultOptionsAPIPathsTMX"]]],"meta":{"line":97,"file":"defaultOptions.js","path":"src/util"}},{"name":"mapVoting","description":"The default Map Voting API Paths options.","type":[[["defaultOptionsAPIPathsMapVoting"]]],"meta":{"line":103,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":77,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsAPIPathsTMIO","description":"The default Trackmania.io Paths options.","props":[{"name":"_defaultOptionsAPIPaths","description":"The default API Paths options.","access":"private","readonly":true,"type":[[["defaultOptionsAPIPaths"]]],"meta":{"line":118,"file":"defaultOptions.js","path":"src/util"}},{"name":"protocol","description":"The default Trackmania.io Protocol to use.","type":[[["string"]]],"meta":{"line":124,"file":"defaultOptions.js","path":"src/util"}},{"name":"host","description":"The default Trackmania.io Host to use.","type":[[["string"]]],"meta":{"line":130,"file":"defaultOptions.js","path":"src/util"}},{"name":"api","description":"The default Trackmania.io API Route to use.","type":[[["string"]]],"meta":{"line":136,"file":"defaultOptions.js","path":"src/util"}},{"name":"tabs","description":"The default Trackmania.io API Tabs to use.","type":[[["defaultOptionsAPIPathsTMIOTabs"]]],"meta":{"line":142,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":110,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsAPIPathsTMIOTabs","description":"The default Trackmania.io Tabs options.","props":[{"name":"_defaultOptionsAPIPathsTMIO","description":"The default Trackmania.io API options.","access":"private","readonly":true,"type":[[["defaultOptionsAPIPathsTMIO"]]],"meta":{"line":157,"file":"defaultOptions.js","path":"src/util"}},{"name":"totd","description":"TOTD Tab.","type":[[["string"]]],"meta":{"line":163,"file":"defaultOptions.js","path":"src/util"}},{"name":"cotd","description":"COTD Tab.","type":[[["string"]]],"meta":{"line":169,"file":"defaultOptions.js","path":"src/util"}},{"name":"comp","description":"Competitions Tab.","type":[[["string"]]],"meta":{"line":175,"file":"defaultOptions.js","path":"src/util"}},{"name":"news","description":"News Tab.","type":[[["string"]]],"meta":{"line":181,"file":"defaultOptions.js","path":"src/util"}},{"name":"ads","description":"Ads tab (Maniapub)","type":[[["string"]]],"meta":{"line":187,"file":"defaultOptions.js","path":"src/util"}},{"name":"campaigns","description":"Campaigns Tab.","type":[[["string"]]],"meta":{"line":193,"file":"defaultOptions.js","path":"src/util"}},{"name":"campaign","description":"Specific campaign Tab.","type":[[["string"]]],"meta":{"line":199,"file":"defaultOptions.js","path":"src/util"}},{"name":"officialCampaign","description":"Official campaign Tab.","type":[[["string"]]],"meta":{"line":205,"file":"defaultOptions.js","path":"src/util"}},{"name":"rooms","description":"Rooms Tab.","type":[[["string"]]],"meta":{"line":211,"file":"defaultOptions.js","path":"src/util"}},{"name":"room","description":"Specific room Tab.","type":[[["string"]]],"meta":{"line":217,"file":"defaultOptions.js","path":"src/util"}},{"name":"clubs","description":"Clubs Tab.","type":[[["string"]]],"meta":{"line":223,"file":"defaultOptions.js","path":"src/util"}},{"name":"club","description":"Specific club Tab.","type":[[["string"]]],"meta":{"line":229,"file":"defaultOptions.js","path":"src/util"}},{"name":"members","description":"Members Tab.","type":[[["string"]]],"meta":{"line":235,"file":"defaultOptions.js","path":"src/util"}},{"name":"activities","description":"Activities Tab.","type":[[["string"]]],"meta":{"line":241,"file":"defaultOptions.js","path":"src/util"}},{"name":"events","description":"Events Tab.","type":[[["string"]]],"meta":{"line":247,"file":"defaultOptions.js","path":"src/util"}},{"name":"player","description":"Specific player Tab.","type":[[["string"]]],"meta":{"line":253,"file":"defaultOptions.js","path":"src/util"}},{"name":"players","description":"Players Tab.","type":[[["string"]]],"meta":{"line":259,"file":"defaultOptions.js","path":"src/util"}},{"name":"trophies","description":"Trophies Tab.","type":[[["string"]]],"meta":{"line":265,"file":"defaultOptions.js","path":"src/util"}},{"name":"topTrophies","description":"Top Trophies Tab.","type":[[["string"]]],"meta":{"line":271,"file":"defaultOptions.js","path":"src/util"}},{"name":"leaderboard","description":"Leaderboard Tab.","type":[[["string"]]],"meta":{"line":277,"file":"defaultOptions.js","path":"src/util"}},{"name":"map","description":"Map Tab.","type":[[["string"]]],"meta":{"line":283,"file":"defaultOptions.js","path":"src/util"}},{"name":"matches","description":"Matches Tab.","type":[[["string"]]],"meta":{"line":289,"file":"defaultOptions.js","path":"src/util"}},{"name":"topMatchmaking","description":"Matchmaking Tab.","type":[[["string"]]],"meta":{"line":295,"file":"defaultOptions.js","path":"src/util"}},{"name":"match","description":"Specific match Tab.","type":[[["string"]]],"meta":{"line":301,"file":"defaultOptions.js","path":"src/util"}},{"name":"challenge","description":"Specific challenge Tab.","type":[[["string"]]],"meta":{"line":307,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":149,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsAPIPathsTMX","description":"The default Trackmania.exchange Paths options.","props":[{"name":"_defaultOptionsAPIPaths","description":"The default API Paths options.","access":"private","readonly":true,"type":[[["defaultOptionsAPIPaths"]]],"meta":{"line":322,"file":"defaultOptions.js","path":"src/util"}},{"name":"protocol","description":"The default Trackmania.exchange Protocol to use.","type":[[["string"]]],"meta":{"line":328,"file":"defaultOptions.js","path":"src/util"}},{"name":"host","description":"The default Trackmania.exchange Host to use.","type":[[["string"]]],"meta":{"line":334,"file":"defaultOptions.js","path":"src/util"}},{"name":"api","description":"The default Trackmania.exchange API Route to use.","type":[[["string"]]],"meta":{"line":340,"file":"defaultOptions.js","path":"src/util"}},{"name":"tabs","description":"The default Trackmania.exchange API Tabs to use.","type":[[["defaultOptionsAPIPathsTMXTabs"]]],"meta":{"line":346,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":314,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsAPIPathsTMXTabs","description":"The default Trackmania.exchange Tabs options.","props":[{"name":"_defaultOptionsAPIPathsTMX","description":"The default Trackmania.exchange API options.","access":"private","readonly":true,"type":[[["defaultOptionsAPIPathsTMX"]]],"meta":{"line":361,"file":"defaultOptions.js","path":"src/util"}},{"name":"mapInfo","description":"Map Info Tab.","type":[[["string"]]],"meta":{"line":367,"file":"defaultOptions.js","path":"src/util"}},{"name":"mapsDownload","description":"Map Download Tab.","type":[[["string"]]],"meta":{"line":373,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":353,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsAPIPathsMapVoting","description":"The default Map Voting Paths options.","props":[{"name":"_defaultOptionsAPIPaths","description":"The default API Paths options.","access":"private","readonly":true,"type":[[["defaultOptionsAPIPaths"]]],"meta":{"line":388,"file":"defaultOptions.js","path":"src/util"}},{"name":"protocol","description":"The default Map Voting Protocol to use.","type":[[["string"]]],"meta":{"line":394,"file":"defaultOptions.js","path":"src/util"}},{"name":"host","description":"The default Map Voting Host to use.","type":[[["string"]]],"meta":{"line":400,"file":"defaultOptions.js","path":"src/util"}},{"name":"tabs","description":"The default Map Voting API Tabs to use.","type":[[["defaultOptionsAPIPathsMapVotingTabs"]]],"meta":{"line":406,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":380,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsAPIPathsMapVotingTabs","description":"The default Map Voting Tabs options.","props":[{"name":"_defaultOptionsAPIPathsMapVoting","description":"The default Map Voting API options.","type":[[["defaultOptionsAPIPathsMapVoting"]]],"meta":{"line":419,"file":"defaultOptions.js","path":"src/util"}},{"name":"getPlayerVote","description":"Player Vote Tab.","type":[[["string"]]],"meta":{"line":425,"file":"defaultOptions.js","path":"src/util"}},{"name":"getVotes","description":"All Votes Tab.","type":[[["string"]]],"meta":{"line":431,"file":"defaultOptions.js","path":"src/util"}},{"name":"mostPlayerVoted","description":"Most Player Voted Tab.","type":[[["string"]]],"meta":{"line":437,"file":"defaultOptions.js","path":"src/util"}},{"name":"mostVotedMaps","description":"Most Map Voted Tab.","type":[[["string"]]],"meta":{"line":443,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":413,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsCache","description":"The default Cache options.","props":[{"name":"_defaultOptions","description":"The default Options.","access":"private","readonly":true,"type":[[["defaultOptions"]]],"meta":{"line":460,"file":"defaultOptions.js","path":"src/util"}},{"name":"enabled","description":"Whether to cache the API responses.","type":[[["boolean"]]],"meta":{"line":466,"file":"defaultOptions.js","path":"src/util"}},{"name":"ttl","description":"The cache TTL in minutes.","type":[[["number"]]],"meta":{"line":472,"file":"defaultOptions.js","path":"src/util"}},{"name":"leaderboardttl","description":"The cache TTL for leaderboards in minutes.","type":[[["number"]]],"meta":{"line":478,"file":"defaultOptions.js","path":"src/util"}},{"name":"roomttl","description":"The cache TTL for rooms in minutes.","type":[[["number"]]],"meta":{"line":484,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":452,"file":"defaultOptions.js","path":"src/util"}},{"name":"ReqUtil","description":"Util for API requests","access":"private","meta":{"line":5,"file":"ReqUtil.js","path":"src/util"}}],"interfaces":[],"typedefs":[{"name":"Constants","description":"Constants that can be used in an enum or object-like way.","type":[[["Object"]]],"props":[{"name":"GroupTypes","description":"All available player groups.","type":[[["PlayerGroup"]]]},{"name":"MMTypes","description":"All available matchmaking groups.","type":[[["MatchmakingGroup"]]]},{"name":"RoomRegions","description":"All available Nadeo-hosted club rooms regions.","type":[[["RoomRegion"]]]},{"name":"ClubMemberRoles","description":"All available Club Member roles.","type":[[["ClubMemberRole"]]]},{"name":"AdTypes","description":"All available Maniapub Types.","type":[[["AdType"]]]}],"meta":{"line":69,"file":"Constants.js","path":"src/util"}},{"name":"PlayerGroup","description":"All available player groups.\n* `nadeo` - All players from the Nadeo company\n* `tmgl` - All players from the TMGL competition\n* `tmwc21` - All players from the TrackMania World Cup 2021 competition\n* `sponsor` - All players who sponsors Trackmania.io and Openplanet\n* `team` - All players from the Trackmania.io and Openplanet team","type":[[["string"]]],"meta":{"line":3,"file":"Constants.js","path":"src/util"}},{"name":"MatchmakingGroup","description":"All available matchmaking groups.\n* `3v3`\n* `royal`","type":[[["string"]]],"meta":{"line":20,"file":"Constants.js","path":"src/util"}},{"name":"RoomRegion","description":"All available Nadeo-hosted club rooms regions.\n* `eu-west` - Europe West\n* `ca-central` - Canada Central","type":[[["string"]]],"meta":{"line":32,"file":"Constants.js","path":"src/util"}},{"name":"ClubMemberRole","description":"All available Club Member roles.\n* `Creator`\n* `Admin`\n* `Content_Creator`\n* `Member`","type":[[["string"]]],"meta":{"line":43,"file":"Constants.js","path":"src/util"}},{"name":"AdType","description":"All available Maniapub Types.\n* `nadeo` - Nadeo official Maniapubs\n* `ugc` - (User Generated Content) - Community Maniapubs","type":[[["string"]]],"meta":{"line":58,"file":"Constants.js","path":"src/util"}}],"externals":[]}