{"meta":{"generator":"0.10.0","format":20,"date":1637081392661},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"<div align=\"center\">\n\n[![NPM](docs/infography/image.svg)](https://tmio.greep.gq/#)\n\n[![NPM](https://nodei.co/npm/trackmania.io.png?downloads=true&stars=true)](https://npmjs.org/trackmania.io)\n\n[![Trackmania.io API Status](https://img.shields.io/website?down_message=Offline&label=Trackmania.io%20API&up_message=Online&url=https%3A%2F%2Ftrackmania.io)](https://trackmania.io)\n[![Discord](https://img.shields.io/discord/570024448371982373?label=Discord&logo=discord)](https://greep.gq/discord)\n\n[![npm](https://img.shields.io/npm/dw/trackmania.io?logo=npm)](https://npmjs.com/trackmania.io)\n[![NPM](https://img.shields.io/npm/l/trackmania.io)](LICENSE)\n\n[![GitHub issues](https://img.shields.io/github/issues/GreepTheSheep/node-trackmania.io?logo=github)](https://github.com/GreepTheSheep/node-trackmania.io/issues)\n[![GitHub pull requests](https://img.shields.io/github/issues-pr/GreepTheSheep/node-trackmania.io?logo=github)](https://github.com/GreepTheSheep/node-trackmania.io/pulls)\n\n[![GitHub Repo stars](https://img.shields.io/github/stars/GreepTheSheep/node-trackmania.io?logo=github&style=flat-square)](https://github.com/GreepTheSheep/node-trackmania.io/stargazers)\n[![GitHub forks](https://img.shields.io/github/forks/GreepTheSheep/node-trackmania.io?style=flat-square)](https://github.com/GreepTheSheep/node-trackmania.io/network/members)\n\n[![Unit Test (Push) & Builds](https://github.com/GreepTheSheep/node-trackmania.io/actions/workflows/builds.yml/badge.svg)](https://github.com/GreepTheSheep/node-trackmania.io/actions/workflows/builds.yml)\n\n</div>\n\n## Disclaimer - [Can I use the Trackmania.io API for my own project?](https://openplanet.nl/tmio/api)\n\n[Please read this topic](https://openplanet.nl/tmio/api)\n\n*The User Agent Header will be automatically set to your project directory name, with your current file name included, you can also set your User Agent with the method `Client.setUserAgent(\"My Project Name\");`*\n\nAPI Keys can be set with the method `Client.setAPIKey(\"yourname:yourkey\");`\n\n**You are responsible for the program you code, if you are banned from the API don't blame the wrapper or trackmania.io, blame yourself!**\n\nIf you're still unsure about your use of the API, feel free to DM Miss#8888 with any further questions.\n\n---\n## Contributing\n\nPlease see the [CONTRIBUTING.md file](CONTRIBUTING.md)\n\n---\n## Discussion\n\nIf you want to talk about this project or just for saying hi, Join the [Project's Discord Server](https://greep.gq/discord), in the #node-tmio channel\n\n---\n## Thanks\n\nThanks to [@codecat](https://github.com/codecat) for creating trackmania.io and for helping me with their API *(and updating it everytime)*.\n\nThanks to Nadeo (Trackmania's studio) for giving an API to trackmania.io.\n\nThanks to [@dassschaf](https://github.com/dassschaf) and [@stefan-baumann](https://github.com/stefan-baumann) for chat formatting remover code in regex *(it saves my life)*\n\nThanks to [@Flirno](https://github.com/Flirno) for player COTD results API\n\nThanks to [@jonese1234](https://github.com/jonese1234) for the dataset to get the players searching\n","path":"README.md"}}}},"classes":[{"name":"BaseClient","description":"The Base Client","construct":{"name":"BaseClient","params":[{"name":"options","description":"The options to use.","optional":true,"default":"{}","type":[[["defaultOptions"]]]}]},"props":[{"name":"options","description":"The options of the client.","readonly":true,"type":[[["defaultOptions"]]],"meta":{"line":21,"file":"BaseClient.js","path":"src/client"}},{"name":"ratelimit","description":"Get the ratelimits details on trackmania.io.","type":[[["ClientRatelimit"]]],"meta":{"line":27,"file":"BaseClient.js","path":"src/client"}}],"methods":[{"name":"_apiReq","description":"Do an API request","access":"private","params":[{"name":"url","description":"The URL to request","type":[[["string"]]]},{"name":"method","description":"The HTTP method to use","optional":true,"default":"\"GET\"","type":[[["string"]]]},{"name":"body","description":"The data to send","optional":true,"default":null,"nullable":true,"type":[[["Object"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Object",">"]]],"description":"A promise that resolves to the API response"},"meta":{"line":38,"file":"BaseClient.js","path":"src/client"}},{"name":"setUserAgent","description":"Sets a User Agent for your project.\nRequired if you run a important project.","params":[{"name":"useragent","description":"The User Agent to set to.","optional":true,"default":"this.options.api.useragent","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":50,"file":"BaseClient.js","path":"src/client"}},{"name":"setAPIKey","description":"Sets an API Key.\nRequired if you run a important project. It will triple the rate limit.","params":[{"name":"key","description":"The full API key. It must contains \"yourname:theactualsecretkey\"","optional":true,"default":"this.options.api.key","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":60,"file":"BaseClient.js","path":"src/client"}}],"meta":{"line":9,"file":"BaseClient.js","path":"src/client"}},{"name":"ClientRatelimit","description":"The ratelimit details of the client.","props":[{"name":"baseClient","description":"The base client.","type":[[["BaseClient"]]],"meta":{"line":75,"file":"BaseClient.js","path":"src/client"}},{"name":"ratelimit","description":"The total number of requests you can make on trackmania.io API.\nIf null, it means you haven't actually done a request","nullable":true,"type":[[["number"]]],"meta":{"line":82,"file":"BaseClient.js","path":"src/client"}},{"name":"remaining","description":"The number of requests you can make before the ratelimit resets.\nIf null, it means you haven't actually done a request","nullable":true,"type":[[["number"]]],"meta":{"line":89,"file":"BaseClient.js","path":"src/client"}},{"name":"reset","description":"The date when the ratelimit resets.\nIf null, it means you haven't actually done a request","nullable":true,"type":[[["Date"]]],"meta":{"line":96,"file":"BaseClient.js","path":"src/client"}}],"meta":{"line":69,"file":"BaseClient.js","path":"src/client"}},{"name":"Client","description":"Instantiates a new client.","extends":[[["BaseClient"]]],"construct":{"name":"Client","params":[{"name":"options","description":"The options to use","optional":true,"default":"{}","type":[[["defaultOptions"]]]}]},"props":[{"name":"players","description":"The player manager","type":[[["PlayerManager"]]],"meta":{"line":30,"file":"Client.js","path":"src/client"}},{"name":"maps","description":"The map manager","type":[[["MapManager"]]],"meta":{"line":36,"file":"Client.js","path":"src/client"}},{"name":"totd","description":"The TOTD manager","type":[[["TOTDManager"]]],"meta":{"line":42,"file":"Client.js","path":"src/client"}},{"name":"cotd","description":"The COTD manager","type":[[["COTDManager"]]],"meta":{"line":48,"file":"Client.js","path":"src/client"}},{"name":"clubs","description":"The club manager","type":[[["ClubManager"]]],"meta":{"line":54,"file":"Client.js","path":"src/client"}},{"name":"campaigns","description":"The campaign manager","type":[[["CampaignManager"]]],"meta":{"line":60,"file":"Client.js","path":"src/client"}},{"name":"rooms","description":"The room manager","type":[[["RoomManager"]]],"meta":{"line":66,"file":"Client.js","path":"src/client"}},{"name":"events","description":"The TM events manager","type":[[["EventManager"]]],"meta":{"line":72,"file":"Client.js","path":"src/client"}},{"name":"options","description":"The options of the client.","readonly":true,"type":[[["defaultOptions"]]],"meta":{"line":21,"file":"BaseClient.js","path":"src/client"}},{"name":"ratelimit","description":"Get the ratelimits details on trackmania.io.","type":[[["ClientRatelimit"]]],"meta":{"line":27,"file":"BaseClient.js","path":"src/client"}}],"methods":[{"name":"_apiReq","description":"Do an API request","access":"private","inherits":"BaseClient#_apiReq","inherited":true,"params":[{"name":"url","description":"The URL to request","type":[[["string"]]]},{"name":"method","description":"The HTTP method to use","optional":true,"default":"\"GET\"","type":[[["string"]]]},{"name":"body","description":"The data to send","optional":true,"default":null,"nullable":true,"type":[[["Object"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Object",">"]]],"description":"A promise that resolves to the API response"},"meta":{"line":38,"file":"BaseClient.js","path":"src/client"}},{"name":"setUserAgent","description":"Sets a User Agent for your project.\nRequired if you run a important project.","inherits":"BaseClient#setUserAgent","inherited":true,"params":[{"name":"useragent","description":"The User Agent to set to.","optional":true,"default":"this.options.api.useragent","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":50,"file":"BaseClient.js","path":"src/client"}},{"name":"setAPIKey","description":"Sets an API Key.\nRequired if you run a important project. It will triple the rate limit.","inherits":"BaseClient#setAPIKey","inherited":true,"params":[{"name":"key","description":"The full API key. It must contains \"yourname:theactualsecretkey\"","optional":true,"default":"this.options.api.key","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":60,"file":"BaseClient.js","path":"src/client"}}],"meta":{"line":19,"file":"Client.js","path":"src/client"}},{"name":"CacheManager","description":"The Cache Manager is responsible for managing the cache.","extends":[[["Map"]]],"access":"private","construct":{"name":"CacheManager","description":"Creates a new CacheManager instance.","params":[{"name":"client","description":"The client instance.","type":[[["Client"]]]},{"name":"from","description":"The class that instants this manager.","type":[["*"]]},{"name":"to","description":"The class this manager will operate on.","type":[["*"]]}]},"props":[{"name":"from","description":"The class that instantiated this manager.","readonly":true,"type":[["*"]],"meta":{"line":23,"file":"CacheManager.js","path":"src/managers"}},{"name":"to","description":"The class this manager will operate on.","readonly":true,"type":[["*"]],"meta":{"line":30,"file":"CacheManager.js","path":"src/managers"}},{"name":"client","description":"The client instance.","type":[[["Client"]]],"meta":{"line":36,"file":"CacheManager.js","path":"src/managers"}},{"name":"_ttl","description":"The time to live for the cache in miliseconds.","access":"private","type":[[["number"]]],"meta":{"line":49,"file":"CacheManager.js","path":"src/managers"}}],"methods":[{"name":"_reset","description":"Resets the cache based on the ttl.","access":"private","meta":{"line":60,"file":"CacheManager.js","path":"src/managers"}}],"meta":{"line":8,"file":"CacheManager.js","path":"src/managers"}},{"name":"CampaignManager","description":"Represents a manager for campaigns.","construct":{"name":"CampaignManager","params":[{"name":"client","description":"The client","type":[[["Client"]]]}]},"props":[{"name":"client","description":"The client instance.","readonly":true,"type":[[["Client"]]],"meta":{"line":20,"file":"CampaignManager.js","path":"src/managers"}},{"name":"_cache","description":"The cache manager","access":"private","type":[[["CacheManager"]]],"meta":{"line":27,"file":"CampaignManager.js","path":"src/managers"}}],"methods":[{"name":"currentSeason","description":"Get the current official campaign","params":[{"name":"cache","description":"Whether to use from the cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Campaign",">"]]],"description":"The campaign"},"meta":{"line":35,"file":"CampaignManager.js","path":"src/managers"}},{"name":"officialCampaigns","description":"Get all official campaigns from recent to old","async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["CampaignSearchResult",">>"]]],"description":"The campaigns"},"meta":{"line":51,"file":"CampaignManager.js","path":"src/managers"}},{"name":"popularCampaigns","description":"Get all popular campaigns (official excluded) (top 50)","params":[{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["CampaignSearchResult",">>"]]],"description":"The campaigns"},"meta":{"line":69,"file":"CampaignManager.js","path":"src/managers"}},{"name":"search","description":"Searches for a campaign","examples":["client.campaigns.search('htimh').then(campaigns => {\n   client.campaigns.get(campaigns[0].clubid, campaigns[0].id).then(async campaign => {\n      const maps = await campaign.maps();\n      maps.forEach(map => console.log(map.name));\n  });\n});"],"params":[{"name":"query","description":"The query","type":[[["string"]]]},{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["CampaignSearchResult",">>"]]],"description":"The campaigns"},"meta":{"line":95,"file":"CampaignManager.js","path":"src/managers"}},{"name":"get","description":"Fetches a Trackmania campaign and returns its data","examples":["client.campaigns.get(54, 10621).then(campaign => {\n    console.log(campaign.name);\n});"],"params":[{"name":"clubId","description":"The club Id that the campaign belongs to (If it's an official campaign, set it to 0)","optional":true,"default":0,"type":[[["number"]]]},{"name":"id","description":"The campaign Id","type":[[["number"]]]},{"name":"cache","description":"Whether to get the campaign from cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Campaign",">"]]],"description":"The campaign"},"meta":{"line":117,"file":"CampaignManager.js","path":"src/managers"}},{"name":"_fetch","description":"Fetches a campaign and returns its data","access":"private","params":[{"name":"clubId","description":"The club Id that the campaign belongs to","optional":true,"default":0,"type":[[["number"]]]},{"name":"id","description":"The campaign Id","type":[[["string"]]]},{"name":"cache","description":"Whether to cache the campaign or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Campaign"]]],"description":"The campaign"},"meta":{"line":133,"file":"CampaignManager.js","path":"src/managers"}}],"meta":{"line":10,"file":"CampaignManager.js","path":"src/managers"}},{"name":"CampaignSearchResult","description":"The result of a campaign search. It is completely different from the {@link Campaign} object.","construct":{"name":"CampaignSearchResult","params":[{"name":"client","description":"The client instance.","type":[[["Client"]]]},{"name":"data","description":"The data.","type":[[["Object"]]]}]},"props":[{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":168,"file":"CampaignManager.js","path":"src/managers"}},{"name":"id","description":"The campaign's ID","type":[[["number"]]],"meta":{"line":174,"file":"CampaignManager.js","path":"src/managers"}},{"name":"clubId","description":"The campaign's Club ID","type":[[["number"]]],"meta":{"line":180,"file":"CampaignManager.js","path":"src/managers"}},{"name":"name","description":"The campaign's name","type":[[["string"]]],"meta":{"line":186,"file":"CampaignManager.js","path":"src/managers"}},{"name":"date","description":"The campaign's creation date","type":[[["Date"]]],"meta":{"line":192,"file":"CampaignManager.js","path":"src/managers"}},{"name":"mapCount","description":"The campaign's map count","type":[[["number"]]],"meta":{"line":198,"file":"CampaignManager.js","path":"src/managers"}}],"methods":[{"name":"campaign","description":"Return to the Campaign Object","async":true,"returns":[[["Promise","<"],["Campaign",">"]]],"meta":{"line":205,"file":"CampaignManager.js","path":"src/managers"}}],"meta":{"line":158,"file":"CampaignManager.js","path":"src/managers"}},{"name":"ClubManager","description":"Represents a manager for clubs.","construct":{"name":"ClubManager","params":[{"name":"client","description":"The client.","type":[[["Client"]]]}]},"props":[{"name":"client","description":"The client instance.","readonly":true,"type":[[["Client"]]],"meta":{"line":19,"file":"ClubManager.js","path":"src/managers"}},{"name":"_cache","description":"The cache manager","access":"private","type":[[["CacheManager"]]],"meta":{"line":26,"file":"ClubManager.js","path":"src/managers"}}],"methods":[{"name":"popularClubs","description":"Gets all the popular clubs","params":[{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]},{"name":"cache","description":"Whether to cache the clubs or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["Club",">>"]]],"description":"The clubs"},"meta":{"line":35,"file":"ClubManager.js","path":"src/managers"}},{"name":"get","description":"Fetches a Trackmania Club and returns its data","examples":["client.clubs.get(54).then(club => {\n    console.log(club.name);\n});"],"params":[{"name":"id","description":"The Club Id","type":[[["number"]]]},{"name":"cache","description":"Whether to get the club from cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Club",">"]]],"description":"The Club"},"meta":{"line":58,"file":"ClubManager.js","path":"src/managers"}},{"name":"_fetch","description":"Fetches a map and returns its data","access":"private","params":[{"name":"id","description":"The Club Id","type":[[["string"]]]},{"name":"cache","description":"Whether to cache the club or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Club"]]],"description":"The club"},"meta":{"line":73,"file":"ClubManager.js","path":"src/managers"}}],"meta":{"line":9,"file":"ClubManager.js","path":"src/managers"}},{"name":"COTDManager","description":"Represents a COTD Manager.","construct":{"name":"COTDManager","params":[{"name":"client","description":"The client.","type":[[["Client"]]]}]},"props":[{"name":"client","description":"The client instance.","type":[[["Client"]]],"meta":{"line":19,"file":"COTDManager.js","path":"src/managers"}},{"name":"_cache","description":"The cache manager","access":"private","type":[[["CacheManager"]]],"meta":{"line":26,"file":"COTDManager.js","path":"src/managers"}}],"methods":[{"name":"get","description":"Fetches a Trackmania event and returns its data","examples":["client.cotd.get().then(event => {\n    console.log(event.name);\n});"],"params":[{"name":"page","description":"The page, each page contains 12 items","optional":true,"default":0,"type":[[["number"]]]},{"name":"cache","description":"Whether to get the list from cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["COTD",">>"]]],"description":"The COTD list"},"meta":{"line":39,"file":"COTDManager.js","path":"src/managers"}},{"name":"_fetch","description":"Fetches a event and returns its data","access":"private","params":[{"name":"page","description":"The page","optional":true,"default":0,"type":[[["number"]]]},{"name":"cache","description":"Whether to cache the list or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["array","<"],["COTD",">"]]],"description":"The COTD list"},"meta":{"line":54,"file":"COTDManager.js","path":"src/managers"}}],"meta":{"line":10,"file":"COTDManager.js","path":"src/managers"}},{"name":"EventManager","description":"Represents a manager for in-game events.","construct":{"name":"EventManager","params":[{"name":"client","description":"The client.","type":[[["Client"]]]}]},"props":[{"name":"client","description":"The client instance.","readonly":true,"type":[[["Client"]]],"meta":{"line":20,"file":"EventManager.js","path":"src/managers"}},{"name":"_cache","description":"The cache manager","access":"private","type":[[["CacheManager"]]],"meta":{"line":27,"file":"EventManager.js","path":"src/managers"}}],"methods":[{"name":"listEvents","description":"List all available events","params":[{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["EventSearchResult",">>"]]],"description":"The events"},"meta":{"line":35,"file":"EventManager.js","path":"src/managers"}},{"name":"search","description":"Searches for an event by name","params":[{"name":"query","description":"The query","type":[[["string"]]]},{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["EventSearchResult",">>"]]],"description":"The events"},"meta":{"line":48,"file":"EventManager.js","path":"src/managers"}},{"name":"get","description":"Fetches a Trackmania event and returns its data","examples":["client.events.get(706).then(event => {\n    console.log(event.name);\n});"],"params":[{"name":"eventId","description":"The event id","type":[[["number"]]]},{"name":"cache","description":"Whether to get the map from cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["TMEvent",">"]]],"description":"The event"},"meta":{"line":65,"file":"EventManager.js","path":"src/managers"}},{"name":"_fetch","description":"Fetches a event and returns its data","access":"private","params":[{"name":"eventId","description":"The event id","type":[[["number"]]]},{"name":"cache","description":"Whether to cache the map or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Event"]]],"description":"The event"},"meta":{"line":80,"file":"EventManager.js","path":"src/managers"}}],"meta":{"line":10,"file":"EventManager.js","path":"src/managers"}},{"name":"EventSearchResult","description":"The result of a campaign search. It is completely different from the {@link TMEvent} object.","construct":{"name":"EventSearchResult","params":[{"name":"client","description":"The client instance.","type":[[["Client"]]]},{"name":"data","description":"The data.","type":[[["Object"]]]}]},"props":[{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":107,"file":"EventManager.js","path":"src/managers"}},{"name":"id","description":"The event's ID","type":[[["number"]]],"meta":{"line":113,"file":"EventManager.js","path":"src/managers"}},{"name":"compId","description":"The event's competiton ID","type":[[["number"]]],"meta":{"line":119,"file":"EventManager.js","path":"src/managers"}},{"name":"clubId","description":"The event's Club ID","type":[[["number"]]],"meta":{"line":125,"file":"EventManager.js","path":"src/managers"}},{"name":"name","description":"The event's name","type":[[["string"]]],"meta":{"line":131,"file":"EventManager.js","path":"src/managers"}},{"name":"date","description":"The event's creation date","type":[[["Date"]]],"meta":{"line":137,"file":"EventManager.js","path":"src/managers"}}],"methods":[{"name":"event","description":"Return to the TMEvent Object","async":true,"returns":[[["Promise","<"],["TMEvent",">"]]],"meta":{"line":144,"file":"EventManager.js","path":"src/managers"}}],"meta":{"line":97,"file":"EventManager.js","path":"src/managers"}},{"name":"MapManager","description":"Represents a map manager.","construct":{"name":"MapManager","params":[{"name":"client","description":"The client","type":[[["Client"]]]}]},"props":[{"name":"client","description":"The client instance.","readonly":true,"type":[[["Client"]]],"meta":{"line":19,"file":"MapManager.js","path":"src/managers"}},{"name":"_cache","description":"The cache manager","access":"private","type":[[["CacheManager"]]],"meta":{"line":26,"file":"MapManager.js","path":"src/managers"}}],"methods":[{"name":"get","description":"Fetches a Trackmania map and returns its data","examples":["client.maps.get('z28QXoFnpODEGgg8MOederEVl3j').then(map => {\n    console.log(map.name);\n});"],"params":[{"name":"mapUid","description":"The map UID","type":[[["string"]]]},{"name":"cache","description":"Whether to get the map from cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["TMMap",">"]]],"description":"The map"},"meta":{"line":39,"file":"MapManager.js","path":"src/managers"}},{"name":"_fetch","description":"Fetches a map and returns its data","access":"private","params":[{"name":"mapUid","description":"The map UID","type":[[["string"]]]},{"name":"cache","description":"Whether to cache the map or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["TMMap"]]],"description":"The map"},"meta":{"line":54,"file":"MapManager.js","path":"src/managers"}}],"meta":{"line":9,"file":"MapManager.js","path":"src/managers"}},{"name":"NewsManager","description":"Represents a in-game news manager.","construct":{"name":"NewsManager","params":[{"name":"client","description":"The client","type":[[["Client"]]]}]},"props":[{"name":"client","description":"The client instance.","readonly":true,"type":[[["Client"]]],"meta":{"line":19,"file":"NewsManager.js","path":"src/managers"}},{"name":"_cache","description":"The cache manager","access":"private","type":[[["CacheManager"]]],"meta":{"line":26,"file":"NewsManager.js","path":"src/managers"}}],"methods":[{"name":"list","description":"Get the in-game news list","params":[{"name":"page","description":"The page number","default":0,"type":[[["number"]]]},{"name":"cache","description":"Whether to cache the news or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["Boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["News",">>"]]],"meta":{"line":35,"file":"NewsManager.js","path":"src/managers"}},{"name":"get","description":"Fetches a Trackmania splashscreen and returns its data.","examples":["client.news.get(143).then(news => {\n    console.log(news.title);\n});"],"params":[{"name":"newsId","description":"The splashscreen ID","type":[[["number"]]]},{"name":"cache","description":"Whether to get the news from cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["News",">"]]],"description":"The splashscreen"},"meta":{"line":62,"file":"NewsManager.js","path":"src/managers"}},{"name":"_fetch","description":"Fetches a splashscreen and returns its data","access":"private","params":[{"name":"newsId","description":"The splashscreen ID","type":[[["number"]]]},{"name":"cache","description":"Whether to cache the news or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["News"]]],"description":"The splashscreen"},"meta":{"line":77,"file":"NewsManager.js","path":"src/managers"}}],"meta":{"line":9,"file":"NewsManager.js","path":"src/managers"}},{"name":"PlayerManager","description":"Represents a manager for players.","construct":{"name":"PlayerManager","params":[{"name":"client","description":"The client.","type":[[["Client"]]]}]},"props":[{"name":"client","description":"The client instance","readonly":true,"type":[[["Client"]]],"meta":{"line":21,"file":"PlayerManager.js","path":"src/managers"}},{"name":"_cache","description":"The cache manager","access":"private","type":[[["CacheManager"]]],"meta":{"line":28,"file":"PlayerManager.js","path":"src/managers"}}],"methods":[{"name":"search","description":"Searches for a player by its name","examples":["// Search for a player\nclient.players.search('greep').then(results => {\n   client.players.get(results[0].id).then(player => {\n      console.log('The tag of this player is', player.tag);\n  });\n});"],"params":[{"name":"query","description":"The query to search for","type":[[["string"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["PlayerSearchResult",">>"]]],"description":"The results"},"meta":{"line":43,"file":"PlayerManager.js","path":"src/managers"}},{"name":"group","description":"Get all players from a group","params":[{"name":"groupName","description":"The group name","type":[[["PlayerGroup"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["PlayerSearchResult",">>"]]],"description":"The results","nullable":true},"meta":{"line":59,"file":"PlayerManager.js","path":"src/managers"}},{"name":"topTrophies","description":"Get the trophy leaderboard","examples":["Client.players.topTrophies().then(top => {\n   console.log(\"The number 1 player is \" + top[0].player.name + \" with \" + top[0].score + \" trophies\");\n});"],"params":[{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["PlayerTopTrophy",">>"]]],"description":"The players' top trophies"},"meta":{"line":83,"file":"PlayerManager.js","path":"src/managers"}},{"name":"topMatchmaking","description":"Gets the matchmaking leaderboard","params":[{"name":"group","description":"The matchmaking group","type":[[["MatchmakingGroup"]]]},{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["PlayerTopMatchmaking",">>"]]],"description":"The players' top matchmaking"},"meta":{"line":99,"file":"PlayerManager.js","path":"src/managers"}},{"name":"get","description":"Fetches a player and returns its data","examples":["// Get a player \nclient.players.get('26d9a7de-4067-4926-9d93-2fe62cd869fc').then(player => {\n    console.log(player.name);\n});"],"params":[{"name":"accountid","description":"The account ID or its tm.io vanity name","type":[[["string"]]]},{"name":"cache","description":"Whether to get the player from cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Player",">"]]],"description":"The player"},"meta":{"line":121,"file":"PlayerManager.js","path":"src/managers"}},{"name":"_fetch","description":"Fetches a player and returns its data","access":"private","params":[{"name":"accountid","description":"The account ID or its tm.io vanity name","type":[[["string"]]]},{"name":"cache","description":"Whether to cache the player or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Player"]]],"description":"The player"},"meta":{"line":136,"file":"PlayerManager.js","path":"src/managers"}}],"meta":{"line":11,"file":"PlayerManager.js","path":"src/managers"}},{"name":"PlayerTopTrophy","description":"Represents a player top trophy","construct":{"name":"PlayerTopTrophy","params":[{"name":"client","description":"The client instance","type":[[["Client"]]]},{"name":"data","description":"The data","type":[[["Object"]]]}]},"props":[{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":168,"file":"PlayerManager.js","path":"src/managers"}},{"name":"player","description":"The player","type":[[["PlayerSearchResult"]]],"meta":{"line":174,"file":"PlayerManager.js","path":"src/managers"}},{"name":"rank","description":"The rank","type":[[["number"]]],"meta":{"line":180,"file":"PlayerManager.js","path":"src/managers"}},{"name":"score","description":"The score (number of trophies)","type":[[["number"]]],"meta":{"line":186,"file":"PlayerManager.js","path":"src/managers"}}],"meta":{"line":158,"file":"PlayerManager.js","path":"src/managers"}},{"name":"PlayerTopMatchmaking","description":"The player top matchmaking","construct":{"name":"PlayerTopMatchmaking","params":[{"name":"client","description":"The client instance","type":[[["Client"]]]},{"name":"typeId","description":"The matchmaking type ID","type":[[["MatchmakingGroup"]]]},{"name":"data","description":"The data","type":[[["Object"]]]}]},"props":[{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":204,"file":"PlayerManager.js","path":"src/managers"}},{"name":"player","description":"The player","type":[[["PlayerSearchResult"]]],"meta":{"line":210,"file":"PlayerManager.js","path":"src/managers"}},{"name":"rank","description":"The rank","type":[[["number"]]],"meta":{"line":216,"file":"PlayerManager.js","path":"src/managers"}},{"name":"score","description":"The score","type":[[["number"]]],"meta":{"line":222,"file":"PlayerManager.js","path":"src/managers"}},{"name":"division","description":"The matchmaking division of the player","type":[[["MatchmakingDivision"]]],"meta":{"line":228,"file":"PlayerManager.js","path":"src/managers"}}],"meta":{"line":193,"file":"PlayerManager.js","path":"src/managers"}},{"name":"PlayerSearchResult","description":"The result of a player search. It is completely different from the {@link Player} object.","construct":{"name":"PlayerSearchResult","params":[{"name":"client","description":"The client instance.","type":[[["Client"]]]},{"name":"data","description":"The data.","type":[[["Object"]]]}]},"props":[{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":245,"file":"PlayerManager.js","path":"src/managers"}},{"name":"id","description":"The player's account ID","type":[[["string"]]],"meta":{"line":251,"file":"PlayerManager.js","path":"src/managers"}},{"name":"name","description":"The player's display name","type":[[["string"]]],"meta":{"line":257,"file":"PlayerManager.js","path":"src/managers"}},{"name":"tag","description":"The player's club tag (if any)","nullable":true,"type":[[["string"]]],"meta":{"line":263,"file":"PlayerManager.js","path":"src/managers"}}],"methods":[{"name":"player","description":"Return to the Player Object","async":true,"returns":[[["Promise","<"],["Player",">"]]],"meta":{"line":270,"file":"PlayerManager.js","path":"src/managers"}}],"meta":{"line":235,"file":"PlayerManager.js","path":"src/managers"}},{"name":"RoomManager","description":"Represents a manager for rooms.","construct":{"name":"RoomManager","params":[{"name":"client","description":"The client.","type":[[["Client"]]]}]},"props":[{"name":"client","description":"The client instance.","readonly":true,"type":[[["Client"]]],"meta":{"line":19,"file":"RoomManager.js","path":"src/managers"}},{"name":"_cache","description":"The cache manager","access":"private","type":[[["CacheManager"]]],"meta":{"line":26,"file":"RoomManager.js","path":"src/managers"}}],"methods":[{"name":"popularRooms","description":"Get the popular Club rooms (by number of players connected)","params":[{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["RoomSearchResult",">>"]]],"description":"The rooms"},"meta":{"line":34,"file":"RoomManager.js","path":"src/managers"}},{"name":"search","description":"Searches for a room","params":[{"name":"query","description":"The query to search for","type":[[["string"]]]},{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["RoomSearchResult",">>"]]],"description":"The rooms"},"meta":{"line":47,"file":"RoomManager.js","path":"src/managers"}},{"name":"get","description":"Fetches a Trackmania room (server) and returns its data","examples":["client.rooms.get(338, 1180).then(room => {\n    console.log(room.name);\n});"],"params":[{"name":"clubId","description":"The club Id that the room belongs to","type":[[["number"]]]},{"name":"id","description":"The room Id","type":[[["number"]]]},{"name":"cache","description":"Whether to get the room from cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Room",">"]]],"description":"The room"},"meta":{"line":65,"file":"RoomManager.js","path":"src/managers"}},{"name":"_fetch","description":"Fetches a room and returns its data","access":"private","params":[{"name":"clubId","description":"The club Id that the room belongs to","type":[[["number"]]]},{"name":"id","description":"The room Id","type":[[["string"]]]},{"name":"cache","description":"Whether to cache the room or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Campaign"]]],"description":"The room"},"meta":{"line":81,"file":"RoomManager.js","path":"src/managers"}}],"meta":{"line":9,"file":"RoomManager.js","path":"src/managers"}},{"name":"RoomSearchResult","description":"The result of a campaign search. It is completely different from the {@link Room} object.","construct":{"name":"RoomSearchResult","params":[{"name":"client","description":"The client instance.","type":[[["Client"]]]},{"name":"data","description":"The data.","type":[[["Object"]]]}]},"props":[{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":108,"file":"RoomManager.js","path":"src/managers"}},{"name":"id","description":"The room's ID","type":[[["number"]]],"meta":{"line":114,"file":"RoomManager.js","path":"src/managers"}},{"name":"clubId","description":"The room's Club ID","type":[[["number"]]],"meta":{"line":120,"file":"RoomManager.js","path":"src/managers"}},{"name":"name","description":"The room's name","type":[[["string"]]],"meta":{"line":126,"file":"RoomManager.js","path":"src/managers"}},{"name":"nadeo","description":"Whether the room is hosted by Nadeo","type":[[["boolean"]]],"meta":{"line":132,"file":"RoomManager.js","path":"src/managers"}},{"name":"playerCount","description":"The player count","type":[[["number"]]],"meta":{"line":138,"file":"RoomManager.js","path":"src/managers"}},{"name":"maxPlayerCount","description":"The max player count","type":[[["number"]]],"meta":{"line":144,"file":"RoomManager.js","path":"src/managers"}}],"methods":[{"name":"room","description":"Return to the Room Object","async":true,"returns":[[["Promise","<"],["Room",">"]]],"meta":{"line":151,"file":"RoomManager.js","path":"src/managers"}}],"meta":{"line":98,"file":"RoomManager.js","path":"src/managers"}},{"name":"TOTDManager","description":"Represents a manager for TOTDs.","construct":{"name":"TOTDManager","params":[{"name":"client","description":"The client.","type":[[["Client"]]]}]},"props":[{"name":"client","description":"The client instance.","readonly":true,"type":[[["Client"]]],"meta":{"line":19,"file":"TOTDManager.js","path":"src/managers"}},{"name":"_cache","description":"The cache manager","access":"private","type":[[["CacheManager"]]],"meta":{"line":26,"file":"TOTDManager.js","path":"src/managers"}}],"methods":[{"name":"_calculateMonths","description":"Calculate the number of months between today and the month and year","access":"private","params":[{"name":"date","description":"The date","type":[[["Date"]]]}],"meta":{"line":34,"file":"TOTDManager.js","path":"src/managers"}},{"name":"get","description":"Fetches a TOTD with it's day and returns its data","examples":["// Gets the TOTD of today\nclient.totd.get(new Date()).then(totd => {\n    console.log(totd.map.name);\n});"],"params":[{"name":"date","description":"The date","type":[[["Date"]]]},{"name":"cache","description":"Whether to get the map from cache or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["TOTD",">"]]],"description":"The map"},"meta":{"line":53,"file":"TOTDManager.js","path":"src/managers"}},{"name":"_fetch","description":"Fetches a TOTD and returns its data","access":"private","params":[{"name":"date","description":"The date","type":[[["Date"]]]},{"name":"cache","description":"Whether to cache the map or not","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["TOTD"]]],"description":"The map"},"meta":{"line":69,"file":"TOTDManager.js","path":"src/managers"}}],"meta":{"line":9,"file":"TOTDManager.js","path":"src/managers"}},{"name":"APIRequest","description":"APIRequest class","access":"private","construct":{"name":"APIRequest","params":[{"name":"client","description":"The client object","type":[[["BaseClient"]]]}]},"props":[{"name":"client","description":"The client that created this request","readonly":true,"type":[[["BaseClient"]]],"meta":{"line":20,"file":"APIRequest.js","path":"src/rest"}},{"name":"UA","description":"The User-Agent string which is used for the requests","type":[[["string"]]],"meta":{"line":31,"file":"APIRequest.js","path":"src/rest"}},{"name":"key","description":"The API key for the requests on trackmania.io","type":[[["string"]]],"meta":{"line":36,"file":"APIRequest.js","path":"src/rest"}}],"methods":[{"name":"do","description":"Makes a request to the API","params":[{"name":"url","description":"The URL","type":[[["string"]]]},{"name":"method","description":"The method","optional":true,"default":"\"GET\"","type":[[["string"]]]},{"name":"body","description":"The body","optional":true,"default":null,"type":[[["Object"]]]}],"returns":{"types":[[["Promise","<"],["Object",">"]]],"description":"The response"},"meta":{"line":53,"file":"APIRequest.js","path":"src/rest"}}],"meta":{"line":10,"file":"APIRequest.js","path":"src/rest"}},{"name":"Campaign","description":"The Campaign class represents a campaign.","construct":{"name":"Campaign","params":[{"name":"client","description":"The client.","type":[[["Clienr"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"client","description":"The client object of the campaign.","type":[[["Client"]]],"meta":{"line":19,"file":"Campaign.js","path":"src/structures"}},{"name":"_data","description":"The data object","access":"private","type":[[["Object"]]],"meta":{"line":26,"file":"Campaign.js","path":"src/structures"}},{"name":"id","description":"The id of the campaign.","type":[[["number"]]],"meta":{"line":33,"file":"Campaign.js","path":"src/structures"}},{"name":"name","description":"The name of the campaign.","type":[[["string"]]],"meta":{"line":41,"file":"Campaign.js","path":"src/structures"}},{"name":"isOfficial","description":"Whether the campaign is official.","type":[[["boolean"]]],"meta":{"line":49,"file":"Campaign.js","path":"src/structures"}},{"name":"image","description":"The image URL of the campaign. If this is an official campaign, the decal image URL is returned.","type":[[["string"]]],"meta":{"line":57,"file":"Campaign.js","path":"src/structures"}},{"name":"createdAt","description":"The creation date of the campaign.","type":[[["Date"]]],"meta":{"line":68,"file":"Campaign.js","path":"src/structures"}},{"name":"updatedAt","description":"The last update date of the campaign.","type":[[["Date"]]],"meta":{"line":76,"file":"Campaign.js","path":"src/structures"}},{"name":"leaderboardId","description":"The leaderboard id of the campaign.","type":[[["string"]]],"meta":{"line":93,"file":"Campaign.js","path":"src/structures"}},{"name":"media","description":"The media images of the campaign, if this is an official campaign.","nullable":true,"type":[[["CampaignMedia"]]],"meta":{"line":119,"file":"Campaign.js","path":"src/structures"}}],"methods":[{"name":"club","description":"The club that owns the campaign. (if it's not an official campaign)","async":true,"returns":{"types":[[["Promise","<"],["Club",">"]]],"nullable":true},"meta":{"line":84,"file":"Campaign.js","path":"src/structures"}},{"name":"maps","description":"The list of maps in the campaign.","examples":["Client.campaigns.get(0, 11612).then(async campaign => {\n  const maps = await campaign.maps();\n  maps.forEach(map => console.log(map.name));\n});"],"async":true,"returns":[[["Promise","<"],["Array","<"],["TMMap",">>"]]],"meta":{"line":106,"file":"Campaign.js","path":"src/structures"}}],"meta":{"line":9,"file":"Campaign.js","path":"src/structures"}},{"name":"CampaignMedia","description":"The media images of an official campaign.","construct":{"name":"CampaignMedia","params":[{"name":"client","description":"The client instance.","type":[[["Client"]]]},{"name":"data","description":"The data object.","type":[[["Object"]]]}]},"props":[{"name":"client","description":"The client object of the campaign.","type":[[["Client"]]],"meta":{"line":142,"file":"Campaign.js","path":"src/structures"}},{"name":"decal","description":"The decal image URL of the campaign.","type":[[["string"]]],"meta":{"line":148,"file":"Campaign.js","path":"src/structures"}},{"name":"buttonBackground","description":"The button background image URL of the campaign.","type":[[["string"]]],"meta":{"line":154,"file":"Campaign.js","path":"src/structures"}},{"name":"buttonForeground","description":"The button foreground image URL of the campaign.","type":[[["string"]]],"meta":{"line":160,"file":"Campaign.js","path":"src/structures"}},{"name":"liveButtonBackground","description":"The live button background image URL of the campaign.","type":[[["string"]]],"meta":{"line":166,"file":"Campaign.js","path":"src/structures"}},{"name":"liveButtonForeground","description":"The live button foreground image URL of the campaign.","type":[[["string"]]],"meta":{"line":172,"file":"Campaign.js","path":"src/structures"}},{"name":"popupBackground","description":"The popup background image URL of the campaign.","type":[[["string"]]],"meta":{"line":178,"file":"Campaign.js","path":"src/structures"}},{"name":"popup","description":"The popup foreground image URL of the campaign.","type":[[["string"]]],"meta":{"line":184,"file":"Campaign.js","path":"src/structures"}}],"meta":{"line":129,"file":"Campaign.js","path":"src/structures"}},{"name":"Club","description":"The Club class represents a club in Trackmania.","construct":{"name":"Club","params":[{"name":"client","description":"The client.","type":[[["Client"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"client","description":"The client object of the club","type":[[["Client"]]],"meta":{"line":19,"file":"Club.js","path":"src/structures"}},{"name":"_data","description":"The data of the club","access":"private","type":[[["Object"]]],"meta":{"line":26,"file":"Club.js","path":"src/structures"}},{"name":"id","description":"The Club ID","type":[[["number"]]],"meta":{"line":33,"file":"Club.js","path":"src/structures"}},{"name":"name","description":"The Club name","type":[[["string"]]],"meta":{"line":41,"file":"Club.js","path":"src/structures"}},{"name":"tag","description":"The Club tag","type":[[["string"]]],"meta":{"line":49,"file":"Club.js","path":"src/structures"}},{"name":"description","description":"The Club description","type":[[["string"]]],"meta":{"line":57,"file":"Club.js","path":"src/structures"}},{"name":"logo","description":"The Club logo URL","type":[[["string"]]],"meta":{"line":65,"file":"Club.js","path":"src/structures"}},{"name":"decal","description":"The Club decal URL","type":[[["string"]]],"meta":{"line":73,"file":"Club.js","path":"src/structures"}},{"name":"background","description":"The Club background URL","type":[[["string"]]],"meta":{"line":81,"file":"Club.js","path":"src/structures"}},{"name":"vertical","description":"The club vertical background URL","type":[[["string"]]],"meta":{"line":89,"file":"Club.js","path":"src/structures"}},{"name":"screens","description":"The club screens URL. Imares are in DDS format, except the sponsor 4x1 that may be in PNG.","type":[[["Object","<"],["string",", "],["string",">"]]],"meta":{"line":97,"file":"Club.js","path":"src/structures"}},{"name":"createdAt","description":"The club creation date","type":[[["Date"]]],"meta":{"line":111,"file":"Club.js","path":"src/structures"}},{"name":"popularity","description":"The club popularity level","type":[[["number"]]],"meta":{"line":119,"file":"Club.js","path":"src/structures"}},{"name":"state","description":"The club state (public/private)","type":[[["string"]]],"meta":{"line":127,"file":"Club.js","path":"src/structures"}},{"name":"featured","description":"Whether the club is featured","type":[[["boolean"]]],"meta":{"line":135,"file":"Club.js","path":"src/structures"}},{"name":"memberCount","description":"The club member count","type":[[["number"]]],"meta":{"line":143,"file":"Club.js","path":"src/structures"}},{"name":"_membersCache","description":"The cache manager for members","access":"private","type":[[["CacheManager"]]],"meta":{"line":174,"file":"Club.js","path":"src/structures"}},{"name":"_activitiesCache","description":"The cache manager for members","access":"private","type":[[["CacheManager"]]],"meta":{"line":206,"file":"Club.js","path":"src/structures"}}],"methods":[{"name":"creator","description":"The club creator player","examples":["Client.clubs.get(54).then(async club => {\n    const creator = await club.creator;\n    console.log(creator.name);\n});"],"async":true,"returns":[[["Promise","<"],["Player",">"]]],"meta":{"line":156,"file":"Club.js","path":"src/structures"}},{"name":"fetchMembers","description":"The club members (Members are sorted by role and club interaction time.)","params":[{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]},{"name":"cache","description":"Whether to cache the result","optional":true,"default":true,"type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["ClubMember",">>"]]],"meta":{"line":166,"file":"Club.js","path":"src/structures"}},{"name":"fetchActivities","description":"The club activities","params":[{"name":"page","description":"The page number","optional":true,"default":0,"type":[[["number"]]]},{"name":"cache","description":"Whether to cache the result","optional":true,"default":true,"type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["ClubActivity",">>"]]],"meta":{"line":199,"file":"Club.js","path":"src/structures"}}],"meta":{"line":9,"file":"Club.js","path":"src/structures"}},{"name":"ClubMember","description":"Represents a club member (player) in the club","construct":{"name":"ClubMember","params":[{"name":"club","description":"The Club.","type":[[["Club"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"club","description":"The club object","type":[[["Club"]]],"meta":{"line":239,"file":"Club.js","path":"src/structures"}},{"name":"_data","description":"The data of the club","access":"private","type":[[["Object"]]],"meta":{"line":246,"file":"Club.js","path":"src/structures"}},{"name":"joinDate","description":"The join date on the club","type":[[["Date"]]],"meta":{"line":261,"file":"Club.js","path":"src/structures"}},{"name":"role","description":"The member role","type":[[["string"]]],"meta":{"line":269,"file":"Club.js","path":"src/structures"}},{"name":"isCreator","description":"Whether the member is a club creator","type":[[["boolean"]]],"meta":{"line":277,"file":"Club.js","path":"src/structures"}},{"name":"isAdmin","description":"Whether the member is a club admin","type":[[["boolean"]]],"meta":{"line":285,"file":"Club.js","path":"src/structures"}},{"name":"isVip","description":"Whether the member is a vip","type":[[["boolean"]]],"meta":{"line":293,"file":"Club.js","path":"src/structures"}}],"methods":[{"name":"member","description":"The member","async":true,"returns":[[["Promise","<"],["Player",">"]]],"meta":{"line":253,"file":"Club.js","path":"src/structures"}}],"meta":{"line":229,"file":"Club.js","path":"src/structures"}},{"name":"ClubActivity","description":"Represents a club activity in the club","construct":{"name":"ClubActivity","params":[{"name":"club","description":"The club","type":[[["Club"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"club","description":"The club object","type":[[["Club"]]],"meta":{"line":311,"file":"Club.js","path":"src/structures"}},{"name":"_data","description":"The data of the club","access":"private","type":[[["Object"]]],"meta":{"line":318,"file":"Club.js","path":"src/structures"}},{"name":"id","description":"The activity id","type":[[["number"]]],"meta":{"line":325,"file":"Club.js","path":"src/structures"}},{"name":"name","description":"The activity name","type":[[["string"]]],"meta":{"line":333,"file":"Club.js","path":"src/structures"}},{"name":"type","description":"The activity type","type":[[["string"]]],"meta":{"line":341,"file":"Club.js","path":"src/structures"}},{"name":"isPublic","description":"Whether the activity is a public activity","type":[[["boolean"]]],"meta":{"line":349,"file":"Club.js","path":"src/structures"}},{"name":"media","description":"The activity image URL","type":[[["string"]]],"meta":{"line":357,"file":"Club.js","path":"src/structures"}},{"name":"isPasswordProtected","description":"Whether the activity is password protected","type":[[["boolean"]]],"meta":{"line":365,"file":"Club.js","path":"src/structures"}},{"name":"externalId","description":"The activity external id","type":[[["number"]]],"meta":{"line":373,"file":"Club.js","path":"src/structures"}}],"methods":[{"name":"campaign","description":"If the activity is a campaign, returns the campaign object of the activity","async":true,"returns":{"types":[[["Promise","<"],["Campaign",">"]]],"nullable":true},"meta":{"line":381,"file":"Club.js","path":"src/structures"}},{"name":"room","description":"If the activity is a room, returns the room object of the activity","async":true,"returns":{"types":[[["Promise","<"],["Room",">"]]],"nullable":true},"meta":{"line":390,"file":"Club.js","path":"src/structures"}}],"meta":{"line":301,"file":"Club.js","path":"src/structures"}},{"name":"COTD","description":"Represents a COTD event.","construct":{"name":"COTD","params":[{"name":"client","description":"The client.","type":[[["Client"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":17,"file":"COTD.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":24,"file":"COTD.js","path":"src/structures"}},{"name":"id","description":"The COTD identifier","type":[[["number"]]],"meta":{"line":39,"file":"COTD.js","path":"src/structures"}},{"name":"name","description":"The COTD name","type":[[["string"]]],"meta":{"line":47,"file":"COTD.js","path":"src/structures"}},{"name":"players","description":"The number of players in this COTD","type":[[["number"]]],"meta":{"line":55,"file":"COTD.js","path":"src/structures"}},{"name":"startDate","description":"The start date of this COTD","type":[[["Date"]]],"meta":{"line":63,"file":"COTD.js","path":"src/structures"}},{"name":"endDate","description":"The end date of this COTD","type":[[["Date"]]],"meta":{"line":71,"file":"COTD.js","path":"src/structures"}}],"methods":[{"name":"event","description":"The event associated on this COTD","async":true,"returns":[[["Promise","<"],["TMEvent",">"]]],"meta":{"line":31,"file":"COTD.js","path":"src/structures"}}],"meta":{"line":7,"file":"COTD.js","path":"src/structures"}},{"name":"MatchmakingDivision","description":"Represents a division in the matchmaking system.","construct":{"name":"MatchmakingDivision","params":[{"name":"client","description":"The client","type":[[["Client"]]]},{"name":"typeId","type":[[["number"]]]},{"name":"division","type":[[["Object"]]]}]},"props":[{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":19,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"typeId","description":"The type of the division","type":[[["number"]]],"meta":{"line":25,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"_division","description":"The division data","access":"private","type":[[["Object"]]],"meta":{"line":33,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"position","description":"The division position","type":[[["number"]]],"meta":{"line":40,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"typeName","description":"The type name of the division","type":[[["string"]]],"meta":{"line":48,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"name","description":"The name of the division","type":[[["string"]]],"meta":{"line":56,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"rule","description":"The rule identifier of this division","type":[[["string"]]],"meta":{"line":65,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"minPoints","description":"The minimum points to the division","type":[[["number"]]],"meta":{"line":73,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"maxPoints","description":"The maximum points to the division","type":[[["number"]]],"meta":{"line":82,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"image","description":"The image of the division. If Royal, the crown","type":[[["string"]]],"meta":{"line":91,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"lion","description":"The Royal Lion image of the division","type":[[["string"]]],"meta":{"line":102,"file":"MatchmakingDivision.js","path":"src/structures"}}],"meta":{"line":8,"file":"MatchmakingDivision.js","path":"src/structures"}},{"name":"News","description":"Represents a news item.","construct":{"name":"News","params":[{"name":"client","description":"The client.","type":[[["Client"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"client","description":"The client object of the news page","type":[[["Client"]]],"meta":{"line":16,"file":"News.js","path":"src/structures"}},{"name":"_data","description":"The data of the news page","access":"private","type":[[["Object"]]],"meta":{"line":23,"file":"News.js","path":"src/structures"}},{"name":"id","description":"The news item's id","type":[[["number"]]],"meta":{"line":30,"file":"News.js","path":"src/structures"}},{"name":"headline","description":"The news item's headline","type":[[["string"]]],"meta":{"line":38,"file":"News.js","path":"src/structures"}},{"name":"body","description":"The news item's text content","type":[[["string"]]],"meta":{"line":46,"file":"News.js","path":"src/structures"}},{"name":"link","description":"The link to the news item on trackmania.com","type":[[["string"]]],"meta":{"line":54,"file":"News.js","path":"src/structures"}},{"name":"media","description":"The news item's accompanying media file as a link","type":[[["string"]]],"meta":{"line":62,"file":"News.js","path":"src/structures"}},{"name":"time","description":"The news item's time of publishing","type":[[["Date"]]],"meta":{"line":70,"file":"News.js","path":"src/structures"}}],"meta":{"line":6,"file":"News.js","path":"src/structures"}},{"name":"Player","description":"Represents a player in Trackmania.","construct":{"name":"Player","params":[{"name":"client","description":"The client.","type":[[["Client"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"client","description":"The client object of the player","type":[[["Client"]]],"meta":{"line":19,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The data of the player","access":"private","type":[[["Object"]]],"meta":{"line":26,"file":"Player.js","path":"src/structures"}},{"name":"id","description":"The account ID of the player","type":[[["string"]]],"meta":{"line":52,"file":"Player.js","path":"src/structures"}},{"name":"name","description":"The display name of the player","type":[[["string"]]],"meta":{"line":60,"file":"Player.js","path":"src/structures"}},{"name":"timestamp","description":"The timestamps of the player's first login","access":"private","readonly":true,"type":[[["Date"]]],"meta":{"line":70,"file":"Player.js","path":"src/structures"}},{"name":"clubTag","description":"The club tag of the player (non-formatted)","type":[[["string"]]],"meta":{"line":78,"file":"Player.js","path":"src/structures"}},{"name":"lastClubTagChange","description":"The last change of the player's club tag","readonly":true,"type":[[["Date"]]],"meta":{"line":87,"file":"Player.js","path":"src/structures"}},{"name":"zone","description":"The player's zone data with the ranking of the player in the zone","type":[[["Array","<"],["Object",">"]]],"meta":{"line":98,"file":"Player.js","path":"src/structures"}},{"name":"trophies","description":"The player's trophy data","type":[[["PlayerTrophies"]]],"meta":{"line":106,"file":"Player.js","path":"src/structures"}},{"name":"_PlayerTrophies","description":"The player's trophy data","access":"private","type":[[["PlayerTrophies"]]],"meta":{"line":113,"file":"Player.js","path":"src/structures"}},{"name":"meta","description":"The player's meta data","type":[[["PlayerMeta"]]],"meta":{"line":122,"file":"Player.js","path":"src/structures"}},{"name":"_PlayerMeta","description":"The player's meta data","access":"private","type":[[["PlayerMeta"]]],"meta":{"line":129,"file":"Player.js","path":"src/structures"}},{"name":"_PlayerMatchmaking","description":"The player's matchmaking data","access":"private","type":[[["PlayerMatchmaking"]]],"meta":{"line":161,"file":"Player.js","path":"src/structures"}}],"methods":[{"name":"_constructZoneArray","description":"Constructs an array of the zone of the player","access":"private","returns":[[["Array","<"],["Object",">"]]],"meta":{"line":34,"file":"Player.js","path":"src/structures"}},{"name":"cotd","description":"The player's COTD Data","params":[{"name":"page","description":"The page number.","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"returns":[[["Promise","<"],["PlayerCOTD",">"]]],"meta":{"line":139,"file":"Player.js","path":"src/structures"}},{"name":"matchmaking","description":"The player's matchmaking data","params":[{"name":"type","description":"The type of matchmaking data to return","optional":true,"default":"\"3v3\"","type":[[["MatchmakingGroup"]]]}],"returns":[[["PlayerMatchmaking"]]],"meta":{"line":154,"file":"Player.js","path":"src/structures"}}],"meta":{"line":9,"file":"Player.js","path":"src/structures"}},{"name":"PlayerTrophies","description":"Represents the trophies of a player","construct":{"name":"PlayerTrophies","params":[{"name":"player","description":"The player","type":[[["Player"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"player","description":"The player object","type":[[["Player"]]],"meta":{"line":181,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client object","type":[[["Client"]]],"meta":{"line":187,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":194,"file":"Player.js","path":"src/structures"}},{"name":"points","description":"The points of the player","type":[[["number"]]],"meta":{"line":201,"file":"Player.js","path":"src/structures"}},{"name":"lastChange","description":"The last time the player got a trophy","readonly":true,"type":[[["Date"]]],"meta":{"line":210,"file":"Player.js","path":"src/structures"}},{"name":"echelon","description":"The echelon level of the player","type":[[["PlayerEchelon"]]],"meta":{"line":218,"file":"Player.js","path":"src/structures"}},{"name":"_PlayerEchelon","description":"The player's echelon data","access":"private","type":[[["PlayerEchelon"]]],"meta":{"line":225,"file":"Player.js","path":"src/structures"}},{"name":"trophies","description":"The number of trophies the player has","type":[[["Array","<"],["number",">"]]],"meta":{"line":249,"file":"Player.js","path":"src/structures"}}],"methods":[{"name":"trophy","description":"The number of trophies the player has","examples":["// Get number of trophy 5 (aka silver 2 trophy)\nplayer.trophies.trophy(5);"],"params":[{"name":"number","description":"The trophy number, from 1 (bronze 1) to 9 (gold 3)","optional":true,"default":1,"type":[[["number"]]]}],"returns":[[["number"]]],"meta":{"line":238,"file":"Player.js","path":"src/structures"}},{"name":"history","description":"The last 25 trophies gains of the player","params":[{"name":"page","description":"The page number.","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"meta":{"line":258,"file":"Player.js","path":"src/structures"}}],"meta":{"line":171,"file":"Player.js","path":"src/structures"}},{"name":"PlayerTrophyHistory","description":"Represents the history of a player's trophies","construct":{"name":"PlayerTrophyHistory","params":[{"name":"player","description":"The player.","type":[[["Player"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"player","description":"The player object","type":[[["Player"]]],"meta":{"line":286,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client object","type":[[["Client"]]],"meta":{"line":292,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":299,"file":"Player.js","path":"src/structures"}},{"name":"trophies","description":"The number of trophies the player has","type":[[["Array","<"],["number",">"]]],"meta":{"line":321,"file":"Player.js","path":"src/structures"}},{"name":"date","description":"The date of the gain","type":[[["Date"]]],"meta":{"line":329,"file":"Player.js","path":"src/structures"}},{"name":"rank","description":"The rank of the player","type":[[["number"]]],"meta":{"line":337,"file":"Player.js","path":"src/structures"}},{"name":"type","description":"The types of the achievement","type":[[["PlayerTrophyAchievementType"]]],"meta":{"line":345,"file":"Player.js","path":"src/structures"}},{"name":"_achievement","description":"The achievement type object","access":"private","type":[[["PlayerTrophyAchievementType"]]],"meta":{"line":354,"file":"Player.js","path":"src/structures"}}],"methods":[{"name":"trophy","description":"The number of trophies the player has","examples":["// Get number of trophy 5 (aka silver 2 trophy) on the latest gain\nplayer.trophies.history[0].trophy(5);"],"params":[{"name":"number","description":"The trophy number, from 1 (bronze 1) to 9 (gold 3)","optional":true,"default":1,"type":[[["number"]]]}],"returns":[[["number"]]],"meta":{"line":310,"file":"Player.js","path":"src/structures"}},{"name":"map","description":"The map where the achievement was earned (if any)","async":true,"returns":[[["Promise","<"],["TMMap",">"]],[["null"]]],"meta":{"line":363,"file":"Player.js","path":"src/structures"}}],"meta":{"line":276,"file":"Player.js","path":"src/structures"}},{"name":"PlayerTrophyAchievementType","description":"Represents the type of an achievement","construct":{"name":"PlayerTrophyAchievementType","params":[{"name":"player","type":[[["Player"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"player","description":"The player object","type":[[["Player"]]],"meta":{"line":383,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client object","type":[[["Client"]]],"meta":{"line":389,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":396,"file":"Player.js","path":"src/structures"}},{"name":"type","description":"Gets the type of the achievement","type":[[["string"]]],"meta":{"line":403,"file":"Player.js","path":"src/structures"}},{"name":"id","description":"Gets the ID of the achievement","type":[[["string"]]],"meta":{"line":411,"file":"Player.js","path":"src/structures"}},{"name":"soloRankingType","description":"Gets the solo ranking achievement type (if the type is SoloRanking)","nullable":true,"type":[[["string"]]],"meta":{"line":419,"file":"Player.js","path":"src/structures"}},{"name":"soloRankingSeasonId","description":"Gets the solo ranking season ID (if the type is SoloRanking)","nullable":true,"type":[[["string"]]],"meta":{"line":428,"file":"Player.js","path":"src/structures"}},{"name":"competitionId","description":"Gets the competition id (if the type is CompetitionRanking)","nullable":true,"type":[[["string"]]],"meta":{"line":437,"file":"Player.js","path":"src/structures"}},{"name":"competitionName","description":"Gets the competition name (if the type is CompetitionRanking)","nullable":true,"type":[[["string"]]],"meta":{"line":446,"file":"Player.js","path":"src/structures"}},{"name":"competitionStage","description":"Gets the competition stage (if the type is CompetitionRanking)","nullable":true,"type":[[["string"]]],"meta":{"line":455,"file":"Player.js","path":"src/structures"}},{"name":"competitionStageStep","description":"Gets the competition stage step (if the type is CompetitionRanking)","nullable":true,"type":[[["string"]]],"meta":{"line":464,"file":"Player.js","path":"src/structures"}},{"name":"competitionType","description":"Gets the competition type (if the type is CompetitionRanking)","nullable":true,"type":[[["string"]]],"meta":{"line":473,"file":"Player.js","path":"src/structures"}},{"name":"soloMedalType","description":"Gets the Solo Medal type (if the type is SoloMedal)","nullable":true,"type":[[["string"]]],"meta":{"line":482,"file":"Player.js","path":"src/structures"}},{"name":"soloMedalLevel","description":"Gets the solo medal level (if the type is SoloMedal)","nullable":true,"type":[[["number"]]],"meta":{"line":491,"file":"Player.js","path":"src/structures"}},{"name":"liveMatchServerId","description":"Gets the server ID of the Live Match (if the type is LiveMatch)","nullable":true,"type":[[["string"]]],"meta":{"line":500,"file":"Player.js","path":"src/structures"}},{"name":"liveMatchGameMode","description":"Gets the game mode of the Live Match (if the type is LiveMatch)","nullable":true,"type":[[["string"]]],"meta":{"line":509,"file":"Player.js","path":"src/structures"}},{"name":"liveMatchDuration","description":"Gets the duration of the Live Match in seconds (if the type is LiveMatch)","nullable":true,"type":[[["number"]]],"meta":{"line":518,"file":"Player.js","path":"src/structures"}},{"name":"liveMatchRank","description":"Gets the rank of the Live Match (if the type is LiveMatch)","nullable":true,"type":[[["number"]]],"meta":{"line":527,"file":"Player.js","path":"src/structures"}},{"name":"liveMatchTrophyRank","description":"Gets the trophy rank of the Live Match (if the type is LiveMatch)","nullable":true,"type":[[["number"]]],"meta":{"line":536,"file":"Player.js","path":"src/structures"}}],"meta":{"line":373,"file":"Player.js","path":"src/structures"}},{"name":"PlayerEchelon","description":"Represents a player's echelon","construct":{"name":"PlayerEchelon","params":[{"name":"player","description":"The player.","type":[[["Player"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"player","description":"The player object","type":[[["Player"]]],"meta":{"line":555,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client object of the player","type":[[["Client"]]],"meta":{"line":561,"file":"Player.js","path":"src/structures"}},{"name":"number","description":"The echelon number","type":[[["number"]]],"meta":{"line":567,"file":"Player.js","path":"src/structures"}},{"name":"name","description":"The name of the echelon","type":[[["string"]]],"meta":{"line":574,"file":"Player.js","path":"src/structures"}},{"name":"image","description":"The image URL of the echelon","type":[[["string"]]],"meta":{"line":582,"file":"Player.js","path":"src/structures"}}],"meta":{"line":545,"file":"Player.js","path":"src/structures"}},{"name":"PlayerMeta","description":"Represents a player's metadata","construct":{"name":"PlayerMeta","params":[{"name":"player","description":"The player.","type":[[["Player"]]]}]},"props":[{"name":"player","description":"The player object","type":[[["Player"]]],"meta":{"line":599,"file":"Player.js","path":"src/structures"}},{"name":"vanity","description":"The vanity name of the player, if the player has one, otherwise null","type":[[["string"]]],"meta":{"line":606,"file":"Player.js","path":"src/structures"}},{"name":"youtube","description":"The youtube link of the player, if the player has one, otherwise null","type":[[["string"]]],"meta":{"line":615,"file":"Player.js","path":"src/structures"}},{"name":"twitter","description":"The twitter link of the player, if the player has one, otherwise null","type":[[["string"]]],"meta":{"line":624,"file":"Player.js","path":"src/structures"}},{"name":"twitch","description":"The twitch channel link of the player, if the player has one, otherwise null","type":[[["string"]]],"meta":{"line":633,"file":"Player.js","path":"src/structures"}},{"name":"displayURL","description":"The display URL of the player","type":[[["string"]]],"meta":{"line":642,"file":"Player.js","path":"src/structures"}},{"name":"inTMGL","description":"Whether the player is in the TMGL group","type":[[["boolean"]]],"meta":{"line":656,"file":"Player.js","path":"src/structures"}},{"name":"inTMWC21","description":"Whether the player is in the TMWC21 group","type":[[["boolean"]]],"meta":{"line":664,"file":"Player.js","path":"src/structures"}},{"name":"inNadeo","description":"Whether the player is in the Nadeo company","type":[[["boolean"]]],"meta":{"line":672,"file":"Player.js","path":"src/structures"}},{"name":"inTMIOTeam","description":"Whether the player is in the Openplanet & Trackmania.io team","type":[[["boolean"]]],"meta":{"line":680,"file":"Player.js","path":"src/structures"}},{"name":"isSponsor","description":"Whether the player is a Openplanet & Trackmania.io sponsor","type":[[["boolean"]]],"meta":{"line":688,"file":"Player.js","path":"src/structures"}},{"name":"sponsorLevel","description":"If the player is a sponsor, this returns the sponsor's level","nullable":true,"type":[[["number"]]],"meta":{"line":696,"file":"Player.js","path":"src/structures"}}],"meta":{"line":590,"file":"Player.js","path":"src/structures"}},{"name":"PlayerMatchmaking","description":"Represents a player's stats in matchmaking","construct":{"name":"PlayerMatchmaking","params":[{"name":"player","description":"The player.","type":[[["Player"]]]},{"name":"type","description":"The type of matchmaking.","type":[[["MatchmakingGroup"]]]}]},"props":[{"name":"player","description":"The player object","type":[[["Player"]]],"meta":{"line":715,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client object","type":[[["Client"]]],"meta":{"line":721,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The raw data of the player's matchmaking data based on the type","access":"private","type":[[["Object"]]],"meta":{"line":728,"file":"Player.js","path":"src/structures"}},{"name":"type","description":"The type name of the matchmaking","type":[[["string"]]],"meta":{"line":740,"file":"Player.js","path":"src/structures"}},{"name":"typeId","description":"The type ID of the matchmaking","type":[[["number"]]],"meta":{"line":748,"file":"Player.js","path":"src/structures"}},{"name":"rank","description":"The rank of the player on this matchmaking","type":[[["number"]]],"meta":{"line":756,"file":"Player.js","path":"src/structures"}},{"name":"score","description":"The MMR rank of the player on this matchmaking (score)","type":[[["number"]]],"meta":{"line":764,"file":"Player.js","path":"src/structures"}},{"name":"progression","description":"The progression of the player on this matchmaking (can be number of wins for Royal, or score for 3v3)","type":[[["number"]]],"meta":{"line":772,"file":"Player.js","path":"src/structures"}},{"name":"division","description":"The division of the player on this matchmaking","type":[[["MatchmakingDivision"]]],"meta":{"line":780,"file":"Player.js","path":"src/structures"}},{"name":"_MatchmakingDivision","description":"The division of the player on this matchmaking","access":"private","type":[[["MatchmakingDivision"]]],"meta":{"line":788,"file":"Player.js","path":"src/structures"}}],"methods":[{"name":"history","description":"The history of recent matches on this matchmaking","params":[{"name":"page","description":"The page number to get","optional":true,"default":0,"type":[[["number"]]]}],"async":true,"meta":{"line":798,"file":"Player.js","path":"src/structures"}}],"meta":{"line":705,"file":"Player.js","path":"src/structures"}},{"name":"PlayerMatchmakingMatchResult","description":"Represents a player's matchmaking match result","construct":{"name":"PlayerMatchmakingMatchResult","params":[{"name":"player","description":"The player.","type":[[["Player"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"player","description":"The player object","type":[[["Player"]]],"meta":{"line":826,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client object","type":[[["Client"]]],"meta":{"line":832,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":839,"file":"Player.js","path":"src/structures"}},{"name":"win","description":"The player has win the match","type":[[["boolean"]]],"meta":{"line":846,"file":"Player.js","path":"src/structures"}},{"name":"leave","description":"The player has leaved the match","type":[[["boolean"]]],"meta":{"line":854,"file":"Player.js","path":"src/structures"}},{"name":"mvp","description":"The player is the most valuable player in the match","type":[[["boolean"]]],"meta":{"line":862,"file":"Player.js","path":"src/structures"}},{"name":"liveId","description":"The match LiveID","type":[[["string"]]],"meta":{"line":870,"file":"Player.js","path":"src/structures"}},{"name":"startDate","description":"The start date of the match","type":[[["Date"]]],"meta":{"line":878,"file":"Player.js","path":"src/structures"}},{"name":"afterScore","description":"The score of the player after this match","type":[[["number"]]],"meta":{"line":886,"file":"Player.js","path":"src/structures"}}],"meta":{"line":816,"file":"Player.js","path":"src/structures"}},{"name":"PlayerCOTD","description":"Represents a player's COTD object","construct":{"name":"PlayerCOTD","params":[{"name":"player","description":"The player.","type":[[["Player"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"player","description":"The Player object","type":[[["Player"]]],"meta":{"line":904,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client object","type":[[["Client"]]],"meta":{"line":910,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":917,"file":"Player.js","path":"src/structures"}},{"name":"count","description":"The number of COTDs played","type":[[["number"]]],"meta":{"line":924,"file":"Player.js","path":"src/structures"}},{"name":"stats","description":"The Player COTD stats","type":[[["PlayerCOTDStats"]]],"meta":{"line":932,"file":"Player.js","path":"src/structures"}},{"name":"_stats","description":"The Player COTD stats","access":"private","type":[[["PlayerCOTDStats"]]],"meta":{"line":939,"file":"Player.js","path":"src/structures"}},{"name":"recentResults","description":"Get the 25 recents COTD results","type":[[["Array","<"],["PlayerCOTDResult",">"]]],"meta":{"line":948,"file":"Player.js","path":"src/structures"}}],"meta":{"line":894,"file":"Player.js","path":"src/structures"}},{"name":"PlayerCOTDResult","description":"Represents a player's COTD result","construct":{"name":"PlayerCOTDResult","params":[{"name":"player","description":"The player","type":[[["Player"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"player","description":"The Player object","type":[[["Player"]]],"meta":{"line":970,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client object","type":[[["Client"]]],"meta":{"line":976,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":983,"file":"Player.js","path":"src/structures"}},{"name":"id","description":"The ID of the COTD","type":[[["number"]]],"meta":{"line":990,"file":"Player.js","path":"src/structures"}},{"name":"date","description":"The date of the COTD","readonly":true,"type":[[["Date"]]],"meta":{"line":999,"file":"Player.js","path":"src/structures"}},{"name":"name","description":"The name of the COTD","type":[[["string"]]],"meta":{"line":1007,"file":"Player.js","path":"src/structures"}},{"name":"division","description":"The division of the COTD","type":[[["number"]]],"meta":{"line":1015,"file":"Player.js","path":"src/structures"}},{"name":"rank","description":"The overall rank on the COTD","type":[[["number"]]],"meta":{"line":1023,"file":"Player.js","path":"src/structures"}},{"name":"divisionRank","description":"The division rank on the COTD","type":[[["number"]]],"meta":{"line":1031,"file":"Player.js","path":"src/structures"}},{"name":"score","description":"The score of the COTD","type":[[["number"]]],"meta":{"line":1039,"file":"Player.js","path":"src/structures"}},{"name":"totalPlayers","description":"The total number of players of the COTD","type":[[["number"]]],"meta":{"line":1047,"file":"Player.js","path":"src/structures"}}],"meta":{"line":960,"file":"Player.js","path":"src/structures"}},{"name":"PlayerCOTDStats","description":"Represents a player's COTD stats","construct":{"name":"PlayerCOTDStats","params":[{"name":"player","description":"The player.","type":[[["Player"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"player","description":"The player object","type":[[["Player"]]],"meta":{"line":1066,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client object","type":[[["Client"]]],"meta":{"line":1072,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":1079,"file":"Player.js","path":"src/structures"}},{"name":"bestPrimary","description":"The best stats in the primary COTD","type":[[["PlayerCOTDStatsBest"]]],"meta":{"line":1086,"file":"Player.js","path":"src/structures"}},{"name":"_bestprimary","description":"The best stats in the primary COTD","access":"private","type":[[["PlayerCOTDStatsBest"]]],"meta":{"line":1093,"file":"Player.js","path":"src/structures"}},{"name":"bestOverall","description":"The best stats in all COTDs (including reruns)","type":[[["PlayerCOTDStatsBest"]]],"meta":{"line":1102,"file":"Player.js","path":"src/structures"}},{"name":"_bestoverall","description":"The best stats in all COTDs (including reruns)","access":"private","type":[[["PlayerCOTDStatsBest"]]],"meta":{"line":1109,"file":"Player.js","path":"src/structures"}},{"name":"totalWins","description":"The total COTD wins in division 1","type":[[["number"]]],"meta":{"line":1118,"file":"Player.js","path":"src/structures"}},{"name":"totalDivWins","description":"The total COTD wins in any divison","type":[[["number"]]],"meta":{"line":1126,"file":"Player.js","path":"src/structures"}},{"name":"averageRank","description":"Average rank, float between 0 and 1","type":[[["number"]]],"meta":{"line":1134,"file":"Player.js","path":"src/structures"}},{"name":"averageDivRank","description":"Average div rank (in any division), float between 0 and 1","type":[[["number"]]],"meta":{"line":1142,"file":"Player.js","path":"src/structures"}},{"name":"averageDiv","description":"Average division","type":[[["number"]]],"meta":{"line":1150,"file":"Player.js","path":"src/structures"}},{"name":"winStreak","description":"The win streak in division 1","type":[[["number"]]],"meta":{"line":1158,"file":"Player.js","path":"src/structures"}},{"name":"divWinStreak","description":"The win streak in any division","type":[[["number"]]],"meta":{"line":1166,"file":"Player.js","path":"src/structures"}}],"meta":{"line":1055,"file":"Player.js","path":"src/structures"}},{"name":"PlayerCOTDStatsBest","description":"Represents a player's COTD stats best stats","construct":{"name":"PlayerCOTDStatsBest","params":[{"name":"PlayerCOTDStats","description":"The player's COTD stats","type":[[["PlayerCOTDStats"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"stats","description":"The PlayerCOTDStats object","type":[[["PlayerCOTDStats"]]],"meta":{"line":1185,"file":"Player.js","path":"src/structures"}},{"name":"player","description":"The player object","type":[[["Player"]]],"meta":{"line":1191,"file":"Player.js","path":"src/structures"}},{"name":"client","description":"The client object","type":[[["Client"]]],"meta":{"line":1197,"file":"Player.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":1204,"file":"Player.js","path":"src/structures"}},{"name":"rank","description":"The best rank","type":[[["number"]]],"meta":{"line":1211,"file":"Player.js","path":"src/structures"}},{"name":"rankDate","description":"The best rank date","readonly":true,"type":[[["Date"]]],"meta":{"line":1220,"file":"Player.js","path":"src/structures"}},{"name":"divRank","description":"The best div rank","type":[[["number"]]],"meta":{"line":1228,"file":"Player.js","path":"src/structures"}},{"name":"division","description":"The best division","type":[[["number"]]],"meta":{"line":1236,"file":"Player.js","path":"src/structures"}},{"name":"divisionDate","description":"The best divison date","readonly":true,"type":[[["Date"]]],"meta":{"line":1245,"file":"Player.js","path":"src/structures"}},{"name":"rankInDivision","description":"The best rank in a division","type":[[["number"]]],"meta":{"line":1253,"file":"Player.js","path":"src/structures"}},{"name":"rankInDivisionDate","description":"The best rank in a division date","readonly":true,"type":[[["Date"]]],"meta":{"line":1262,"file":"Player.js","path":"src/structures"}},{"name":"divisionOfRankInDivision","description":"The division who got the best rank in a division","type":[[["number"]]],"meta":{"line":1270,"file":"Player.js","path":"src/structures"}}],"meta":{"line":1174,"file":"Player.js","path":"src/structures"}},{"name":"Room","description":"Represents a room.","construct":{"name":"Room","params":[{"name":"client","description":"The client.","type":[[["Client"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"client","description":"The client that instantiated this room","type":[[["Client"]]],"meta":{"line":18,"file":"Room.js","path":"src/structures"}},{"name":"_data","description":"The data of the room","access":"private","type":[[["Object"]]],"meta":{"line":25,"file":"Room.js","path":"src/structures"}},{"name":"id","description":"The ID of the room","type":[[["number"]]],"meta":{"line":32,"file":"Room.js","path":"src/structures"}},{"name":"name","description":"The name of the room","type":[[["string"]]],"meta":{"line":48,"file":"Room.js","path":"src/structures"}},{"name":"isCloud","description":"Whether this room is hosted on the cloud (Nadeo)","type":[[["boolean"]]],"meta":{"line":56,"file":"Room.js","path":"src/structures"}},{"name":"login","description":"The login of the room (if it's not a cloud room)","nullable":true,"type":[[["string"]]],"meta":{"line":64,"file":"Room.js","path":"src/structures"}},{"name":"playerCount","description":"The number of players in the room","type":[[["number"]]],"meta":{"line":73,"file":"Room.js","path":"src/structures"}},{"name":"maxPlayersCount","description":"The maximum number of players in the room","type":[[["number"]]],"meta":{"line":81,"file":"Room.js","path":"src/structures"}},{"name":"region","description":"The region of the room (if it's on a cloud room)","type":[[["string"]]],"meta":{"line":89,"file":"Room.js","path":"src/structures"}},{"name":"script","description":"The script name that currently runs in the room","type":[[["string"]]],"meta":{"line":98,"file":"Room.js","path":"src/structures"}},{"name":"scriptSettings","description":"The script settings on the room","type":[[["Array","<"],["Object","<"],["string",", ("],["string","|"],["number","|"],["boolean",")>>"]]],"meta":{"line":110,"file":"Room.js","path":"src/structures"}},{"name":"imageUrl","description":"The image URL of the room","type":[[["string"]]],"meta":{"line":136,"file":"Room.js","path":"src/structures"}}],"methods":[{"name":"club","description":"The club that this room belongs to","async":true,"returns":[[["Promise","<"],["Club",">"]]],"meta":{"line":40,"file":"Room.js","path":"src/structures"}},{"name":"maps","description":"The maps on the room","examples":["Client.rooms.get(228, 82160).then(async room => {\n  const maps = await room.maps();\n  maps.forEach(map => console.log(map.name));\n});"],"async":true,"returns":[[["Promise","<"],["Array","<"],["TMMap",">>"]]],"meta":{"line":149,"file":"Room.js","path":"src/structures"}}],"meta":{"line":8,"file":"Room.js","path":"src/structures"}},{"name":"TMEvent","description":"Represents a Event in Trackmania.","construct":{"name":"TMEvent","params":[{"name":"client","description":"The client","type":[[["Client"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":19,"file":"TMEvent.js","path":"src/structures"}},{"name":"_data","description":"The event's data.","access":"private","type":[[["Object"]]],"meta":{"line":26,"file":"TMEvent.js","path":"src/structures"}},{"name":"id","description":"The event's ID.","type":[[["number"]]],"meta":{"line":33,"file":"TMEvent.js","path":"src/structures"}},{"name":"size","description":"The number of players in the event.","type":[[["number"]]],"meta":{"line":41,"file":"TMEvent.js","path":"src/structures"}},{"name":"liveId","description":"The event's Live ID.","type":[[["string"]]],"meta":{"line":49,"file":"TMEvent.js","path":"src/structures"}},{"name":"name","description":"The event's name.","type":[[["string"]]],"meta":{"line":65,"file":"TMEvent.js","path":"src/structures"}},{"name":"description","description":"The event's description.","type":[[["string"]]],"meta":{"line":73,"file":"TMEvent.js","path":"src/structures"}},{"name":"registrationStart","description":"The event's registration start date.","type":[[["Date"]]],"meta":{"line":81,"file":"TMEvent.js","path":"src/structures"}},{"name":"registrationEnd","description":"The event's registration end date.","type":[[["Date"]]],"meta":{"line":89,"file":"TMEvent.js","path":"src/structures"}},{"name":"start","description":"The event's start date.","type":[[["Date"]]],"meta":{"line":97,"file":"TMEvent.js","path":"src/structures"}},{"name":"end","description":"The event's end date.","type":[[["Date"]]],"meta":{"line":105,"file":"TMEvent.js","path":"src/structures"}},{"name":"leaderboardId","description":"The event's leaderboard id.","type":[[["number"]]],"meta":{"line":113,"file":"TMEvent.js","path":"src/structures"}},{"name":"manialink","description":"The event's manialink (if any).","nullable":true,"type":[[["string"]]],"meta":{"line":121,"file":"TMEvent.js","path":"src/structures"}},{"name":"rulesUrl","description":"The event's rules URL (if any).","nullable":true,"type":[[["string"]]],"meta":{"line":130,"file":"TMEvent.js","path":"src/structures"}},{"name":"stream","description":"The event's stream URL (if any).","nullable":true,"type":[[["string"]]],"meta":{"line":139,"file":"TMEvent.js","path":"src/structures"}},{"name":"website","description":"The event's website (if any).","nullable":true,"type":[[["string"]]],"meta":{"line":148,"file":"TMEvent.js","path":"src/structures"}},{"name":"logo","description":"The event's logo URL.","type":[[["string"]]],"meta":{"line":157,"file":"TMEvent.js","path":"src/structures"}},{"name":"vertical","description":"The event's vertical banner URL.","type":[[["string"]]],"meta":{"line":165,"file":"TMEvent.js","path":"src/structures"}},{"name":"rounds","description":"The event's rounds.","type":[[["Array","<"],["TMEventRound",">"]]],"meta":{"line":173,"file":"TMEvent.js","path":"src/structures"}}],"methods":[{"name":"creator","description":"The creator of the event.","async":true,"returns":[[["Promise","<"],["Player",">"]]],"meta":{"line":57,"file":"TMEvent.js","path":"src/structures"}}],"meta":{"line":10,"file":"TMEvent.js","path":"src/structures"}},{"name":"TMEventRound","description":"Represents a round in a TMEvent.","construct":{"name":"TMEventRound","params":[{"name":"event","description":"The Event","type":[[["TMEvent"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"event","description":"The event instance","type":[[["TMEvent"]]],"meta":{"line":195,"file":"TMEvent.js","path":"src/structures"}},{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":201,"file":"TMEvent.js","path":"src/structures"}},{"name":"_data","description":"The round's data.","access":"private","type":[[["Object"]]],"meta":{"line":208,"file":"TMEvent.js","path":"src/structures"}},{"name":"_challengesCache","description":"The challenge's CacheManager instance","access":"private","type":[[["CacheManager"]]],"meta":{"line":215,"file":"TMEvent.js","path":"src/structures"}},{"name":"id","description":"The round's ID.","type":[[["number"]]],"meta":{"line":222,"file":"TMEvent.js","path":"src/structures"}},{"name":"name","description":"The round's name.","type":[[["string"]]],"meta":{"line":230,"file":"TMEvent.js","path":"src/structures"}},{"name":"status","description":"The round's status.","type":[[["string"]]],"meta":{"line":238,"file":"TMEvent.js","path":"src/structures"}},{"name":"matches","description":"The round's matches.","type":[[["Array","<"],["TMEventRoundMatch",">"]]],"meta":{"line":246,"file":"TMEvent.js","path":"src/structures"}}],"methods":[{"name":"challenges","description":"The round's challenges.","params":[{"name":"cache","description":"Wether to get the challenges from the cache or not.","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["TMEventChallenge",">>"]]],"meta":{"line":259,"file":"TMEvent.js","path":"src/structures"}},{"name":"_fetchChallenge","description":"Fetches the round's challenges.","access":"private","params":[{"name":"index","description":"The index of the challenge to fetch.","type":[[["number"]]]},{"name":"cache","description":"Wether to cache the challenges or not.","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["TMEventChallenge",">>"]]],"meta":{"line":278,"file":"TMEvent.js","path":"src/structures"}}],"meta":{"line":185,"file":"TMEvent.js","path":"src/structures"}},{"name":"TMEventRoundMatch","description":"Represents a match in a TMEventRound.","construct":{"name":"TMEventRoundMatch","params":[{"name":"round","description":"The Round","type":[[["TMEventRound"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"round","description":"The round instance","type":[[["TMEventRound"]]],"meta":{"line":307,"file":"TMEvent.js","path":"src/structures"}},{"name":"event","description":"The event instance","type":[[["TMEvent"]]],"meta":{"line":313,"file":"TMEvent.js","path":"src/structures"}},{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":319,"file":"TMEvent.js","path":"src/structures"}},{"name":"_data","description":"The match's data.","access":"private","type":[[["Object"]]],"meta":{"line":326,"file":"TMEvent.js","path":"src/structures"}},{"name":"_resultsCache","description":"The match's results CacheManager instance","access":"private","type":[[["CacheManager"]]],"meta":{"line":333,"file":"TMEvent.js","path":"src/structures"}},{"name":"id","description":"The match's ID.","type":[[["number"]]],"meta":{"line":340,"file":"TMEvent.js","path":"src/structures"}},{"name":"name","description":"The match's name.","type":[[["string"]]],"meta":{"line":348,"file":"TMEvent.js","path":"src/structures"}},{"name":"isCompleted","description":"Whether the match is completed.","type":[[["boolean"]]],"meta":{"line":356,"file":"TMEvent.js","path":"src/structures"}}],"methods":[{"name":"getResults","description":"The match's results.","params":[{"name":"page","description":"The page number.","optional":true,"default":0,"type":[[["number"]]]},{"name":"cache","description":"Whether to cache the results.","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["TMEventRoundMatchResult",">>"]]],"meta":{"line":366,"file":"TMEvent.js","path":"src/structures"}},{"name":"_fetchResults","description":"Fetches the match's results.","access":"private","params":[{"name":"page","description":"The page number.","optional":true,"default":0,"type":[[["number"]]]},{"name":"cache","description":"Whether to cache the results.","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["TMEventRoundMatchResult",">>"]]],"meta":{"line":381,"file":"TMEvent.js","path":"src/structures"}}],"meta":{"line":297,"file":"TMEvent.js","path":"src/structures"}},{"name":"TMEventRoundMatchResult","description":"Represents a result in a TMEventRoundMatch.","construct":{"name":"TMEventRoundMatchResult","params":[{"name":"match","description":"The match","type":[[["TMEventRoundMatch"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"match","description":"The match instance","type":[[["TMEventRoundMatch"]]],"meta":{"line":413,"file":"TMEvent.js","path":"src/structures"}},{"name":"event","description":"The event instance","type":[[["TMEvent"]]],"meta":{"line":419,"file":"TMEvent.js","path":"src/structures"}},{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":425,"file":"TMEvent.js","path":"src/structures"}},{"name":"_data","description":"The result's data.","access":"private","type":[[["Object"]]],"meta":{"line":432,"file":"TMEvent.js","path":"src/structures"}},{"name":"position","description":"The position of the player.","type":[[["number"]]],"meta":{"line":447,"file":"TMEvent.js","path":"src/structures"}},{"name":"score","description":"The score of the player.","type":[[["number"]]],"meta":{"line":455,"file":"TMEvent.js","path":"src/structures"}}],"methods":[{"name":"player","description":"The player that got the result.","async":true,"returns":[[["Promise","<"],["Player",">"]]],"meta":{"line":439,"file":"TMEvent.js","path":"src/structures"}}],"meta":{"line":403,"file":"TMEvent.js","path":"src/structures"}},{"name":"TMEventChallenge","description":"Represents a challenge in a TMEventRound.","construct":{"name":"TMEventChallenge","params":[{"name":"round","description":"The round","type":[[["TMEventRound"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"round","description":"The round instance","type":[[["TMEventRound"]]],"meta":{"line":473,"file":"TMEvent.js","path":"src/structures"}},{"name":"event","description":"The event instance","type":[[["TMEvent"]]],"meta":{"line":479,"file":"TMEvent.js","path":"src/structures"}},{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":485,"file":"TMEvent.js","path":"src/structures"}},{"name":"_data","description":"The challenge's data.","access":"private","type":[[["Object"]]],"meta":{"line":492,"file":"TMEvent.js","path":"src/structures"}},{"name":"_resultsCache","description":"The challenge's results CacheManager instance","access":"private","type":[[["CacheManager"]]],"meta":{"line":499,"file":"TMEvent.js","path":"src/structures"}},{"name":"id","description":"The challenge's ID.","type":[[["number"]]],"meta":{"line":506,"file":"TMEvent.js","path":"src/structures"}},{"name":"name","description":"The challenge's name.","type":[[["string"]]],"meta":{"line":514,"file":"TMEvent.js","path":"src/structures"}},{"name":"status","description":"The challenge's status.","type":[[["string"]]],"meta":{"line":522,"file":"TMEvent.js","path":"src/structures"}},{"name":"rooms","description":"The challenge's rooms number.","type":[[["number"]]],"meta":{"line":530,"file":"TMEvent.js","path":"src/structures"}}],"methods":[{"name":"getMaps","description":"The challenge's maps.","async":true,"returns":[[["Promise","<"],["Array","<"],["TMMap",">>"]]],"meta":{"line":538,"file":"TMEvent.js","path":"src/structures"}},{"name":"getAdmins","description":"The challenge's admins.","async":true,"returns":[[["Promise","<"],["Array","<"],["Player",">>"]]],"meta":{"line":551,"file":"TMEvent.js","path":"src/structures"}},{"name":"getResults","description":"The challenge's results.","params":[{"name":"page","description":"The page number.","optional":true,"default":0,"type":[[["number"]]]},{"name":"cache","description":"Whether to get the results from cache.","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["TMEventChallengeResult",">>"]]],"meta":{"line":566,"file":"TMEvent.js","path":"src/structures"}},{"name":"_fetchResults","description":"Fetches the match's results.","access":"private","params":[{"name":"page","description":"The page number.","optional":true,"default":0,"type":[[["number"]]]},{"name":"cache","description":"Whether to cache the results.","optional":true,"default":"this.client.options.cache.enabled","type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["TMEventChallengeResult",">>"]]],"meta":{"line":581,"file":"TMEvent.js","path":"src/structures"}}],"meta":{"line":463,"file":"TMEvent.js","path":"src/structures"}},{"name":"TMEventChallengeResult","description":"Represents a result in a TMEventChallenge.","construct":{"name":"TMEventChallengeResult","params":[{"name":"challenge","description":"The challenge","type":[[["TMEventChallenge"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"challenge","description":"The challenge instance","type":[[["TMEventChallenge"]]],"meta":{"line":613,"file":"TMEvent.js","path":"src/structures"}},{"name":"event","description":"The event instance","type":[[["TMEvent"]]],"meta":{"line":619,"file":"TMEvent.js","path":"src/structures"}},{"name":"client","description":"The client instance","type":[[["Client"]]],"meta":{"line":625,"file":"TMEvent.js","path":"src/structures"}},{"name":"_data","description":"The result's data.","access":"private","type":[[["Object"]]],"meta":{"line":632,"file":"TMEvent.js","path":"src/structures"}},{"name":"position","description":"The position of the player.","type":[[["number"]]],"meta":{"line":647,"file":"TMEvent.js","path":"src/structures"}},{"name":"score","description":"The score of the player.","type":[[["number"]]],"meta":{"line":655,"file":"TMEvent.js","path":"src/structures"}}],"methods":[{"name":"player","description":"The player.","async":true,"returns":[[["Promise","<"],["Player",">"]]],"meta":{"line":639,"file":"TMEvent.js","path":"src/structures"}}],"meta":{"line":603,"file":"TMEvent.js","path":"src/structures"}},{"name":"TMMap","construct":{"name":"TMMap","description":"Represents a map on Trackmania."},"props":[{"name":"client","description":"The client instance.","type":[[["Client"]]],"meta":{"line":15,"file":"TMMap.js","path":"src/structures"}},{"name":"_data","description":"The map data.","access":"private","type":[[["Object"]]],"meta":{"line":22,"file":"TMMap.js","path":"src/structures"}},{"name":"medalTimes","description":"The map medal times.","type":[[["TMMapMedalTimes"]]],"meta":{"line":28,"file":"TMMap.js","path":"src/structures"}},{"name":"name","description":"The map name.","type":[[["string"]]],"meta":{"line":44,"file":"TMMap.js","path":"src/structures"}},{"name":"id","description":"The map id.","type":[[["string"]]],"meta":{"line":52,"file":"TMMap.js","path":"src/structures"}},{"name":"uid","description":"The map uid.","type":[[["string"]]],"meta":{"line":60,"file":"TMMap.js","path":"src/structures"}},{"name":"environment","description":"The environment for this map.","type":[[["string"]]],"meta":{"line":89,"file":"TMMap.js","path":"src/structures"}},{"name":"fileName","description":"The map file name.","type":[[["string"]]],"meta":{"line":97,"file":"TMMap.js","path":"src/structures"}},{"name":"uploaded","description":"The map uploaded date.","type":[[["Date"]]],"meta":{"line":105,"file":"TMMap.js","path":"src/structures"}},{"name":"url","description":"The map URL.","type":[[["string"]]],"meta":{"line":113,"file":"TMMap.js","path":"src/structures"}},{"name":"thumbnail","description":"The map thumbnail.","type":[[["string"]]],"meta":{"line":121,"file":"TMMap.js","path":"src/structures"}},{"name":"exchangeId","description":"The map exchange id, if the map is on trackmania.exchange, else null.","nullable":true,"type":[[["string"]]],"meta":{"line":129,"file":"TMMap.js","path":"src/structures"}},{"name":"exchange","description":"The map informations on trackmania.exchange.","nullable":true,"type":[[["TMExchangeMap"]]],"meta":{"line":138,"file":"TMMap.js","path":"src/structures"}},{"name":"_TMExchange","access":"private","type":[[["TMExchangeMap"]]],"meta":{"line":147,"file":"TMMap.js","path":"src/structures"}},{"name":"karma","description":"The map karma.","nullable":true,"type":[[["TMMapKarma"]]],"meta":{"line":158,"file":"TMMap.js","path":"src/structures"}},{"name":"_TMMapKarma","access":"private","type":[[["TMMapKarma"]]],"meta":{"line":165,"file":"TMMap.js","path":"src/structures"}},{"name":"leaderboard","description":"The map leaderboard.","nullable":true,"type":[[["Array","<"],["TMMapLeaderboard",">"]]],"meta":{"line":175,"file":"TMMap.js","path":"src/structures"}}],"methods":[{"name":"author","description":"The map author.","examples":["Client.maps.get('z28QXoFnpODEGgg8MOederEVl3j').then(async map => {\n    const author = await map.author();\n    console.log(`The map author is ${author.name}`);\n});"],"async":true,"returns":[[["Promise","<"],["Player",">"]]],"meta":{"line":73,"file":"TMMap.js","path":"src/structures"}},{"name":"submitter","description":"The map submitter.","async":true,"returns":[[["Promise","<"],["Player",">"]]],"meta":{"line":81,"file":"TMMap.js","path":"src/structures"}},{"name":"leaderboardLoadMore","description":"Load more in the leaderboard","async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["TMMapLeaderboard",">>"]]],"nullable":true},"meta":{"line":189,"file":"TMMap.js","path":"src/structures"}}],"meta":{"line":9,"file":"TMMap.js","path":"src/structures"}},{"name":"TMMapMedalTimes","description":"Represents the medals times on a map.","construct":{"name":"TMMapMedalTimes","params":[{"name":"map","description":"The map.","type":[[["TMMap"]]]}]},"props":[{"name":"map","description":"The map object.","type":[[["TMMap"]]],"meta":{"line":221,"file":"TMMap.js","path":"src/structures"}},{"name":"author","description":"The map author time.","type":[[["number"]]],"meta":{"line":227,"file":"TMMap.js","path":"src/structures"}},{"name":"gold","description":"The map gold time.","type":[[["number"]]],"meta":{"line":233,"file":"TMMap.js","path":"src/structures"}},{"name":"silver","description":"The map silver time.","type":[[["number"]]],"meta":{"line":239,"file":"TMMap.js","path":"src/structures"}},{"name":"bronze","description":"The map bronze time.","type":[[["number"]]],"meta":{"line":245,"file":"TMMap.js","path":"src/structures"}}],"meta":{"line":212,"file":"TMMap.js","path":"src/structures"}},{"name":"TMExchangeMap","description":"Represents the map details from Trackmania.exchange.","construct":{"name":"TMExchangeMap","params":[{"name":"map","description":"The map","type":[[["TMMap"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"map","description":"The map instance.","type":[[["TMMap"]]],"meta":{"line":262,"file":"TMMap.js","path":"src/structures"}},{"name":"client","description":"The client instance.","type":[[["Client"]]],"meta":{"line":268,"file":"TMMap.js","path":"src/structures"}},{"name":"_data","description":"The map data.","access":"private","type":[[["Object"]]],"meta":{"line":275,"file":"TMMap.js","path":"src/structures"}},{"name":"id","description":"The map exchange id.","type":[[["number"]]],"meta":{"line":282,"file":"TMMap.js","path":"src/structures"}},{"name":"name","description":"The map name.","type":[[["string"]]],"meta":{"line":290,"file":"TMMap.js","path":"src/structures"}},{"name":"author","description":"The map author.","type":[[["string"]]],"meta":{"line":298,"file":"TMMap.js","path":"src/structures"}},{"name":"description","description":"The map description.","type":[[["string"]]],"meta":{"line":306,"file":"TMMap.js","path":"src/structures"}},{"name":"length","description":"The map length.","type":[[["string"]]],"meta":{"line":314,"file":"TMMap.js","path":"src/structures"}},{"name":"difficulty","description":"The map difficulty.","type":[[["string"]]],"meta":{"line":322,"file":"TMMap.js","path":"src/structures"}},{"name":"uploaded","description":"The map upload date.","type":[[["Date"]]],"meta":{"line":330,"file":"TMMap.js","path":"src/structures"}},{"name":"updated","description":"The map last update date.","type":[[["Date"]]],"meta":{"line":338,"file":"TMMap.js","path":"src/structures"}},{"name":"awards","description":"The map award count.","type":[[["number"]]],"meta":{"line":346,"file":"TMMap.js","path":"src/structures"}},{"name":"download","description":"The map download link.","type":[[["string"]]],"meta":{"line":354,"file":"TMMap.js","path":"src/structures"}}],"meta":{"line":252,"file":"TMMap.js","path":"src/structures"}},{"name":"TMMapKarma","description":"Represents the Map Voting stats.","construct":{"name":"TMMapKarma","params":[{"name":"map","description":"The map.","type":[[["TMMap"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"map","description":"The map instance.","type":[[["TMMap"]]],"meta":{"line":373,"file":"TMMap.js","path":"src/structures"}},{"name":"client","description":"The client instance.","type":[[["Client"]]],"meta":{"line":379,"file":"TMMap.js","path":"src/structures"}},{"name":"_data","description":"The map data.","access":"private","type":[[["Object"]]],"meta":{"line":386,"file":"TMMap.js","path":"src/structures"}},{"name":"uid","description":"The map Uid.","type":[[["string"]]],"meta":{"line":393,"file":"TMMap.js","path":"src/structures"}},{"name":"votes","description":"The number of votes.","type":[[["number"]]],"meta":{"line":401,"file":"TMMap.js","path":"src/structures"}},{"name":"average","description":"The average vote (between 0 and 100).","type":[[["number"]]],"meta":{"line":409,"file":"TMMap.js","path":"src/structures"}},{"name":"lastVoteDate","description":"The last vote date.","type":[[["Date"]]],"meta":{"line":417,"file":"TMMap.js","path":"src/structures"}}],"meta":{"line":363,"file":"TMMap.js","path":"src/structures"}},{"name":"TMMapLeaderboard","description":"Represents the map leaderboard.","construct":{"name":"TMMapLeaderboard","params":[{"name":"map","description":"The map.","type":[[["TMMap"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"map","description":"The map Instance","type":[[["TMMap"]]],"meta":{"line":435,"file":"TMMap.js","path":"src/structures"}},{"name":"client","description":"The Client instance","type":[[["Client"]]],"meta":{"line":441,"file":"TMMap.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":448,"file":"TMMap.js","path":"src/structures"}},{"name":"position","description":"The position of the player on this leaderboard","type":[[["number"]]],"meta":{"line":463,"file":"TMMap.js","path":"src/structures"}},{"name":"time","description":"The time in milliseconds of the player","type":[[["number"]]],"meta":{"line":471,"file":"TMMap.js","path":"src/structures"}},{"name":"date","description":"The date when the player get this leaderboard","type":[[["Date"]]],"meta":{"line":479,"file":"TMMap.js","path":"src/structures"}},{"name":"ghost","description":"The ghost URL","type":[[["string"]]],"meta":{"line":487,"file":"TMMap.js","path":"src/structures"}}],"methods":[{"name":"player","description":"The player that got this leaderboard","async":true,"returns":[[["Player"]]],"meta":{"line":455,"file":"TMMap.js","path":"src/structures"}}],"meta":{"line":425,"file":"TMMap.js","path":"src/structures"}},{"name":"TOTD","description":"Represents a Track Of The Day (TOTD).","construct":{"name":"TOTD","params":[{"name":"client","description":"The client.","type":[[["Client"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"client","description":"The client objet","type":[[["Client"]]],"meta":{"line":17,"file":"TOTD.js","path":"src/structures"}},{"name":"_data","description":"The data","access":"private","type":[[["Object"]]],"meta":{"line":24,"file":"TOTD.js","path":"src/structures"}},{"name":"map","description":"The map","type":[[["TMMap"]]],"meta":{"line":31,"file":"TOTD.js","path":"src/structures"}},{"name":"campaignId","description":"The campaign ID","type":[[["number"]]],"meta":{"line":39,"file":"TOTD.js","path":"src/structures"}},{"name":"weekDay","description":"The week day","type":[[["number"]]],"meta":{"line":47,"file":"TOTD.js","path":"src/structures"}},{"name":"monthDay","description":"The month day","type":[[["number"]]],"meta":{"line":55,"file":"TOTD.js","path":"src/structures"}},{"name":"leaderboardId","description":"The leaderboard ID","type":[[["string"]]],"meta":{"line":63,"file":"TOTD.js","path":"src/structures"}}],"meta":{"line":7,"file":"TOTD.js","path":"src/structures"}},{"name":"defaultOptions","description":"The default options.","props":[{"name":"_baseClient","description":"The base client instance.","access":"private","type":[[["BaseClient"]]],"meta":{"line":11,"file":"defaultOptions.js","path":"src/util"}},{"name":"api","description":"The default API options.","type":[[["defaultOptionsAPI"]]],"meta":{"line":17,"file":"defaultOptions.js","path":"src/util"}},{"name":"cache","description":"The default Cache options.","type":[[["defaultOptionsCache"]]],"meta":{"line":23,"file":"defaultOptions.js","path":"src/util"}},{"name":"dev","description":"Whether is in dev mode (Uses more logging traces in the core).","type":[[["boolean"]]],"meta":{"line":29,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":4,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsAPI","description":"The default API options.","props":[{"name":"_defaultOptions","description":"The default options.","access":"private","readonly":true,"type":[[["defaultOptions"]]],"meta":{"line":44,"file":"defaultOptions.js","path":"src/util"}},{"name":"paths","description":"The default API Paths options.","type":[[["defaultOptionsAPIPaths"]]],"meta":{"line":50,"file":"defaultOptions.js","path":"src/util"}},{"name":"useragent","description":"The default User Agent to use.","nullable":true,"type":[[["string"]]],"meta":{"line":56,"file":"defaultOptions.js","path":"src/util"}},{"name":"key","description":"The API Key to use. It must contains \"yourname:theactualsecretkey\".","nullable":true,"type":[[["string"]]],"meta":{"line":62,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":36,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsAPIPaths","description":"The default API Paths options.","props":[{"name":"_defaultOptionsAPI","description":"The default API options.","access":"private","readonly":true,"type":[[["defaultOptionsAPI"]]],"meta":{"line":77,"file":"defaultOptions.js","path":"src/util"}},{"name":"tmio","description":"The default Trackmania.io Paths options.","type":[[["defaultOptionsAPIPathsTMIO"]]],"meta":{"line":83,"file":"defaultOptions.js","path":"src/util"}},{"name":"tmx","description":"The default Trackmania.exchange Paths options.","type":[[["defaultOptionsAPIPathsTMX"]]],"meta":{"line":89,"file":"defaultOptions.js","path":"src/util"}},{"name":"mapVoting","description":"The default Map Voting API Paths options.","type":[[["defaultOptionsAPIPathsMapVoting"]]],"meta":{"line":95,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":69,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsAPIPathsTMIO","description":"The default Trackmania.io Paths options.","props":[{"name":"_defaultOptionsAPIPaths","description":"The default API Paths options.","access":"private","readonly":true,"type":[[["defaultOptionsAPIPaths"]]],"meta":{"line":110,"file":"defaultOptions.js","path":"src/util"}},{"name":"protocol","description":"The default Trackmania.io Protocol to use.","type":[[["string"]]],"meta":{"line":116,"file":"defaultOptions.js","path":"src/util"}},{"name":"host","description":"The default Trackmania.io Host to use.","type":[[["string"]]],"meta":{"line":122,"file":"defaultOptions.js","path":"src/util"}},{"name":"api","description":"The default Trackmania.io API Route to use.","type":[[["string"]]],"meta":{"line":128,"file":"defaultOptions.js","path":"src/util"}},{"name":"tabs","description":"The default Trackmania.io API Tabs to use.","type":[[["defaultOptionsAPIPathsTMIOTabs"]]],"meta":{"line":134,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":102,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsAPIPathsTMIOTabs","description":"The default Trackmania.io Tabs options.","props":[{"name":"_defaultOptionsAPIPathsTMIO","description":"The default Trackmania.io API options.","access":"private","readonly":true,"type":[[["defaultOptionsAPIPathsTMIO"]]],"meta":{"line":149,"file":"defaultOptions.js","path":"src/util"}},{"name":"totd","description":"TOTD Tab.","type":[[["string"]]],"meta":{"line":155,"file":"defaultOptions.js","path":"src/util"}},{"name":"cotd","description":"COTD Tab.","type":[[["string"]]],"meta":{"line":161,"file":"defaultOptions.js","path":"src/util"}},{"name":"comp","description":"Competitions Tab.","type":[[["string"]]],"meta":{"line":167,"file":"defaultOptions.js","path":"src/util"}},{"name":"news","description":"News Tab.","type":[[["string"]]],"meta":{"line":173,"file":"defaultOptions.js","path":"src/util"}},{"name":"campaigns","description":"Campaigns Tab.","type":[[["string"]]],"meta":{"line":179,"file":"defaultOptions.js","path":"src/util"}},{"name":"campaign","description":"Specific campaign Tab.","type":[[["string"]]],"meta":{"line":185,"file":"defaultOptions.js","path":"src/util"}},{"name":"officialCampaign","description":"Official campaign Tab.","type":[[["string"]]],"meta":{"line":191,"file":"defaultOptions.js","path":"src/util"}},{"name":"rooms","description":"Rooms Tab.","type":[[["string"]]],"meta":{"line":197,"file":"defaultOptions.js","path":"src/util"}},{"name":"room","description":"Specific room Tab.","type":[[["string"]]],"meta":{"line":203,"file":"defaultOptions.js","path":"src/util"}},{"name":"clubs","description":"Clubs Tab.","type":[[["string"]]],"meta":{"line":209,"file":"defaultOptions.js","path":"src/util"}},{"name":"club","description":"Specific club Tab.","type":[[["string"]]],"meta":{"line":215,"file":"defaultOptions.js","path":"src/util"}},{"name":"members","description":"Members Tab.","type":[[["string"]]],"meta":{"line":221,"file":"defaultOptions.js","path":"src/util"}},{"name":"activities","description":"Activities Tab.","type":[[["string"]]],"meta":{"line":227,"file":"defaultOptions.js","path":"src/util"}},{"name":"events","description":"Events Tab.","type":[[["string"]]],"meta":{"line":233,"file":"defaultOptions.js","path":"src/util"}},{"name":"player","description":"Specific player Tab.","type":[[["string"]]],"meta":{"line":239,"file":"defaultOptions.js","path":"src/util"}},{"name":"players","description":"Players Tab.","type":[[["string"]]],"meta":{"line":245,"file":"defaultOptions.js","path":"src/util"}},{"name":"trophies","description":"Trophies Tab.","type":[[["string"]]],"meta":{"line":251,"file":"defaultOptions.js","path":"src/util"}},{"name":"topTrophies","description":"Top Trophies Tab.","type":[[["string"]]],"meta":{"line":257,"file":"defaultOptions.js","path":"src/util"}},{"name":"leaderboard","description":"Leaderboard Tab.","type":[[["string"]]],"meta":{"line":263,"file":"defaultOptions.js","path":"src/util"}},{"name":"map","description":"Map Tab.","type":[[["string"]]],"meta":{"line":269,"file":"defaultOptions.js","path":"src/util"}},{"name":"matches","description":"Matches Tab.","type":[[["string"]]],"meta":{"line":275,"file":"defaultOptions.js","path":"src/util"}},{"name":"topMatchmaking","description":"Matchmaking Tab.","type":[[["string"]]],"meta":{"line":281,"file":"defaultOptions.js","path":"src/util"}},{"name":"match","description":"Specific match Tab.","type":[[["string"]]],"meta":{"line":287,"file":"defaultOptions.js","path":"src/util"}},{"name":"challenge","description":"Specific challenge Tab.","type":[[["string"]]],"meta":{"line":293,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":141,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsAPIPathsTMX","description":"The default Trackmania.exchange Paths options.","props":[{"name":"_defaultOptionsAPIPaths","description":"The default API Paths options.","access":"private","readonly":true,"type":[[["defaultOptionsAPIPaths"]]],"meta":{"line":308,"file":"defaultOptions.js","path":"src/util"}},{"name":"protocol","description":"The default Trackmania.exchange Protocol to use.","type":[[["string"]]],"meta":{"line":314,"file":"defaultOptions.js","path":"src/util"}},{"name":"host","description":"The default Trackmania.exchange Host to use.","type":[[["string"]]],"meta":{"line":320,"file":"defaultOptions.js","path":"src/util"}},{"name":"api","description":"The default Trackmania.exchange API Route to use.","type":[[["string"]]],"meta":{"line":326,"file":"defaultOptions.js","path":"src/util"}},{"name":"tabs","description":"The default Trackmania.exchange API Tabs to use.","type":[[["defaultOptionsAPIPathsTMXTabs"]]],"meta":{"line":332,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":300,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsAPIPathsTMXTabs","description":"The default Trackmania.exchange Tabs options.","props":[{"name":"_defaultOptionsAPIPathsTMX","description":"The default Trackmania.exchange API options.","access":"private","readonly":true,"type":[[["defaultOptionsAPIPathsTMX"]]],"meta":{"line":347,"file":"defaultOptions.js","path":"src/util"}},{"name":"mapInfo","description":"Map Info Tab.","type":[[["string"]]],"meta":{"line":353,"file":"defaultOptions.js","path":"src/util"}},{"name":"mapsDownload","description":"Map Download Tab.","type":[[["string"]]],"meta":{"line":359,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":339,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsAPIPathsMapVoting","description":"The default Map Voting Paths options.","props":[{"name":"_defaultOptionsAPIPaths","description":"The default API Paths options.","access":"private","readonly":true,"type":[[["defaultOptionsAPIPaths"]]],"meta":{"line":374,"file":"defaultOptions.js","path":"src/util"}},{"name":"protocol","description":"The default Map Voting Protocol to use.","type":[[["string"]]],"meta":{"line":380,"file":"defaultOptions.js","path":"src/util"}},{"name":"host","description":"The default Map Voting Host to use.","type":[[["string"]]],"meta":{"line":386,"file":"defaultOptions.js","path":"src/util"}},{"name":"tabs","description":"The default Map Voting API Tabs to use.","type":[[["defaultOptionsAPIPathsMapVotingTabs"]]],"meta":{"line":392,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":366,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsAPIPathsMapVotingTabs","description":"The default Map Voting Tabs options.","props":[{"name":"_defaultOptionsAPIPathsMapVoting","description":"The default Map Voting API options.","type":[[["defaultOptionsAPIPathsMapVoting"]]],"meta":{"line":405,"file":"defaultOptions.js","path":"src/util"}},{"name":"getPlayerVote","description":"Player Vote Tab.","type":[[["string"]]],"meta":{"line":411,"file":"defaultOptions.js","path":"src/util"}},{"name":"getVotes","description":"All Votes Tab.","type":[[["string"]]],"meta":{"line":417,"file":"defaultOptions.js","path":"src/util"}},{"name":"mostPlayerVoted","description":"Most Player Voted Tab.","type":[[["string"]]],"meta":{"line":423,"file":"defaultOptions.js","path":"src/util"}},{"name":"mostVotedMaps","description":"Most Map Voted Tab.","type":[[["string"]]],"meta":{"line":429,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":399,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsCache","description":"The default Cache options.","props":[{"name":"_defaultOptions","description":"The default Options.","access":"private","readonly":true,"type":[[["defaultOptions"]]],"meta":{"line":446,"file":"defaultOptions.js","path":"src/util"}},{"name":"enabled","description":"Whether to cache the API responses.","type":[[["boolean"]]],"meta":{"line":452,"file":"defaultOptions.js","path":"src/util"}},{"name":"ttl","description":"The cache TTL in minutes.","type":[[["number"]]],"meta":{"line":458,"file":"defaultOptions.js","path":"src/util"}},{"name":"leaderboardttl","description":"The cache TTL for leaderboards in minutes.","type":[[["number"]]],"meta":{"line":464,"file":"defaultOptions.js","path":"src/util"}},{"name":"roomttl","description":"The cache TTL for rooms in minutes.","type":[[["number"]]],"meta":{"line":470,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":438,"file":"defaultOptions.js","path":"src/util"}},{"name":"ReqUtil","description":"Util for API requests","access":"private","meta":{"line":5,"file":"ReqUtil.js","path":"src/util"}}],"interfaces":[],"typedefs":[{"name":"Constants","description":"Constants that can be used in an enum or object-like way.","type":[[["Object"]]],"props":[{"name":"GroupTypes","description":"All available player groups.","type":[[["PlayerGroup"]]]},{"name":"MMTypes","description":"All available matchmaking groups.","type":[[["MatchmakingGroup"]]]}],"meta":{"line":32,"file":"Constants.js","path":"src/util"}},{"name":"PlayerGroup","description":"All available player groups.\n* `nadeo` - All players from the Nadeo company\n* `tmgl` - All players from the TMGL competition\n* `tmwc21` - All players from the TrackMania World Cup 2021 competition\n* `sponsor` - All players who sponsors Trackmania.io and Openplanet\n* `team` - All players from the Trackmania.io and Openplanet team","type":[[["string"]]],"meta":{"line":3,"file":"Constants.js","path":"src/util"}},{"name":"MatchmakingGroup","description":"All available matchmaking groups.\n* `3v3`\n* `royal`","type":[[["string"]]],"meta":{"line":20,"file":"Constants.js","path":"src/util"}}],"externals":[]}